{"version":3,"file":"scratch-render.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0c2dd4f0c4d070cf1ac0","webpack:///./node_modules/twgl.js/dist/4.x/twgl-full.js","webpack:///src/Skin.js","webpack:///src/RenderConstants.js","webpack:///src/Silhouette.js","webpack:///src/ShaderManager.js","webpack:///./node_modules/events/events.js","webpack:///src/Rectangle.js","webpack:///src/EffectTransform.js","webpack:///./node_modules/scratch-svg-renderer/dist/web/scratch-svg-renderer.js","webpack:///./node_modules/unicode-trie/index.js","webpack:///src/index.js","webpack:///src/RenderWebGL.js","webpack:///./node_modules/hull.js/src/hull.js","webpack:///./node_modules/hull.js/src/intersect.js","webpack:///./node_modules/hull.js/src/grid.js","webpack:///./node_modules/hull.js/src/format.js","webpack:///./node_modules/hull.js/src/convex.js","webpack:///src/BitmapSkin.js","webpack:///src/Drawable.js","webpack:///./src/shaders/sprite.vert","webpack:///./src/shaders/sprite.frag","webpack:///src/PenSkin.js","webpack:///src/SVGSkin.js","webpack:///src/util/svg-text-bubble.js","webpack:///src/util/svg-text-wrapper.js","webpack:///src/util/text-wrapper.js","webpack:///./node_modules/linebreak/src/linebreaker.js","webpack:///./node_modules/tiny-inflate/index.js","webpack:///./node_modules/base64-js/lib/b64.js","webpack:///./node_modules/linebreak/src/classes.js","webpack:///./node_modules/linebreak/src/pairs.js","webpack:///./node_modules/grapheme-breaker/src/GraphemeBreaker.js","webpack:///./node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/buffer/node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/grapheme-breaker/src/classes.json","webpack:///./node_modules/xml-escape/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ScratchRender\"] = factory();\n\telse\n\t\troot[\"ScratchRender\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0c2dd4f0c4d070cf1ac0","/*!\n * @license twgl.js 4.4.0 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\n * Available via the MIT license.\n * see: http://github.com/greggman/twgl.js for details\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twgl\"] = factory();\n\telse\n\t\troot[\"twgl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.copyExistingProperties = copyExistingProperties;\nexports.copyNamedProperties = copyNamedProperties;\nexports.isBuffer = isBuffer;\nexports.isRenderbuffer = isRenderbuffer;\nexports.isShader = isShader;\nexports.isTexture = isTexture;\nexports.isSampler = isSampler;\nexports.warn = exports.error = void 0;\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function (name) {\n    var value = src[name];\n\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n */\n\n\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function (key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {\n      dst[key] = src[key];\n    }\n  });\n}\n\nvar error = _globalObject.default.console && _globalObject.default.console.error && typeof _globalObject.default.console.error === \"function\" ? _globalObject.default.console.error.bind(_globalObject.default.console) : function () {};\nexports.error = error;\nvar warn = _globalObject.default.console && _globalObject.default.console.warn && typeof _globalObject.default.console.warn === \"function\" ? _globalObject.default.console.warn.bind(_globalObject.default.console) : function () {};\nexports.warn = warn;\nvar repBuffer;\n\nfunction isBuffer(gl, t) {\n  if (!repBuffer) {\n    repBuffer = gl.createBuffer();\n  }\n\n  return t instanceof repBuffer.constructor;\n}\n\nvar repRenderbuffer;\n\nfunction isRenderbuffer(gl, t) {\n  if (!repRenderbuffer) {\n    repRenderbuffer = gl.createRenderbuffer();\n  }\n\n  return t instanceof repRenderbuffer.constructor;\n}\n\nvar repShader;\n\nfunction isShader(gl, t) {\n  if (!repShader) {\n    repShader = gl.createShader(gl.VERTEX_SHADER);\n  }\n\n  return t instanceof repShader.constructor;\n}\n\nvar repTexture;\n\nfunction isTexture(gl, t) {\n  if (!repTexture) {\n    repTexture = gl.createTexture();\n  }\n\n  return t instanceof repTexture.constructor;\n}\n\nvar repSampler;\n\nfunction isSampler(gl, t) {\n  if (!repSampler) {\n    if (gl.createSampler) {\n      repSampler = gl.createSampler();\n    } else {\n      return false; // it can't be a sampler if this is not WebGL2\n    }\n  }\n\n  return t instanceof repSampler.constructor;\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.getGLTypeForTypedArray = getGLTypeForTypedArray;\nexports.getGLTypeForTypedArrayType = getGLTypeForTypedArrayType;\nexports.getTypedArrayTypeForGLType = getTypedArrayTypeForGLType;\nexports.isArrayBuffer = void 0;\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level shader typed array related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.typedArray` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/typedArray\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar glTypeToTypedArray = {};\n{\n  var tt = glTypeToTypedArray;\n  tt[BYTE] = Int8Array;\n  tt[UNSIGNED_BYTE] = Uint8Array;\n  tt[SHORT] = Int16Array;\n  tt[UNSIGNED_SHORT] = Uint16Array;\n  tt[INT] = Int32Array;\n  tt[UNSIGNED_INT] = Uint32Array;\n  tt[FLOAT] = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5] = Uint16Array;\n  tt[HALF_FLOAT] = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV] = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV] = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV] = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8] = Uint32Array;\n}\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBuffer|ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferViewType} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw \"unsupported typed array type\";\n}\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getTypedArrayTypeForGLType(type) {\n  var CTOR = glTypeToTypedArray[type];\n\n  if (!CTOR) {\n    throw \"unknown gl type\";\n  }\n\n  return CTOR;\n}\n\nvar isArrayBuffer = _globalObject.default.SharedArrayBuffer ? function isArrayBufferOrSharedArrayBuffer(a) {\n  return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof _globalObject.default.SharedArrayBuffer);\n} : function isArrayBuffer(a) {\n  return a && a.buffer && a.buffer instanceof ArrayBuffer;\n};\nexports.isArrayBuffer = isArrayBuffer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = void 0;\nvar global = typeof global !== 'undefined' // eslint-disable-line\n? global // eslint-disable-line\n: typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {};\nexports.default = global;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.add = add;\nexports.copy = copy;\nexports.create = create;\nexports.cross = cross;\nexports.distance = distance;\nexports.distanceSq = distanceSq;\nexports.divide = divide;\nexports.divScalar = divScalar;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.length = length;\nexports.lengthSq = lengthSq;\nexports.mulScalar = mulScalar;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.normalize = normalize;\nexports.setDefaultType = setDefaultType;\nexports.subtract = subtract;\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v3 = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\nvar VecType = Float32Array;\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @return {Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction create(x, y, z) {\n  var dst = new VecType(3);\n\n  if (x) {\n    dst[0] = x;\n  }\n\n  if (y) {\n    dst[1] = y;\n  }\n\n  if (z) {\n    dst[2] = z;\n  }\n\n  return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  return dst;\n}\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * (1 - t) * a + t * b.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @memberOf module:twgl/v3\n */\n\n\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = (1 - t) * a[0] + t * b[0];\n  dst[1] = (1 - t) * a[1] + t * b[1];\n  dst[2] = (1 - t) * a[2] + t * b[2];\n  return dst;\n}\n/**\n * Mutiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  return dst;\n}\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  return dst;\n}\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector a cross b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n  var t1 = a[2] * b[0] - a[0] * b[2];\n  var t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n  return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction length(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distance(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distanceSq(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n  var lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  var len = Math.sqrt(lenSq);\n\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n  return dst;\n}\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n  return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n  return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n  return dst;\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.isWebGL1 = isWebGL1;\nexports.isWebGL2 = isWebGL2;\nexports.glEnumToString = void 0;\n\n/*\n * Copyright 2017, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\n\n\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc`);\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext|Extension} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @memberOf module:twgl\n */\n\n\nvar glEnumToString = function () {\n  var haveEnumsForType = {};\n  var enums = {};\n\n  function addEnums(gl) {\n    var type = gl.constructor.name;\n\n    if (!haveEnumsForType[type]) {\n      for (var key in gl) {\n        if (typeof gl[key] === 'number') {\n          var existing = enums[gl[key]];\n          enums[gl[key]] = existing ? \"\".concat(existing, \" | \").concat(key) : key;\n        }\n      }\n\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || \"0x\" + value.toString(16);\n  };\n}();\n\nexports.glEnumToString = glEnumToString;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttributeSetters = createAttributeSetters;\nexports.createProgram = createProgram;\nexports.createProgramFromScripts = createProgramFromScripts;\nexports.createProgramFromSources = createProgramFromSources;\nexports.createProgramInfo = createProgramInfo;\nexports.createProgramInfoFromProgram = createProgramInfoFromProgram;\nexports.createUniformSetters = createUniformSetters;\nexports.createUniformBlockSpecFromProgram = createUniformBlockSpecFromProgram;\nexports.createUniformBlockInfoFromProgram = createUniformBlockInfoFromProgram;\nexports.createUniformBlockInfo = createUniformBlockInfo;\nexports.createTransformFeedback = createTransformFeedback;\nexports.createTransformFeedbackInfo = createTransformFeedbackInfo;\nexports.bindTransformFeedbackInfo = bindTransformFeedbackInfo;\nexports.setAttributes = setAttributes;\nexports.setBuffersAndAttributes = setBuffersAndAttributes;\nexports.setUniforms = setUniforms;\nexports.setUniformBlock = setUniformBlock;\nexports.setBlockUniforms = setBlockUniforms;\nexports.bindUniformBlock = bindUniformBlock;\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\nvar error = helper.error;\nvar warn = helper.warn;\nvar getElementById = _globalObject.default && _globalObject.default.document && _globalObject.default.document.getElementById ? _globalObject.default.document.getElementById.bind(_globalObject.default.document) : function () {\n  return null;\n};\nvar FLOAT = 0x1406;\nvar FLOAT_VEC2 = 0x8B50;\nvar FLOAT_VEC3 = 0x8B51;\nvar FLOAT_VEC4 = 0x8B52;\nvar INT = 0x1404;\nvar INT_VEC2 = 0x8B53;\nvar INT_VEC3 = 0x8B54;\nvar INT_VEC4 = 0x8B55;\nvar BOOL = 0x8B56;\nvar BOOL_VEC2 = 0x8B57;\nvar BOOL_VEC3 = 0x8B58;\nvar BOOL_VEC4 = 0x8B59;\nvar FLOAT_MAT2 = 0x8B5A;\nvar FLOAT_MAT3 = 0x8B5B;\nvar FLOAT_MAT4 = 0x8B5C;\nvar SAMPLER_2D = 0x8B5E;\nvar SAMPLER_CUBE = 0x8B60;\nvar SAMPLER_3D = 0x8B5F;\nvar SAMPLER_2D_SHADOW = 0x8B62;\nvar FLOAT_MAT2x3 = 0x8B65;\nvar FLOAT_MAT2x4 = 0x8B66;\nvar FLOAT_MAT3x2 = 0x8B67;\nvar FLOAT_MAT3x4 = 0x8B68;\nvar FLOAT_MAT4x2 = 0x8B69;\nvar FLOAT_MAT4x3 = 0x8B6A;\nvar SAMPLER_2D_ARRAY = 0x8DC1;\nvar SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\nvar SAMPLER_CUBE_SHADOW = 0x8DC5;\nvar UNSIGNED_INT = 0x1405;\nvar UNSIGNED_INT_VEC2 = 0x8DC6;\nvar UNSIGNED_INT_VEC3 = 0x8DC7;\nvar UNSIGNED_INT_VEC4 = 0x8DC8;\nvar INT_SAMPLER_2D = 0x8DCA;\nvar INT_SAMPLER_3D = 0x8DCB;\nvar INT_SAMPLER_CUBE = 0x8DCC;\nvar INT_SAMPLER_2D_ARRAY = 0x8DCF;\nvar UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\nvar UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\nvar UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\nvar UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\nvar TEXTURE_2D = 0x0DE1;\nvar TEXTURE_CUBE_MAP = 0x8513;\nvar TEXTURE_3D = 0x806F;\nvar TEXTURE_2D_ARRAY = 0x8C1A;\nvar typeMap = {};\n/**\n * Returns the corresponding bind point for a given sampler type\n */\n\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n} // This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\n\nfunction floatSetter(gl, location) {\n  return function (v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function (v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function (v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  return utils.isWebGL2(gl) ? function (textureOrPair) {\n    var texture;\n    var sampler;\n\n    if (helper.isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function (texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  var units = new Int32Array(size);\n\n  for (var ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return utils.isWebGL2(gl) ? function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (textureOrPair, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      var texture;\n      var sampler;\n\n      if (helper.isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (texture, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT] = {\n  Type: Float32Array,\n  size: 4,\n  setter: floatSetter,\n  arraySetter: floatArraySetter\n};\ntypeMap[FLOAT_VEC2] = {\n  Type: Float32Array,\n  size: 8,\n  setter: floatVec2Setter\n};\ntypeMap[FLOAT_VEC3] = {\n  Type: Float32Array,\n  size: 12,\n  setter: floatVec3Setter\n};\ntypeMap[FLOAT_VEC4] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatVec4Setter\n};\ntypeMap[INT] = {\n  Type: Int32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[INT_VEC2] = {\n  Type: Int32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[INT_VEC3] = {\n  Type: Int32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[INT_VEC4] = {\n  Type: Int32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[UNSIGNED_INT] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: uintSetter,\n  arraySetter: uintArraySetter\n};\ntypeMap[UNSIGNED_INT_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: uintVec2Setter\n};\ntypeMap[UNSIGNED_INT_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: uintVec3Setter\n};\ntypeMap[UNSIGNED_INT_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: uintVec4Setter\n};\ntypeMap[BOOL] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[BOOL_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[BOOL_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[BOOL_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[FLOAT_MAT2] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatMat2Setter\n};\ntypeMap[FLOAT_MAT3] = {\n  Type: Float32Array,\n  size: 36,\n  setter: floatMat3Setter\n};\ntypeMap[FLOAT_MAT4] = {\n  Type: Float32Array,\n  size: 64,\n  setter: floatMat4Setter\n};\ntypeMap[FLOAT_MAT2x3] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat23Setter\n};\ntypeMap[FLOAT_MAT2x4] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat24Setter\n};\ntypeMap[FLOAT_MAT3x2] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat32Setter\n};\ntypeMap[FLOAT_MAT3x4] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat34Setter\n};\ntypeMap[FLOAT_MAT4x2] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat42Setter\n};\ntypeMap[FLOAT_MAT4x3] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat43Setter\n};\ntypeMap[SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[SAMPLER_2D_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_2D_ARRAY_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_CUBE_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\n\nfunction floatAttribSetter(gl, index) {\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribPointer(index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n\n    if (b.divisor !== undefined) {\n      gl.vertexAttribDivisor(index, b.divisor);\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribIPointer(index, b.numComponents || b.size, b.type || gl.INT, b.stride || 0, b.offset || 0);\n\n    if (b.divisor !== undefined) {\n      gl.vertexAttribDivisor(index, b.divisor);\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  var defaultSize = typeInfo.size;\n  var count = typeInfo.count;\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    var numComponents = b.size || b.numComponents || defaultSize;\n    var size = numComponents / count;\n    var type = b.type || gl.FLOAT;\n    var typeInfo = typeMap[type];\n    var stride = typeInfo.size * numComponents;\n    var normalize = b.normalize || false;\n    var offset = b.offset || 0;\n    var rowOffset = stride / count;\n\n    for (var i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(index + i, size, type, normalize, stride, offset + rowOffset * i);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\nvar attrTypeMap = {};\nattrTypeMap[FLOAT] = {\n  size: 4,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC2] = {\n  size: 8,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC3] = {\n  size: 12,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC4] = {\n  size: 16,\n  setter: floatAttribSetter\n};\nattrTypeMap[INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[FLOAT_MAT2] = {\n  size: 4,\n  setter: matAttribSetter,\n  count: 2\n};\nattrTypeMap[FLOAT_MAT3] = {\n  size: 9,\n  setter: matAttribSetter,\n  count: 3\n};\nattrTypeMap[FLOAT_MAT4] = {\n  size: 16,\n  setter: matAttribSetter,\n  count: 4\n}; // make sure we don't see a global gl\n\nvar gl = undefined; // eslint-disable-line\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nfunction addLineNumbers(src, lineOffset) {\n  lineOffset = lineOffset || 0;\n  ++lineOffset;\n  return src.split(\"\\n\").map(function (line, ndx) {\n    return ndx + lineOffset + \": \" + line;\n  }).join(\"\\n\");\n}\n\nvar spaceRE = /^[ \\t]*\\n/;\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n */\n\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  var errFn = opt_errorCallback || error; // Create the shader object\n\n  var shader = gl.createShader(shaderType); // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n\n  var lineOffset = 0;\n\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  } // Load the shader source\n\n\n  gl.shaderSource(shader, shaderSource); // Compile the shader\n\n  gl.compileShader(shader); // Check the compile status\n\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    var lastError = gl.getShaderInfoLog(shader);\n    errFn(addLineNumbers(shaderSource, lineOffset) + \"\\n*** Error compiling shader: \" + lastError);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments pased on\n */\n\n\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  var transformFeedbackVaryings;\n\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n\n    var opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n  }\n\n  var options = {\n    errorCallback: opt_errorCallback || error,\n    transformFeedbackVaryings: transformFeedbackVaryings\n  };\n\n  if (opt_attribs) {\n    var attribLocations = {};\n\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function (attrib, ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nvar defaultShaderType = [\"VERTEX_SHADER\", \"FRAGMENT_SHADER\"];\n\nfunction getShaderTypeFromScriptType(scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return gl.FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return gl.VERTEX_SHADER;\n  }\n\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function (shader) {\n    gl.deleteShader(shader);\n  });\n}\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var realShaders = [];\n  var newShaders = [];\n\n  for (var ndx = 0; ndx < shaders.length; ++ndx) {\n    var shader = shaders[ndx];\n\n    if (typeof shader === 'string') {\n      var elem = getElementById(shader);\n      var src = elem ? elem.text : shader;\n      var type = gl[defaultShaderType[ndx]];\n\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(elem.type) || type;\n      }\n\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n\n    if (helper.isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  var program = gl.createProgram();\n  realShaders.forEach(function (shader) {\n    gl.attachShader(program, shader);\n  });\n\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function (attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n\n  var varyings = progOptions.transformFeedbackVaryings;\n\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || gl.SEPARATE_ATTRIBS);\n  }\n\n  gl.linkProgram(program); // Check the link status\n\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n  if (!linked) {\n    // something went wrong with the link\n    var lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(\"Error in program linking:\" + lastError);\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  return program;\n}\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n */\n\n\nfunction createShaderFromScript(gl, scriptId, opt_shaderType, opt_errorCallback) {\n  var shaderSource = \"\";\n  var shaderScript = getElementById(scriptId);\n\n  if (!shaderScript) {\n    throw \"*** Error: unknown script element\" + scriptId;\n  }\n\n  shaderSource = shaderScript.text;\n  var shaderType = opt_shaderType || getShaderTypeFromScriptType(shaderScript.type);\n\n  if (!shaderType) {\n    throw \"*** Error: unknown shader type\";\n  }\n\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\n}\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromScripts(gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderScriptIds.length; ++ii) {\n    var shader = createShaderFromScript(gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromSources(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderSources.length; ++ii) {\n    var shader = loadShader(gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n */\n\n\nfunction isBuiltIn(info) {\n  var name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformSetters(gl, program) {\n  var textureUnit = 0;\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n\n  function createUniformSetter(program, uniformInfo) {\n    var location = gl.getUniformLocation(program, uniformInfo.name);\n    var isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\";\n    var type = uniformInfo.type;\n    var typeInfo = typeMap[type];\n\n    if (!typeInfo) {\n      throw \"unknown type: 0x\" + type.toString(16); // we should never get here.\n    }\n\n    var setter;\n\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      var unit = textureUnit;\n      textureUnit += uniformInfo.size;\n\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n\n    setter.location = location;\n    return setter;\n  }\n\n  var uniformSetters = {};\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n\n    var name = uniformInfo.name; // remove the array suffix.\n\n    if (name.substr(-3) === \"[0]\") {\n      name = name.substr(0, name.length - 3);\n    }\n\n    var setter = createUniformSetter(program, uniformInfo);\n    uniformSetters[name] = setter;\n  }\n\n  return uniformSetters;\n}\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bind/unbindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedbackInfo(gl, program) {\n  var info = {};\n  var numVaryings = gl.getProgramParameter(program, gl.TRANSFORM_FEEDBACK_VARYINGS);\n\n  for (var ii = 0; ii < numVaryings; ++ii) {\n    var varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size\n    };\n  }\n\n  return info;\n}\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\n\n\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      var buf = bufferInfo[name];\n\n      if (buf.offset) {\n        gl.bindBufferRange(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n/**\n * Unbinds buffers afetr transform feedback.\n *\n * Buffers can not be bound to 2 bind points so if you try to bind a buffer used\n * in a transform feedback as an ARRAY_BUFFER for an attribute it will fail.\n *\n * This function unbinds all buffers that were bound with {@link module:twgl.bindTransformFeedbackInfo}.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n */\n\n\nfunction unbindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, null);\n    }\n  }\n}\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  var tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null); // This is only needed because of a bug in Chrome 56. Will remove\n  // when chrome fixes it.\n\n  unbindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  return tf;\n}\n/**\n * @typedef {Object} UniformData\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanitory\n * @property {bool} usedByFragmentShader Self explanitory\n * @property {bool} used Self explanitory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformData = [];\n  var uniformIndices = [];\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      break;\n    } // REMOVE [0]?\n\n\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [[\"UNIFORM_TYPE\", \"type\"], [\"UNIFORM_SIZE\", \"size\"], // num elements\n  [\"UNIFORM_BLOCK_INDEX\", \"blockNdx\"], [\"UNIFORM_OFFSET\", \"offset\"]].forEach(function (pair) {\n    var pname = pair[0];\n    var key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function (value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n  var blockSpecs = {};\n  var numUniformBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n\n  for (var _ii = 0; _ii < numUniformBlocks; ++_ii) {\n    var name = gl.getActiveUniformBlockName(program, _ii);\n    var blockSpec = {\n      index: _ii,\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)\n    };\n    blockSpec.used = blockSpec.usedByVertexSahder || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData\n  };\n}\n\nvar arraySuffixRE = /\\[\\d+\\]\\.$/; // better way to check?\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object.<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uinformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  var blockSpecs = uniformBlockSpec.blockSpecs;\n  var uniformData = uniformBlockSpec.uniformData;\n  var blockSpec = blockSpecs[blockName];\n\n  if (!blockSpec) {\n    warn(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {}\n    };\n  }\n\n  var array = new ArrayBuffer(blockSpec.size);\n  var buffer = gl.createBuffer();\n  var uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n  var prefix = blockName + \".\";\n\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n\n  var uniforms = {};\n  blockSpec.uniformIndices.forEach(function (uniformNdx) {\n    var data = uniformData[uniformNdx];\n    var typeInfo = typeMap[data.type];\n    var Type = typeInfo.Type;\n    var length = data.size * typeInfo.size;\n    var name = data.name;\n\n    if (name.substr(0, prefix.length) === prefix) {\n      name = name.substr(prefix.length);\n    }\n\n    uniforms[name] = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\n  });\n  return {\n    name: blockName,\n    array: array,\n    asFloat: new Float32Array(array),\n    // for debugging\n    buffer: buffer,\n    uniforms: uniforms\n  };\n}\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n/**\n * Binds a unform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the valus into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\n\n\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  var uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  var blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n\n  if (blockSpec) {\n    var bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW);\n  }\n}\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  var uniforms = uniformBlockInfo.uniforms;\n\n  for (var name in values) {\n    var array = uniforms[name];\n\n    if (array) {\n      var value = values[name];\n\n      if (value.length) {\n        array.set(value);\n      } else {\n        array[0] = value;\n      }\n    }\n  }\n}\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniforms(setters, values) {\n  // eslint-disable-line\n  var actualSetters = setters.uniformSetters || setters;\n  var numArgs = arguments.length;\n\n  for (var andx = 1; andx < numArgs; ++andx) {\n    var vals = arguments[andx];\n\n    if (Array.isArray(vals)) {\n      var numValues = vals.length;\n\n      for (var ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, vals[ii]);\n      }\n    } else {\n      for (var name in vals) {\n        var setter = actualSetters[name];\n\n        if (setter) {\n          setter(vals[name]);\n        }\n      }\n    }\n  }\n}\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createAttributeSetters(gl, program) {\n  var attribSetters = {};\n  var numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    var attribInfo = gl.getActiveAttrib(program, ii);\n\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n\n    var index = gl.getAttribLocation(program, attribInfo.name);\n    var typeInfo = attrTypeMap[attribInfo.type];\n    var setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\n\n\nfunction setAttributes(setters, buffers) {\n  for (var name in buffers) {\n    var setter = setters[name];\n\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivilent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgrmaInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.vertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n\n    if (buffers.indices) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n    }\n  }\n}\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @propetty {module:twgl.UniformBlockSpec} [uniformBlockSpace] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfoFromProgram(gl, program) {\n  var uniformSetters = createUniformSetters(gl, program);\n  var attribSetters = createAttributeSetters(gl, program);\n  var programInfo = {\n    program: program,\n    uniformSetters: uniformSetters,\n    attribSetters: attribSetters\n  };\n\n  if (utils.isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the attributes. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfo(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var good = true;\n  shaderSources = shaderSources.map(function (source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      var script = getElementById(source);\n\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n\n    return source;\n  });\n\n  if (!good) {\n    return null;\n  }\n\n  var program = createProgramFromSources(gl, shaderSources, progOptions);\n\n  if (!program) {\n    return null;\n  }\n\n  return createProgramInfoFromProgram(gl, program);\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.axisRotate = axisRotate;\nexports.axisRotation = axisRotation;\nexports.copy = copy;\nexports.frustum = frustum;\nexports.getAxis = getAxis;\nexports.getTranslation = getTranslation;\nexports.identity = identity;\nexports.inverse = inverse;\nexports.lookAt = lookAt;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.ortho = ortho;\nexports.perspective = perspective;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotationX = rotationX;\nexports.rotationY = rotationY;\nexports.rotationZ = rotationZ;\nexports.scale = scale;\nexports.scaling = scaling;\nexports.setAxis = setAxis;\nexports.setDefaultType = setDefaultType;\nexports.setTranslation = setTranslation;\nexports.transformDirection = transformDirection;\nexports.transformNormal = transformNormal;\nexports.transformPoint = transformPoint;\nexports.translate = translate;\nexports.translation = translation;\nexports.transpose = transpose;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nvar MatType = Float32Array;\nvar tempV3a = v3.create();\nvar tempV3b = v3.create();\nvar tempV3c = v3.create();\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction negate(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = -m[0];\n  dst[1] = -m[1];\n  dst[2] = -m[2];\n  dst[3] = -m[3];\n  dst[4] = -m[4];\n  dst[5] = -m[5];\n  dst[6] = -m[6];\n  dst[7] = -m[7];\n  dst[8] = -m[8];\n  dst[9] = -m[9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n  return dst;\n}\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction copy(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = m[0];\n  dst[1] = m[1];\n  dst[2] = m[2];\n  dst[3] = m[3];\n  dst[4] = m[4];\n  dst[5] = m[5];\n  dst[6] = m[6];\n  dst[7] = m[7];\n  dst[8] = m[8];\n  dst[9] = m[9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n  return dst;\n}\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transpose(m, dst) {\n  dst = dst || new MatType(16);\n\n  if (dst === m) {\n    var t;\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  dst[0] = m00;\n  dst[1] = m10;\n  dst[2] = m20;\n  dst[3] = m30;\n  dst[4] = m01;\n  dst[5] = m11;\n  dst[6] = m21;\n  dst[7] = m31;\n  dst[8] = m02;\n  dst[9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n  return dst;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  var tmp_0 = m22 * m33;\n  var tmp_1 = m32 * m23;\n  var tmp_2 = m12 * m33;\n  var tmp_3 = m32 * m13;\n  var tmp_4 = m12 * m23;\n  var tmp_5 = m22 * m13;\n  var tmp_6 = m02 * m33;\n  var tmp_7 = m32 * m03;\n  var tmp_8 = m02 * m23;\n  var tmp_9 = m22 * m03;\n  var tmp_10 = m02 * m13;\n  var tmp_11 = m12 * m03;\n  var tmp_12 = m20 * m31;\n  var tmp_13 = m30 * m21;\n  var tmp_14 = m10 * m31;\n  var tmp_15 = m30 * m11;\n  var tmp_16 = m10 * m21;\n  var tmp_17 = m20 * m11;\n  var tmp_18 = m00 * m31;\n  var tmp_19 = m30 * m01;\n  var tmp_20 = m00 * m21;\n  var tmp_21 = m20 * m01;\n  var tmp_22 = m00 * m11;\n  var tmp_23 = m10 * m01;\n  var t0 = tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31 - (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  var t1 = tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31 - (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  var t2 = tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31 - (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  var t3 = tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21 - (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n  var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n  dst[0] = d * t0;\n  dst[1] = d * t1;\n  dst[2] = d * t2;\n  dst[3] = d * t3;\n  dst[4] = d * (tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30 - (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[5] = d * (tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30 - (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[6] = d * (tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30 - (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[7] = d * (tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20 - (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[8] = d * (tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33 - (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[9] = d * (tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33 - (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * (tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33 - (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * (tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23 - (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * (tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12 - (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * (tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22 - (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * (tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02 - (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * (tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12 - (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n  return dst;\n}\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4 + 0];\n  var a11 = a[4 + 1];\n  var a12 = a[4 + 2];\n  var a13 = a[4 + 3];\n  var a20 = a[8 + 0];\n  var a21 = a[8 + 1];\n  var a22 = a[8 + 2];\n  var a23 = a[8 + 3];\n  var a30 = a[12 + 0];\n  var a31 = a[12 + 1];\n  var a32 = a[12 + 2];\n  var a33 = a[12 + 3];\n  var b00 = b[0];\n  var b01 = b[1];\n  var b02 = b[2];\n  var b03 = b[3];\n  var b10 = b[4 + 0];\n  var b11 = b[4 + 1];\n  var b12 = b[4 + 2];\n  var b13 = b[4 + 3];\n  var b20 = b[8 + 0];\n  var b21 = b[8 + 1];\n  var b22 = b[8 + 2];\n  var b23 = b[8 + 3];\n  var b30 = b[12 + 0];\n  var b31 = b[12 + 1];\n  var b32 = b[12 + 2];\n  var b33 = b[12 + 3];\n  dst[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n  return dst;\n}\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} a once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n\n  if (a !== dst) {\n    dst[0] = a[0];\n    dst[1] = a[1];\n    dst[2] = a[2];\n    dst[3] = a[3];\n    dst[4] = a[4];\n    dst[5] = a[5];\n    dst[6] = a[6];\n    dst[7] = a[7];\n    dst[8] = a[8];\n    dst[9] = a[9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} [dst] vector..\n * @return {Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getTranslation(m, dst) {\n  dst = dst || v3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {Vec3} [dst] vector.\n * @return {Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getAxis(m, axis, dst) {\n  dst = dst || v3.create();\n  var off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If none a new one is created\n * @return {module:twgl/m4.Mat4} dst\n * @memberOf module:twgl/m4\n */\n\n\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy(a, dst);\n  }\n\n  var off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n  var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  var rangeInv = 1.0 / (zNear - zFar);\n  dst[0] = f / aspect;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = f;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 othogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 2 / (right - left);\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 / (top - bottom);\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  var dx = right - left;\n  var dy = top - bottom;\n  var dz = near - far;\n  dst[0] = 2 * near / dx;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 * near / dy;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = (left + right) / dx;\n  dst[9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {Vec3} eye The position of the eye.\n * @param {Vec3} target The position meant to be viewed.\n * @param {Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n  var xAxis = tempV3a;\n  var yAxis = tempV3b;\n  var zAxis = tempV3c;\n  v3.normalize(v3.subtract(eye, target, zAxis), zAxis);\n  v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\n  v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\n  dst[0] = xAxis[0];\n  dst[1] = xAxis[1];\n  dst[2] = xAxis[2];\n  dst[3] = 0;\n  dst[4] = yAxis[0];\n  dst[5] = yAxis[1];\n  dst[6] = yAxis[2];\n  dst[7] = 0;\n  dst[8] = zAxis[0];\n  dst[9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by translation by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[0] = m00;\n    dst[1] = m01;\n    dst[2] = m02;\n    dst[3] = m03;\n    dst[4] = m10;\n    dst[5] = m11;\n    dst[6] = m12;\n    dst[7] = m13;\n    dst[8] = m20;\n    dst[9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = c;\n  dst[6] = s;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[4] = c * m10 + s * m20;\n  dst[5] = c * m11 + s * m21;\n  dst[6] = c * m12 + s * m22;\n  dst[7] = c * m13 + s * m23;\n  dst[8] = c * m20 - s * m10;\n  dst[9] = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = 0;\n  dst[2] = -s;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = s;\n  dst[9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 - s * m20;\n  dst[1] = c * m01 - s * m21;\n  dst[2] = c * m02 - s * m22;\n  dst[3] = c * m03 - s * m23;\n  dst[8] = c * m20 + s * m00;\n  dst[9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = s;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = -s;\n  dst[5] = c;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 + s * m10;\n  dst[1] = c * m01 + s * m11;\n  dst[2] = c * m02 + s * m12;\n  dst[3] = c * m03 + s * m13;\n  dst[4] = c * m10 - s * m00;\n  dst[5] = c * m11 - s * m01;\n  dst[6] = c * m12 - s * m02;\n  dst[7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  dst[0] = xx + (1 - xx) * c;\n  dst[1] = x * y * oneMinusCosine + z * s;\n  dst[2] = x * z * oneMinusCosine - y * s;\n  dst[3] = 0;\n  dst[4] = x * y * oneMinusCosine - z * s;\n  dst[5] = yy + (1 - yy) * c;\n  dst[6] = y * z * oneMinusCosine + x * s;\n  dst[7] = 0;\n  dst[8] = x * z * oneMinusCosine + y * s;\n  dst[9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by rotation around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  var r00 = xx + (1 - xx) * c;\n  var r01 = x * y * oneMinusCosine + z * s;\n  var r02 = x * z * oneMinusCosine - y * s;\n  var r10 = x * y * oneMinusCosine - z * s;\n  var r11 = yy + (1 - yy) * c;\n  var r12 = y * z * oneMinusCosine + x * s;\n  var r20 = x * z * oneMinusCosine + y * s;\n  var r21 = y * z * oneMinusCosine - x * s;\n  var r22 = zz + (1 - zz) * c;\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = v[0];\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = v[1];\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix, scaling in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2];\n  dst[3] = v0 * m[0 * 4 + 3];\n  dst[4] = v1 * m[1 * 4 + 0];\n  dst[5] = v1 * m[1 * 4 + 1];\n  dst[6] = v1 * m[1 * 4 + 2];\n  dst[7] = v1 * m[1 * 4 + 3];\n  dst[8] = v2 * m[2 * 4 + 0];\n  dst[9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The point.\n * @param {Vec3} dst optional vec3 to store result\n * @return {Vec3} dst or new vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformPoint(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The direction.\n * @param {Vec3} dst optional Vec3 to store result\n * @return {Vec3} dst or new Vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformDirection(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {Vec3} v The normal.\n * @param {Vec3} [dst] The direction.\n * @return {Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformNormal(m, v, dst) {\n  dst = dst || v3.create();\n  var mi = inverse(m);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttribsFromArrays = createAttribsFromArrays;\nexports.createBuffersFromArrays = createBuffersFromArrays;\nexports.createBufferFromArray = createBufferFromArray;\nexports.createBufferFromTypedArray = createBufferFromTypedArray;\nexports.createBufferInfoFromArrays = createBufferInfoFromArrays;\nexports.setAttribInfoBufferFromArray = setAttribInfoBufferFromArray;\nexports.setAttributePrefix = setAttributePrefix;\nexports.setAttributeDefaults_ = setDefaults;\nexports.getNumComponents_ = getNumComponents;\nexports.getArray_ = getArray;\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level attribute and buffer related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/attributes\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  attribPrefix: \"\"\n};\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n * In otherwords I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\n\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n}\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (helper.isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n\n  type = type || gl.ARRAY_BUFFER;\n  var buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nvar texcoordRE = /coord|texture/i;\nvar colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  var numComponents;\n\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3; // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw \"Can not guess numComponents for attribute '\" + name + \"'. Tried \" + numComponents + \" but \" + length + \" values is not evenly divisible by \" + numComponents + \". You should specify it.\";\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (typedArrays.isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (typedArrays.isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array\n    };\n  }\n\n  var Type = array.type;\n\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n\n  return new Type(array.data);\n}\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of compoments of an array\n * @typedef {Object} FullArraySpec\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} type The type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createAttribsFromArrays(gl, arrays) {\n  var attribs = {};\n  Object.keys(arrays).forEach(function (arrayName) {\n    if (!isIndices(arrayName)) {\n      var array = arrays[arrayName];\n      var attribName = array.attrib || array.name || array.attribName || defaults.attribPrefix + arrayName;\n      var buffer;\n      var type;\n      var normalization;\n      var numComponents;\n      var numValues;\n\n      if (typeof array === \"number\" || typeof array.data === \"number\") {\n        numValues = array.data || array;\n        var arrayType = array.type || Float32Array;\n        var numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n        type = typedArrays.getGLTypeForTypedArrayType(arrayType);\n        normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n        numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n        buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, numBytes, array.drawType || gl.STATIC_DRAW);\n      } else {\n        var typedArray = makeTypedArray(array, arrayName);\n        buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n        type = typedArrays.getGLTypeForTypedArray(typedArray);\n        normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n        numComponents = getNumComponents(array, arrayName);\n        numValues = typedArray.length;\n      }\n\n      attribs[attribName] = {\n        buffer: buffer,\n        numComponents: numComponents,\n        type: type,\n        normalize: normalization,\n        stride: array.stride || 0,\n        offset: array.offset || 0,\n        divisor: array.divisor === undefined ? undefined : array.divisor,\n        drawType: array.drawType\n      };\n    }\n  });\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  return attribs;\n}\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically upate the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably ineffient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\n\n\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n\n  if (offset !== undefined) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(gl.ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, gl.ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === gl.BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.INT) return 4; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_INT) return 4; // eslint-disable-line\n\n  if (type === gl.FLOAT) return 4; // eslint-disable-line\n\n  return 0;\n}\n/**\n * tries to get the number of elements from a set of arrays.\n */\n\n\nvar positionKeys = ['position', 'positions', 'a_position'];\n\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  var key;\n\n  for (var _ii = 0; _ii < positionKeys.length; ++_ii) {\n    key = positionKeys[_ii];\n\n    if (key in arrays) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n\n  var array = arrays[key];\n  var length = getArray(array).length;\n  var numComponents = getNumComponents(array, key);\n  var numElements = length / numComponents;\n\n  if (length % numComponents > 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  var key;\n  var ii;\n\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n\n    if (key in attribs) {\n      break;\n    }\n\n    key = defaults.attribPrefix + key;\n\n    if (key in attribs) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n\n  var attrib = attribs[key];\n  gl.bindBuffer(gl.ARRAY_BUFFER, attrib.buffer);\n  var numBytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  var bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  var totalElements = numBytes / bytesPerValue;\n  var numComponents = attrib.numComponents || attrib.size; // TODO: check stride\n\n  var numElements = totalElements / numComponents;\n\n  if (numElements % 1 !== 0) {\n    throw \"numComponents \" + numComponents + \" not correct for length \" + length;\n  }\n\n  return numElements;\n}\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs approriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also by TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or augmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\n *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferInfoFromArrays(gl, arrays) {\n  var bufferInfo = {\n    attribs: createAttribsFromArrays(gl, arrays)\n  };\n  var indices = arrays.indices;\n\n  if (indices) {\n    var newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, gl.ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(newIndices);\n  } else {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that constains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be dervied other wise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromArray(gl, array, arrayName) {\n  var type = arrayName === \"indices\" ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n  var typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBuffersFromArrays(gl, arrays) {\n  var buffers = {};\n  Object.keys(arrays).forEach(function (key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  }); // Ugh!\n\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = typedArrays.getGLTypeForTypedArray(makeTypedArray(arrays.indices), 'indices');\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.setTextureDefaults_ = setDefaults;\nexports.createSampler = createSampler;\nexports.createSamplers = createSamplers;\nexports.setSamplerParameters = setSamplerParameters;\nexports.createTexture = createTexture;\nexports.setEmptyTexture = setEmptyTexture;\nexports.setTextureFromArray = setTextureFromArray;\nexports.loadTextureFromUrl = loadTextureFromUrl;\nexports.setTextureFromElement = setTextureFromElement;\nexports.setTextureFilteringForSize = setTextureFilteringForSize;\nexports.setTextureParameters = setTextureParameters;\nexports.setDefaultTextureColor = setDefaultTextureColor;\nexports.createTextures = createTextures;\nexports.resizeTexture = resizeTexture;\nexports.getNumComponentsForFormat = getNumComponentsForFormat;\nexports.getBytesPerElementForInternalFormat = getBytesPerElementForInternalFormat;\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar _globalObject = _interopRequireDefault(__webpack_require__(2));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Low level texture related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.textures` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/textures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined\n};\nvar isArrayBuffer = typedArrays.isArrayBuffer; // Should we make this on demand?\n\nvar ctx = _globalObject.default.document && _globalObject.default.document.createElement ? _globalObject.default.document.createElement(\"canvas\").getContext(\"2d\") : null; // NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an imagebitmap to be cut. Unfortunately cutting an imagebitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\n\nvar ALPHA = 0x1906;\nvar RGB = 0x1907;\nvar RGBA = 0x1908;\nvar LUMINANCE = 0x1909;\nvar LUMINANCE_ALPHA = 0x190A;\nvar DEPTH_COMPONENT = 0x1902;\nvar DEPTH_STENCIL = 0x84F9;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\nvar R8 = 0x8229;\nvar R8_SNORM = 0x8F94;\nvar R16F = 0x822D;\nvar R32F = 0x822E;\nvar R8UI = 0x8232;\nvar R8I = 0x8231;\nvar RG16UI = 0x823A;\nvar RG16I = 0x8239;\nvar RG32UI = 0x823C;\nvar RG32I = 0x823B;\nvar RG8 = 0x822B;\nvar RG8_SNORM = 0x8F95;\nvar RG16F = 0x822F;\nvar RG32F = 0x8230;\nvar RG8UI = 0x8238;\nvar RG8I = 0x8237;\nvar R16UI = 0x8234;\nvar R16I = 0x8233;\nvar R32UI = 0x8236;\nvar R32I = 0x8235;\nvar RGB8 = 0x8051;\nvar SRGB8 = 0x8C41;\nvar RGB565 = 0x8D62;\nvar RGB8_SNORM = 0x8F96;\nvar R11F_G11F_B10F = 0x8C3A;\nvar RGB9_E5 = 0x8C3D;\nvar RGB16F = 0x881B;\nvar RGB32F = 0x8815;\nvar RGB8UI = 0x8D7D;\nvar RGB8I = 0x8D8F;\nvar RGB16UI = 0x8D77;\nvar RGB16I = 0x8D89;\nvar RGB32UI = 0x8D71;\nvar RGB32I = 0x8D83;\nvar RGBA8 = 0x8058;\nvar SRGB8_ALPHA8 = 0x8C43;\nvar RGBA8_SNORM = 0x8F97;\nvar RGB5_A1 = 0x8057;\nvar RGBA4 = 0x8056;\nvar RGB10_A2 = 0x8059;\nvar RGBA16F = 0x881A;\nvar RGBA32F = 0x8814;\nvar RGBA8UI = 0x8D7C;\nvar RGBA8I = 0x8D8E;\nvar RGB10_A2UI = 0x906F;\nvar RGBA16UI = 0x8D76;\nvar RGBA16I = 0x8D88;\nvar RGBA32I = 0x8D82;\nvar RGBA32UI = 0x8D70;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar DEPTH_COMPONENT24 = 0x81A6;\nvar DEPTH_COMPONENT32F = 0x8CAC;\nvar DEPTH32F_STENCIL8 = 0x8CAD;\nvar DEPTH24_STENCIL8 = 0x88F0;\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar HALF_FLOAT_OES = 0x8D61; // Thanks Khronos for making this different >:(\n\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar RG = 0x8227;\nvar RG_INTEGER = 0x8228;\nvar RED = 0x1903;\nvar RED_INTEGER = 0x8D94;\nvar RGB_INTEGER = 0x8D98;\nvar RGBA_INTEGER = 0x8D99;\nvar formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  var f = formatInfo;\n  f[ALPHA] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE_ALPHA] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RED] = {\n    numColorComponents: 1\n  };\n  f[RED_INTEGER] = {\n    numColorComponents: 1\n  };\n  f[RG] = {\n    numColorComponents: 2\n  };\n  f[RG_INTEGER] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGB_INTEGER] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RGBA_INTEGER] = {\n    numColorComponents: 4\n  };\n  f[DEPTH_COMPONENT] = {\n    numColorComponents: 1\n  };\n  f[DEPTH_STENCIL] = {\n    numColorComponents: 2\n  };\n}\nvar textureInternalFormatInfo = {};\n{\n  // NOTE: these properties need unique names so we can let Uglify mangle the name.\n  var t = textureInternalFormatInfo; // unsized formats\n\n  t[ALPHA] = {\n    textureFormat: ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE] = {\n    textureFormat: LUMINANCE,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE_ALPHA] = {\n    textureFormat: LUMINANCE_ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [2, 4, 4, 8],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[RGB] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 6, 6, 12, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGBA] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 8, 8, 16, 2, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1]\n  }; // sized formats\n\n  t[R8] = {\n    textureFormat: RED,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 1,\n    type: UNSIGNED_BYTE\n  };\n  t[R8_SNORM] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 1,\n    type: BYTE\n  };\n  t[R16F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[R32F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT\n  };\n  t[R8UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 1,\n    type: UNSIGNED_BYTE\n  };\n  t[R8I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 1,\n    type: BYTE\n  };\n  t[R16UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: UNSIGNED_SHORT\n  };\n  t[R16I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: SHORT\n  };\n  t[R32UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT\n  };\n  t[R32I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: INT\n  };\n  t[RG8] = {\n    textureFormat: RG,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 2,\n    type: UNSIGNED_BYTE\n  };\n  t[RG8_SNORM] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 2,\n    type: BYTE\n  };\n  t[RG16F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [8, 4],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RG32F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: FLOAT\n  };\n  t[RG8UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: UNSIGNED_BYTE\n  };\n  t[RG8I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 2,\n    type: BYTE\n  };\n  t[RG16UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_SHORT\n  };\n  t[RG16I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: SHORT\n  };\n  t[RG32UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: UNSIGNED_INT\n  };\n  t[RG32I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: INT\n  };\n  t[RGB8] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[SRGB8] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[RGB565] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGB8_SNORM] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 3,\n    type: BYTE\n  };\n  t[R11F_G11F_B10F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV]\n  };\n  t[RGB9_E5] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV]\n  };\n  t[RGB16F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGB32F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: FLOAT\n  };\n  t[RGB8UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 3,\n    type: UNSIGNED_BYTE\n  };\n  t[RGB8I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 3,\n    type: BYTE\n  };\n  t[RGB16UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 6,\n    type: UNSIGNED_SHORT\n  };\n  t[RGB16I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 6,\n    type: SHORT\n  };\n  t[RGB32UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: UNSIGNED_INT\n  };\n  t[RGB32I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 12,\n    type: INT\n  };\n  t[RGBA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[SRGB8_ALPHA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[RGBA8_SNORM] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: BYTE\n  };\n  t[RGB5_A1] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2, 4],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA4] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4]\n  };\n  t[RGB10_A2] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_2_10_10_10_REV\n  };\n  t[RGBA16F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [16, 8],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGBA32F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: FLOAT\n  };\n  t[RGBA8UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_BYTE\n  };\n  t[RGBA8I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: BYTE\n  };\n  t[RGB10_A2UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_2_10_10_10_REV\n  };\n  t[RGBA16UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: UNSIGNED_SHORT\n  };\n  t[RGBA16I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 8,\n    type: SHORT\n  };\n  t[RGBA32I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: INT\n  };\n  t[RGBA32UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 16,\n    type: UNSIGNED_INT\n  }; // Sized Internal\n\n  t[DEPTH_COMPONENT16] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2, 4],\n    type: [UNSIGNED_SHORT, UNSIGNED_INT]\n  };\n  t[DEPTH_COMPONENT24] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT\n  };\n  t[DEPTH_COMPONENT32F] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT\n  };\n  t[DEPTH24_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: UNSIGNED_INT_24_8\n  };\n  t[DEPTH32F_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: 4,\n    type: FLOAT_32_UNSIGNED_INT_24_8_REV\n  };\n  Object.keys(t).forEach(function (internalFormat) {\n    var info = t[internalFormat];\n    info.bytesPerElementMap = {};\n\n    if (Array.isArray(info.bytesPerElement)) {\n      info.bytesPerElement.forEach(function (bytesPerElement, ndx) {\n        var type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    } else {\n      var type = info.type;\n      info.bytesPerElementMap[type] = info.bytesPerElement;\n    }\n  });\n}\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\n\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  var bytesPerElement = info.bytesPerElementMap[type];\n\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n\n  return bytesPerElement;\n}\n/**\n * Gets the format for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {{format:number, type:number}} the corresponding format and type\n */\n\n\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return {\n    format: info.textureFormat,\n    type: Array.isArray(info.type) ? info.type[0] : info.type\n  };\n}\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n */\n\n\nfunction isPowerOf2(value) {\n  return (value & value - 1) === 0;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n */\n\n\nfunction canGenerateMipmap(gl, width, height, internalFormat\n/*, type */\n) {\n  if (!utils.isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.colorRenderable && info.textureFilterable;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {boolean} true if we can generate mips\n */\n\n\nfunction canFilter(internalFormat\n/*, type */\n) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.textureFilterable;\n}\n/**\n * Gets the number of compontents for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\n\n\nfunction getNumComponentsForFormat(format) {\n  var info = formatInfo[format];\n\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n\n  return info.numColorComponents;\n}\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n */\n\n\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer(src)) {\n    return typedArrays.getGLTypeForTypedArray(src);\n  }\n\n  return defaultType || gl.UNSIGNED_BYTE;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n\n  if (!width && !height) {\n    var size = Math.sqrt(numElements / (target === gl.TEXTURE_CUBE_MAP ? 6 : 1));\n\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\n\n\nfunction setDefaultTextureColor(color) {\n  defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documentented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {(number[]|ArrayBufferView)} color color used as temporary 1x1 pixel color for textures loaded async when src is a string.\n *    If it's a JavaScript array assumes color is 0 to 1 like most GL colors as in `[1, 0, 0, 1] = red=1, green=0, blue=0, alpha=0`.\n *    Defaults to `[0.5, 0.75, 1, 1]`. See {@link module:twgl.setDefaultTextureColor}. If `false` texture is set. Can be used to re-load a texture\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediatley. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then eact entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n// NOTE: While querying GL is considered slow it's not remotely as slow\n// as uploading a texture. On top of that you're unlikely to call this in\n// a perf critical loop. Even if upload a texture every frame that's unlikely\n// to be more than 1 or 2 textures a frame. In other words, the benefits of\n// making the API easy to use outweigh any supposed perf benefits\n//\n// Also note I get that having one global of these is bad practice.\n// As long as it's used correctly it means no garbage which probably\n// doesn't matter when dealing with textures but old habits die hard.\n\n\nvar lastPackState = {};\n/**\n * Saves any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\nfunction savePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    lastPackState.colorspaceConversion = gl.getParameter(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL);\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    lastPackState.premultiplyAlpha = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    lastPackState.flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n/**\n * Restores any packing state that was set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction restorePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY);\n  }\n}\n/**\n * Saves state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction saveSkipState(gl) {\n  lastPackState.unpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n\n  if (utils.isWebGL2(gl)) {\n    lastPackState.unpackRowLength = gl.getParameter(gl.UNPACK_ROW_LENGTH);\n    lastPackState.unpackImageHeight = gl.getParameter(gl.UNPACK_IMAGE_HEIGHT);\n    lastPackState.unpackSkipPixels = gl.getParameter(gl.UNPACK_SKIP_PIXELS);\n    lastPackState.unpackSkipRows = gl.getParameter(gl.UNPACK_SKIP_ROWS);\n    lastPackState.unpackSkipImages = gl.getParameter(gl.UNPACK_SKIP_IMAGES);\n  }\n}\n/**\n * Restores state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n */\n\n\nfunction restoreSkipState(gl) {\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, lastPackState.unpackAlignment);\n\n  if (utils.isWebGL2(gl)) {\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, lastPackState.unpackRowLength);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, lastPackState.unpackImageHeight);\n    gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, lastPackState.unpackSkipPixels);\n    gl.pixelStorei(gl.UNPACK_SKIP_ROWS, lastPackState.unpackSkipRows);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, lastPackState.unpackSkipImages);\n  }\n}\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParamteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n */\n\n\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.minMag);\n  }\n\n  if (options.min) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.min);\n  }\n\n  if (options.mag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.mag);\n  }\n\n  if (options.wrap) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrap);\n\n    if (target === gl.TEXTURE_3D || helper.isSampler(gl, target)) {\n      parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrapR);\n  }\n\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrapS);\n  }\n\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrapT);\n  }\n\n  if (options.minLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_LOD, options.minLod);\n  }\n\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LOD, options.maxLod);\n  }\n\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureParameters(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n */\n\n\nfunction createSampler(gl, options) {\n  var sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n */\n\n\nfunction createSamplers(gl, samplerOptions) {\n  var samplers = {};\n  Object.keys(samplerOptions).forEach(function (name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n */\n\n\nfunction make1Pixel(color) {\n  color = color || defaults.textureColor;\n\n  if (isArrayBuffer(color)) {\n    return color;\n  }\n\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @param {number} [type] The type parameter for texImage2D etc..\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type) {\n  options = options || defaults.textureOptions;\n  internalFormat = internalFormat || gl.RGBA;\n  type = type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n\n  if (canGenerateMipmap(gl, width, height, internalFormat, type)) {\n    gl.generateMipmap(target);\n  } else {\n    var filtering = canFilter(internalFormat, type) ? gl.LINEAR : gl.NEAREST;\n    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || options.auto === undefined && options.level === undefined;\n}\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n */\n\n\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [gl.TEXTURE_CUBE_MAP_POSITIVE_X, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, gl.TEXTURE_CUBE_MAP_POSITIVE_Y, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, gl.TEXTURE_CUBE_MAP_POSITIVE_Z, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z];\n}\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundent but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n */\n\n\nfunction getCubeFacesWithNdx(gl, options) {\n  var faces = getCubeFaceOrder(gl, options); // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n\n  var facesWithNdx = faces.map(function (face, ndx) {\n    return {\n      face: face,\n      ndx: ndx\n    };\n  });\n  facesWithNdx.sort(function (a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\n\n\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  var level = options.level || 0;\n  var width = element.width;\n  var height = element.height;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // guess the parts\n    var imgWidth = element.width;\n    var imgHeight = element.height;\n    var size;\n    var slices;\n\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      }); // Free up the canvas memory\n\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (_globalObject.default.createImageBitmap) {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size; // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be unrenderable.\n\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n\n        _globalObject.default.createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none'\n        }).then(function (imageBitmap) {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n          }\n        });\n      });\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    var smallest = Math.min(element.width, element.height);\n    var largest = Math.max(element.width, element.height);\n    var depth = largest / smallest;\n\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n\n    var xMult = element.width === largest ? 1 : 0;\n    var yMult = element.height === largest ? 1 : 0;\n    saveSkipState(gl);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n\n    for (var d = 0; d < depth; ++d) {\n      var srcX = d * smallest * xMult;\n      var srcY = d * smallest * yMult;\n      gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(gl.UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n\n    restoreSkipState(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n\n  restorePackState(gl, options);\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {}\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n */\n\n\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  var img;\n\n  if (_globalObject.default.Image) {\n    img = new _globalObject.default.Image();\n    crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\n\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    var clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError); // eslint-disable-line\n\n      img.removeEventListener('load', onLoad); // eslint-disable-line\n\n      img = null;\n    };\n\n    var onError = function onError() {\n      var msg = \"couldn't load image: \" + url;\n      helper.error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    var onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (_globalObject.default.ImageBitmap) {\n    var err;\n    var bm;\n\n    var cb = function cb() {\n      callback(err, bm);\n    };\n\n    var options = {};\n\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n\n    fetch(url, options).then(function (response) {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.blob();\n    }).then(function (blob) {\n      return _globalObject.default.createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none'\n      });\n    }).then(function (bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function (e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n\n  return img;\n}\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n */\n\n\nfunction isTexImageSource(obj) {\n  return _globalObject.default.ImageBitmap && obj instanceof _globalObject.default.ImageBitmap || _globalObject.default.ImageData && obj instanceof _globalObject.default.ImageData || _globalObject.default.HTMLElement && obj instanceof _globalObject.default.HTMLElement;\n}\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n */\n\n\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function () {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n\n  if (options.color === false) {\n    return;\n  } // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n\n\n  var color = make1Pixel(options.color);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, gl.RGBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  } else {\n    gl.texImage2D(target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  }\n}\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} souce image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as approriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var img = loadAndUseImage(options.src, options.crossOrigin, function (err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n\n  if (target !== gl.TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = 6;\n  var errors = [];\n  var faces = getCubeFaceOrder(gl, options);\n  var imgs; // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex); // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder(gl).forEach(function (otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D_ARRAY;\n\n  if (target !== gl.TEXTURE_3D && target !== gl.TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = urls.length;\n  var errors = [];\n  var imgs; // eslint-disable-line\n\n  var level = options.level || 0;\n  var width = options.width;\n  var height = options.height;\n  var depth = urls.length;\n  var firstImage = true;\n\n  function uploadImg(slice) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        savePackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null); // put it in every slice otherwise some slices will be 0,0,0,0\n\n          for (var s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          var src = img;\n\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src); // free the canvas memory\n\n          if (src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        restorePackState(gl, options);\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var width = options.width;\n  var height = options.height;\n  var depth = options.depth;\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n\n  if (!isArrayBuffer(src)) {\n    var Type = typedArrays.getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  var bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  var numElements = src.byteLength / bytesPerElement; // TODO: check UNPACK_ALIGNMENT?\n\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + utils.glEnumToString(gl, format);\n  }\n\n  var dimensions;\n\n  if (target === gl.TEXTURE_3D) {\n    if (!width && !height && !depth) {\n      var size = Math.cbrt(numElements);\n\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n\n  saveSkipState(gl);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    var elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    var faceSize = numElements / 6 * elementsPerElement;\n    getCubeFacesWithNdx(gl, options).forEach(function (f) {\n      var offset = faceSize * f.ndx;\n      var data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n\n  restorePackState(gl, options);\n  restoreSkipState(gl);\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type\n  };\n}\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setEmptyTexture(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n\n  restorePackState(gl, options);\n}\n/**\n * Creates a texture based on the options passed in.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  var tex = gl.createTexture();\n  var target = options.target || gl.TEXTURE_2D;\n  var width = options.width || 1;\n  var height = options.height || 1;\n  var internalFormat = options.internalFormat || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var type = options.type || formatType.type;\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // this should have been the default for CUBEMAPS :(\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  var src = options.src;\n\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n\n    if (typeof src === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer(src) || Array.isArray(src) && (typeof src[0] === 'number' || Array.isArray(src[0]) || isArrayBuffer(src[0]))) {\n      var dimensions = setTextureFromArray(gl, tex, src, options);\n      width = dimensions.width;\n      height = dimensions.height;\n      type = dimensions.type;\n    } else if (Array.isArray(src) && (typeof src[0] === 'string' || isTexImageSource(src[0]))) {\n      if (target === gl.TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else if (isTexImageSource(src)) {\n      setTextureFromElement(gl, tex, src, options);\n      width = src.width;\n      height = src.height;\n    } else {\n      throw \"unsupported src type\";\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @memberOf module:twgl/textures\n */\n\n\nfunction resizeTexture(gl, tex, options, width, height) {\n  width = width || options.width;\n  height = height || options.height;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type;\n  var src = options.src;\n\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer(src) || Array.isArray(src) && typeof src[0] === 'number') {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n */\n\n\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' || Array.isArray(src) && typeof src[0] === 'string';\n}\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  var numDownloading = 0;\n  var errors = [];\n  var textures = {};\n  var images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function () {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function (name) {\n    var options = textureOptions[name];\n    var onLoadFn;\n\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function onLoadFn(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n\n        if (err) {\n          errors.push(err);\n        }\n\n        callCallbackIfReady();\n      };\n\n      ++numDownloading;\n    }\n\n    textures[name] = createTexture(gl, options, onLoadFn);\n  }); // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n\n  callCallbackIfReady();\n  return textures;\n} // Using quotes prevents Uglify from changing the names.\n// No speed diff AFAICT.\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  m4: true,\n  v3: true,\n  primitives: true\n};\nexports.primitives = exports.v3 = exports.m4 = void 0;\n\nvar m4 = _interopRequireWildcard(__webpack_require__(6));\n\nexports.m4 = m4;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nexports.v3 = v3;\n\nvar primitives = _interopRequireWildcard(__webpack_require__(10));\n\nexports.primitives = primitives;\n\nvar _twgl = __webpack_require__(11);\n\nObject.keys(_twgl).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _twgl[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.create3DFVertices = create3DFVertices;\nexports.createAugmentedTypedArray = createAugmentedTypedArray;\nexports.createCubeVertices = createCubeVertices;\nexports.createPlaneVertices = createPlaneVertices;\nexports.createSphereVertices = createSphereVertices;\nexports.createTruncatedConeVertices = createTruncatedConeVertices;\nexports.createXYQuadVertices = createXYQuadVertices;\nexports.createCresentVertices = createCresentVertices;\nexports.createCylinderVertices = createCylinderVertices;\nexports.createTorusVertices = createTorusVertices;\nexports.createDiscVertices = createDiscVertices;\nexports.deindexVertices = deindexVertices;\nexports.flattenNormals = flattenNormals;\nexports.makeRandomVertexColors = makeRandomVertexColors;\nexports.reorientDirections = reorientDirections;\nexports.reorientNormals = reorientNormals;\nexports.reorientPositions = reorientPositions;\nexports.reorientVertices = reorientVertices;\nexports.concatVertices = concatVertices;\nexports.duplicateVertices = duplicateVertices;\nexports.createDiscBuffers = exports.createDiscBufferInfo = exports.createTorusBuffers = exports.createTorusBufferInfo = exports.createCylinderBuffers = exports.createCylinderBufferInfo = exports.createCresentBuffers = exports.createCresentBufferInfo = exports.createXYQuadBuffers = exports.createXYQuadBufferInfo = exports.createTruncatedConeBuffers = exports.createTruncatedConeBufferInfo = exports.createSphereBuffers = exports.createSphereBufferInfo = exports.createPlaneBuffers = exports.createPlaneBufferInfo = exports.createCubeBuffers = exports.createCubeBufferInfo = exports.create3DFBuffers = exports.create3DFBufferInfo = void 0;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(7));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(1));\n\nvar m4 = _interopRequireWildcard(__webpack_require__(6));\n\nvar v3 = _interopRequireWildcard(__webpack_require__(3));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Various functions to make simple primitives\n *\n * note: Most primitive functions come in 3 styles\n *\n * *  `createSomeShapeBufferInfo`\n *\n *    These functions are almost always the functions you want to call. They\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\n *    returing a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\n *    and {@link module:twgl.drawBufferInfo} etc...\n *\n * *  `createSomeShapeBuffers`\n *\n *    These create WebGLBuffers and put your data in them but nothing else.\n *    It's a shortcut to doing it yourself if you don't want to use\n *    the higher level functions.\n *\n * *  `createSomeShapeVertices`\n *\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\n *\n *    example:\n *\n *        const arrays = twgl.primitives.createPlaneArrays(1);\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\n *        const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n * @module twgl/primitives\n */\nvar getArray = attributes.getArray_; // eslint-disable-line\n\nvar getNumComponents = attributes.getNumComponents_; // eslint-disable-line\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n */\n\nfunction augmentTypedArray(typedArray, numComponents) {\n  var cursor = 0;\n\n  typedArray.push = function () {\n    for (var ii = 0; ii < arguments.length; ++ii) {\n      var value = arguments[ii];\n\n      if (value instanceof Array || typedArrays.isArrayBuffer(value)) {\n        for (var jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n\n  typedArray.reset = function (opt_index) {\n    cursor = opt_index || 0;\n  };\n\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function get() {\n      return this.length / this.numComponents | 0;\n    }\n  });\n  return typedArray;\n}\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  var Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n/**\n * Given indexed vertices creates a new set of vertices unindexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction deindexVertices(vertices) {\n  var indices = vertices.indices;\n  var newVertices = {};\n  var numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    var srcBuffer = vertices[channel];\n    var numComponents = srcBuffer.numComponents;\n    var dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n\n    for (var ii = 0; ii < numElements; ++ii) {\n      var ndx = indices[ii];\n      var offset = ndx * numComponents;\n\n      for (var jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n  return newVertices;\n}\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\n\n\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw \"can't flatten normals of indexed vertices. deindex them first\";\n  }\n\n  var normals = vertices.normal;\n  var numNormals = normals.length;\n\n  for (var ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    var nax = normals[ii + 0];\n    var nay = normals[ii + 1];\n    var naz = normals[ii + 2];\n    var nbx = normals[ii + 3];\n    var nby = normals[ii + 4];\n    var nbz = normals[ii + 5];\n    var ncx = normals[ii + 6];\n    var ncy = normals[ii + 7];\n    var ncz = normals[ii + 8]; // add them\n\n    var nx = nax + nbx + ncx;\n    var ny = nay + nby + ncy;\n    var nz = naz + nbz + ncz; // normalize them\n\n    var length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n    nx /= length;\n    ny /= length;\n    nz /= length; // copy them back in\n\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  var len = array.length;\n  var tmp = new Float32Array(3);\n\n  for (var ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal(mi, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n/**\n * Reorients directions by the given matrix..\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformDirection);\n  return array;\n}\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\n  return array;\n}\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {number[]|TypedArray} array The array. Assumes value floats per element.\n * @param {Matrix} matrix A matrix to multiply by.\n * @return {number[]|TypedArray} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformPoint);\n  return array;\n}\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, (number[]|TypedArray)>} arrays The vertices to reorient\n * @param {Matrix} matrix matrix to reorient by.\n * @return {Object.<string, (number[]|TypedArray)>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function (name) {\n    var array = arrays[name];\n\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray> the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [xOffset + -1 * size, yOffset + -1 * size, xOffset + 1 * size, yOffset + -1 * size, xOffset + -1 * size, yOffset + 1 * size, xOffset + 1 * size, yOffset + 1 * size]\n    },\n    normal: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n    texcoord: [0, 0, 1, 0, 0, 1, 1, 1],\n    indices: [0, 1, 2, 2, 1, 3]\n  };\n}\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {@module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {Matrix4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createPlaneVertices(width, depth, subdivisionsWidth, subdivisionsDepth, matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || m4.identity();\n  var numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (var z = 0; z <= subdivisionsDepth; z++) {\n    for (var x = 0; x <= subdivisionsWidth; x++) {\n      var u = x / subdivisionsWidth;\n      var v = z / subdivisionsDepth;\n      positions.push(width * u - width * 0.5, 0, depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  var numVertsAcross = subdivisionsWidth + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (var _z = 0; _z < subdivisionsDepth; _z++) {\n    // eslint-disable-line\n    for (var _x = 0; _x < subdivisionsWidth; _x++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_z + 0) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x, (_z + 0) * numVertsAcross + _x + 1); // Make triangle 2 of quad.\n\n      indices.push((_z + 1) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x + 1, (_z + 0) * numVertsAcross + _x + 1);\n    }\n  }\n\n  var arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  }, matrix);\n  return arrays;\n}\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createSphereVertices(radius, subdivisionsAxis, subdivisionsHeight, opt_startLatitudeInRadians, opt_endLatitudeInRadians, opt_startLongitudeInRadians, opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || Math.PI * 2;\n  var latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  var longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians; // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n\n  var numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices); // Generate the individual vertices in our vertex buffer.\n\n  for (var y = 0; y <= subdivisionsHeight; y++) {\n    for (var x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      var u = x / subdivisionsAxis;\n      var v = y / subdivisionsHeight;\n      var theta = longRange * u;\n      var phi = latRange * v;\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      var ux = cosTheta * sinPhi;\n      var uy = cosPhi;\n      var uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  var numVertsAround = subdivisionsAxis + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n\n  for (var _x2 = 0; _x2 < subdivisionsAxis; _x2++) {\n    // eslint-disable-line\n    for (var _y = 0; _y < subdivisionsHeight; _y++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_y + 0) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2); // Make triangle 2 of quad.\n\n      indices.push((_y + 1) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2 + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n */\n\n\nvar CUBE_FACE_INDICES = [[3, 7, 5, 1], // right\n[6, 2, 0, 4], // left\n[6, 7, 3, 2], // ??\n[0, 1, 5, 4], // ??\n[7, 6, 4, 5], // front\n[2, 3, 1, 0]];\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\nfunction createCubeVertices(size) {\n  size = size || 1;\n  var k = size / 2;\n  var cornerVertices = [[-k, -k, -k], [+k, -k, -k], [-k, +k, -k], [+k, +k, -k], [-k, -k, +k], [+k, -k, +k], [-k, +k, +k], [+k, +k, +k]];\n  var faceNormals = [[+1, +0, +0], [-1, +0, +0], [+0, +1, +0], [+0, -1, +0], [+0, +0, +1], [+0, +0, -1]];\n  var uvCoords = [[1, 0], [0, 0], [0, 1], [1, 1]];\n  var numVertices = 6 * 4;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (var f = 0; f < 6; ++f) {\n    var faceIndices = CUBE_FACE_INDICES[f];\n\n    for (var v = 0; v < 4; ++v) {\n      var position = cornerVertices[faceIndices[v]];\n      var normal = faceNormals[f];\n      var uv = uvCoords[v]; // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n    } // Two triangles make a square face.\n\n\n    var offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTruncatedConeVertices(bottomRadius, topRadius, height, radialSubdivisions, verticalSubdivisions, opt_topCap, opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  var topCap = opt_topCap === undefined ? true : opt_topCap;\n  var bottomCap = opt_bottomCap === undefined ? true : opt_bottomCap;\n  var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n  var numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra) * 2, Uint16Array);\n  var vertsAroundEdge = radialSubdivisions + 1; // The slant of the cone is constant across its surface\n\n  var slant = Math.atan2(bottomRadius - topRadius, height);\n  var cosSlant = Math.cos(slant);\n  var sinSlant = Math.sin(slant);\n  var start = topCap ? -2 : 0;\n  var end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (var yy = start; yy <= end; ++yy) {\n    var v = yy / verticalSubdivisions;\n    var y = height * v;\n    var ringRadius = void 0;\n\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius + (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n\n    y -= height / 2;\n\n    for (var ii = 0; ii < vertsAroundEdge; ++ii) {\n      var sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      var cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      normals.push(yy < 0 || yy > verticalSubdivisions ? 0 : sin * cosSlant, yy < 0 ? -1 : yy > verticalSubdivisions ? 1 : sinSlant, yy < 0 || yy > verticalSubdivisions ? 0 : cos * cosSlant);\n      texcoords.push(ii / radialSubdivisions, 1 - v);\n    }\n  }\n\n  for (var _yy = 0; _yy < verticalSubdivisions + extra; ++_yy) {\n    // eslint-disable-line\n    for (var _ii = 0; _ii < radialSubdivisions; ++_ii) {\n      // eslint-disable-line\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 0) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii);\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 0 + _ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n */\n\n\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  var data = [];\n\n  for (var ii = 0; ii < rleData.length; ii += 4) {\n    var runLength = rleData[ii];\n    var element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n\n    for (var jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n\n  return data;\n}\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction create3DFVertices() {\n  var positions = [// left column front\n  0, 0, 0, 0, 150, 0, 30, 0, 0, 0, 150, 0, 30, 150, 0, 30, 0, 0, // top rung front\n  30, 0, 0, 30, 30, 0, 100, 0, 0, 30, 30, 0, 100, 30, 0, 100, 0, 0, // middle rung front\n  30, 60, 0, 30, 90, 0, 67, 60, 0, 30, 90, 0, 67, 90, 0, 67, 60, 0, // left column back\n  0, 0, 30, 30, 0, 30, 0, 150, 30, 0, 150, 30, 30, 0, 30, 30, 150, 30, // top rung back\n  30, 0, 30, 100, 0, 30, 30, 30, 30, 30, 30, 30, 100, 0, 30, 100, 30, 30, // middle rung back\n  30, 60, 30, 67, 60, 30, 30, 90, 30, 30, 90, 30, 67, 60, 30, 67, 90, 30, // top\n  0, 0, 0, 100, 0, 0, 100, 0, 30, 0, 0, 0, 100, 0, 30, 0, 0, 30, // top rung front\n  100, 0, 0, 100, 30, 0, 100, 30, 30, 100, 0, 0, 100, 30, 30, 100, 0, 30, // under top rung\n  30, 30, 0, 30, 30, 30, 100, 30, 30, 30, 30, 0, 100, 30, 30, 100, 30, 0, // between top rung and middle\n  30, 30, 0, 30, 60, 30, 30, 30, 30, 30, 30, 0, 30, 60, 0, 30, 60, 30, // top of middle rung\n  30, 60, 0, 67, 60, 30, 30, 60, 30, 30, 60, 0, 67, 60, 0, 67, 60, 30, // front of middle rung\n  67, 60, 0, 67, 90, 30, 67, 60, 30, 67, 60, 0, 67, 90, 0, 67, 90, 30, // bottom of middle rung.\n  30, 90, 0, 30, 90, 30, 67, 90, 30, 30, 90, 0, 67, 90, 30, 67, 90, 0, // front of bottom\n  30, 90, 0, 30, 150, 30, 30, 90, 30, 30, 90, 0, 30, 150, 0, 30, 150, 30, // bottom\n  0, 150, 0, 0, 150, 30, 30, 150, 30, 0, 150, 0, 30, 150, 30, 30, 150, 0, // left side\n  0, 0, 0, 0, 0, 30, 0, 150, 30, 0, 0, 0, 0, 150, 30, 0, 150, 0];\n  var texcoords = [// left column front\n  0.22, 0.19, 0.22, 0.79, 0.34, 0.19, 0.22, 0.79, 0.34, 0.79, 0.34, 0.19, // top rung front\n  0.34, 0.19, 0.34, 0.31, 0.62, 0.19, 0.34, 0.31, 0.62, 0.31, 0.62, 0.19, // middle rung front\n  0.34, 0.43, 0.34, 0.55, 0.49, 0.43, 0.34, 0.55, 0.49, 0.55, 0.49, 0.43, // left column back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // middle rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // top rung front\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // under top rung\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // between top rung and middle\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // top of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // front of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom of middle rung.\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // front of bottom\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // left side\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0];\n  var normals = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 0, 0, 1, // left column back\n  // top rung back\n  // middle rung back\n  18, 0, 0, -1, // top\n  6, 0, 1, 0, // top rung front\n  6, 1, 0, 0, // under top rung\n  6, 0, -1, 0, // between top rung and middle\n  6, 1, 0, 0, // top of middle rung\n  6, 0, 1, 0, // front of middle rung\n  6, 1, 0, 0, // bottom of middle rung.\n  6, 0, -1, 0, // front of bottom\n  6, 1, 0, 0, // bottom\n  6, 0, -1, 0, // left side\n  6, -1, 0, 0]);\n  var colors = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 200, 70, 120, // left column back\n  // top rung back\n  // middle rung back\n  18, 80, 70, 200, // top\n  6, 70, 200, 210, // top rung front\n  6, 200, 200, 70, // under top rung\n  6, 210, 100, 70, // between top rung and middle\n  6, 210, 160, 70, // top of middle rung\n  6, 70, 180, 210, // front of middle rung\n  6, 100, 70, 210, // bottom of middle rung.\n  6, 76, 210, 100, // front of bottom\n  6, 140, 210, 80, // bottom\n  6, 90, 130, 110, // left side\n  6, 160, 160, 220], [255]);\n  var numVerts = positions.length / 3;\n  var arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2, numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array)\n  };\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (var ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n/**\n * Creates cresent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates cresent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates cresent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} subdivisionsThick number of vertically on the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCresentVertices(verticalRadius, outerRadius, innerRadius, thickness, subdivisionsDown, startOffset, endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset = endOffset || 1;\n  var subdivisionsThick = 2;\n  var offsetRange = endOffset - startOffset;\n  var numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (var z = 0; z <= subdivisionsDown; z++) {\n      var uBack = x / (subdivisionsThick - 1);\n      var v = z / subdivisionsDown;\n      var xBack = (uBack - 0.5) * 2;\n      var angle = (startOffset + v * offsetRange) * Math.PI;\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      var radius = lerp(verticalRadius, arcRadius, s);\n      var px = xBack * thickness;\n      var py = c * verticalRadius;\n      var pz = s * radius;\n      positions.push(px, py, pz);\n      var n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  } // Generate the individual vertices in our vertex buffer.\n\n\n  for (var x = 0; x < subdivisionsThick; x++) {\n    var uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  } // Do outer surface.\n\n\n  var indices = createAugmentedTypedArray(3, subdivisionsDown * 2 * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (var z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(leftArcOffset + z + 0, leftArcOffset + z + 1, rightArcOffset + z + 0); // Make triangle 2 of quad.\n\n      indices.push(leftArcOffset + z + 1, rightArcOffset + z + 1, rightArcOffset + z + 0);\n    }\n  }\n\n  var numVerticesDown = subdivisionsDown + 1; // front\n\n  createSurface(numVerticesDown * 0, numVerticesDown * 4); // right\n\n  createSurface(numVerticesDown * 5, numVerticesDown * 7); // back\n\n  createSurface(numVerticesDown * 6, numVerticesDown * 2); // left\n\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n/**\n * Creates cylinder buffers. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCylinderBuffers\n */\n\n/**\n * Creates cylinder vertices. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCylinderVertices(radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap) {\n  return createTruncatedConeVertices(radius, radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap);\n}\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTorusVertices(radius, thickness, radialSubdivisions, bodySubdivisions, startAngle, endAngle) {\n  if (radialSubdivisions < 3) {\n    throw Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  var range = endAngle - startAngle;\n  var radialParts = radialSubdivisions + 1;\n  var bodyParts = bodySubdivisions + 1;\n  var numVertices = radialParts * bodyParts;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * bodySubdivisions * 2, Uint16Array);\n\n  for (var slice = 0; slice < bodyParts; ++slice) {\n    var v = slice / bodySubdivisions;\n    var sliceAngle = v * Math.PI * 2;\n    var sliceSin = Math.sin(sliceAngle);\n    var ringRadius = radius + sliceSin * thickness;\n    var ny = Math.cos(sliceAngle);\n    var y = ny * thickness;\n\n    for (var ring = 0; ring < radialParts; ++ring) {\n      var u = ring / radialSubdivisions;\n      var ringAngle = startAngle + u * range;\n      var xSin = Math.sin(ringAngle);\n      var zCos = Math.cos(ringAngle);\n      var x = xSin * ringRadius;\n      var z = zCos * ringRadius;\n      var nx = xSin * sliceSin;\n      var nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (var _slice = 0; _slice < bodySubdivisions; ++_slice) {\n    // eslint-disable-line\n    for (var _ring = 0; _ring < radialSubdivisions; ++_ring) {\n      // eslint-disable-line\n      var nextRingIndex = 1 + _ring;\n      var nextSliceIndex = 1 + _slice;\n      indices.push(radialParts * _slice + _ring, radialParts * nextSliceIndex + _ring, radialParts * _slice + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + _ring, radialParts * nextSliceIndex + nextRingIndex, radialParts * _slice + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createDiscVertices(radius, divisions, stacks, innerRadius, stackPower) {\n  if (divisions < 3) {\n    throw Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0; // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n\n  var numVertices = (divisions + 1) * (stacks + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n  var firstIndex = 0;\n  var radiusSpan = radius - innerRadius;\n  var pointsPerStack = divisions + 1; // Build the disk one stack at a time.\n\n  for (var stack = 0; stack <= stacks; ++stack) {\n    var stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (var i = 0; i <= divisions; ++i) {\n      var theta = 2.0 * Math.PI * i / divisions;\n      var x = stackRadius * Math.cos(theta);\n      var z = stackRadius * Math.sin(theta);\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - i / divisions, stack / stacks);\n\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        var a = firstIndex + (i + 1);\n        var b = firstIndex + i;\n        var c = firstIndex + i - pointsPerStack;\n        var d = firstIndex + (i + 1) - pointsPerStack; // Make a quad of the vertices a, b, c, d.\n\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n */\n\n\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, augmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, augmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  var numElements = vertices.position.numElements;\n  var vcolors = createAugmentedTypedArray(4, numElements, Uint8Array);\n\n  var rand = options.rand || function (ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n\n  vertices.color = vcolors;\n\n  if (vertices.indices) {\n    // just make random colors if index\n    for (var ii = 0; ii < numElements; ++ii) {\n      vcolors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    var numVertsPerColor = options.vertsPerColor || 3;\n    var numSets = numElements / numVertsPerColor;\n\n    for (var _ii2 = 0; _ii2 < numSets; ++_ii2) {\n      // eslint-disable-line\n      var color = [rand(_ii2, 0), rand(_ii2, 1), rand(_ii2, 2), rand(_ii2, 3)];\n\n      for (var jj = 0; jj < numVertsPerColor; ++jj) {\n        vcolors.push(color);\n      }\n    }\n  }\n\n  return vertices;\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n */\n\n\nfunction createBufferFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBuffersFromArrays(gl, arrays);\n  };\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n */\n\n\nfunction createBufferInfoFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(null, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nvar arraySpecPropertyNames = [\"numComponents\", \"size\", \"type\", \"normalize\", \"stride\", \"offset\", \"attrib\", \"name\", \"attribName\"];\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n */\n\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  var length = src.length;\n\n  for (var ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n */\n\n\nfunction createArrayOfSameType(srcArray, length) {\n  var arraySrc = getArray(srcArray);\n  var newArray = new arraySrc.constructor(length);\n  var newArraySpec = newArray; // If it appears to have been augmented make new one augemented\n\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  } // If it was a fullspec make new one a fullspec\n\n\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray\n    };\n    helper.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n\n  return newArraySpec;\n}\n/**\n * Concatinates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primtiives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatinated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction concatVertices(arrayOfArrays) {\n  var names = {};\n  var baseName; // get names of all arrays.\n  // and numElements for each set of vertices\n\n  var _loop = function _loop(ii) {\n    var arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function (name) {\n      // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n\n      var arrayInfo = arrays[name];\n      var numComponents = getNumComponents(arrayInfo, name);\n      var array = getArray(arrayInfo);\n      var numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  };\n\n  for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n    _loop(ii);\n  } // compute length of combined array\n  // and return one for reference\n\n\n  function getLengthOfCombinedArrays(name) {\n    var length = 0;\n    var arraySpec;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n      length += array.length;\n\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n\n    return {\n      length: length,\n      spec: arraySpec\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    var baseIndex = 0;\n    var offset = 0;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n\n      offset += array.length;\n    }\n  }\n\n  var base = names[baseName];\n  var newArrays = {};\n  Object.keys(names).forEach(function (name) {\n    var info = getLengthOfCombinedArrays(name);\n    var newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The dupilicated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction duplicateVertices(arrays) {\n  var newArrays = {};\n  Object.keys(arrays).forEach(function (name) {\n    var arraySpec = arrays[name];\n    var srcArray = getArray(arraySpec);\n    var newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nvar create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nexports.create3DFBufferInfo = create3DFBufferInfo;\nvar create3DFBuffers = createBufferFunc(create3DFVertices);\nexports.create3DFBuffers = create3DFBuffers;\nvar createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nexports.createCubeBufferInfo = createCubeBufferInfo;\nvar createCubeBuffers = createBufferFunc(createCubeVertices);\nexports.createCubeBuffers = createCubeBuffers;\nvar createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nexports.createPlaneBufferInfo = createPlaneBufferInfo;\nvar createPlaneBuffers = createBufferFunc(createPlaneVertices);\nexports.createPlaneBuffers = createPlaneBuffers;\nvar createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nexports.createSphereBufferInfo = createSphereBufferInfo;\nvar createSphereBuffers = createBufferFunc(createSphereVertices);\nexports.createSphereBuffers = createSphereBuffers;\nvar createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBufferInfo = createTruncatedConeBufferInfo;\nvar createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBuffers = createTruncatedConeBuffers;\nvar createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nexports.createXYQuadBufferInfo = createXYQuadBufferInfo;\nvar createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nexports.createXYQuadBuffers = createXYQuadBuffers;\nvar createCresentBufferInfo = createBufferInfoFunc(createCresentVertices);\nexports.createCresentBufferInfo = createCresentBufferInfo;\nvar createCresentBuffers = createBufferFunc(createCresentVertices);\nexports.createCresentBuffers = createCresentBuffers;\nvar createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nexports.createCylinderBufferInfo = createCylinderBufferInfo;\nvar createCylinderBuffers = createBufferFunc(createCylinderVertices);\nexports.createCylinderBuffers = createCylinderBuffers;\nvar createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nexports.createTorusBufferInfo = createTorusBufferInfo;\nvar createTorusBuffers = createBufferFunc(createTorusVertices);\nexports.createTorusBuffers = createTorusBuffers;\nvar createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nexports.createDiscBufferInfo = createDiscBufferInfo;\nvar createDiscBuffers = createBufferFunc(createDiscVertices);\nexports.createDiscBuffers = createDiscBuffers;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  addExtensionsToContext: true,\n  getContext: true,\n  getWebGLContext: true,\n  resizeCanvasToDisplaySize: true,\n  setDefaults: true\n};\nexports.addExtensionsToContext = addExtensionsToContext;\nexports.getContext = getContext;\nexports.getWebGLContext = getWebGLContext;\nexports.resizeCanvasToDisplaySize = resizeCanvasToDisplaySize;\nexports.setDefaults = setDefaults;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(7));\n\nObject.keys(attributes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = attributes[key];\n});\n\nvar textures = _interopRequireWildcard(__webpack_require__(8));\n\nObject.keys(textures).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = textures[key];\n});\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nvar utils = _interopRequireWildcard(__webpack_require__(4));\n\nObject.keys(utils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = utils[key];\n});\n\nvar _draw = __webpack_require__(12);\n\nObject.keys(_draw).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _draw[key];\n});\n\nvar _framebuffers = __webpack_require__(13);\n\nObject.keys(_framebuffers).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _framebuffers[key];\n});\n\nvar _programs = __webpack_require__(5);\n\nObject.keys(_programs).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _programs[key];\n});\n\nvar _typedarrays = __webpack_require__(1);\n\nObject.keys(_typedarrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _typedarrays[key];\n});\n\nvar _vertexArrays = __webpack_require__(14);\n\nObject.keys(_vertexArrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _vertexArrays[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * The main TWGL module.\n *\n * For most use cases you shouldn't need anything outside this module.\n * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\n *\n * @module twgl\n * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\n * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\n * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\n * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\n * @borrows module:twgl/draw.drawObjectList as drawObjectList\n * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\n * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\n * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\n * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\n * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\n * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\n * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\n * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\n * @borrows module:twgl/programs.setUniforms as setUniforms\n * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\n * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\n * @borrows module:twgl/textures.createTexture as createTexture\n * @borrows module:twgl/textures.resizeTexture as resizeTexture\n * @borrows module:twgl/textures.createTextures as createTextures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  addExtensionsToContext: true\n};\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} attribPrefix The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n *   In otherwords I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} textureColor Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} crossOrigin\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} addExtensionsToContext\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  attributes.setAttributeDefaults_(newDefaults); // eslint-disable-line\n\n  textures.setTextureDefaults_(newDefaults); // eslint-disable-line\n}\n\nvar prefixRE = /^(.*?)_/;\n\nfunction addExtensionToContext(gl, extensionName) {\n  utils.glEnumToString(gl, 0);\n  var ext = gl.getExtension(extensionName);\n\n  if (ext) {\n    var enums = {};\n    var fnSuffix = prefixRE.exec(extensionName)[1];\n    var enumSuffix = '_' + fnSuffix;\n\n    for (var key in ext) {\n      var value = ext[key];\n      var isFunc = typeof value === 'function';\n      var suffix = isFunc ? fnSuffix : enumSuffix;\n      var name = key; // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          helper.warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function (origFn) {\n            return function () {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    } // pass the modified enums to glEnumToString\n\n\n    enums.constructor = {\n      name: ext.constructor.name\n    };\n    utils.glEnumToString(enums, 0);\n  }\n\n  return ext;\n}\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\n\n\nvar supportedExtensions = ['ANGLE_instanced_arrays', 'EXT_blend_minmax', 'EXT_color_buffer_float', 'EXT_color_buffer_half_float', 'EXT_disjoint_timer_query', 'EXT_disjoint_timer_query_webgl2', 'EXT_frag_depth', 'EXT_sRGB', 'EXT_shader_texture_lod', 'EXT_texture_filter_anisotropic', 'OES_element_index_uint', 'OES_standard_derivatives', 'OES_texture_float', 'OES_texture_float_linear', 'OES_texture_half_float', 'OES_texture_half_float_linear', 'OES_vertex_array_object', 'WEBGL_color_buffer_float', 'WEBGL_compressed_texture_atc', 'WEBGL_compressed_texture_etc1', 'WEBGL_compressed_texture_pvrtc', 'WEBGL_compressed_texture_s3tc', 'WEBGL_compressed_texture_s3tc_srgb', 'WEBGL_depth_texture', 'WEBGL_draw_buffers'];\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existance of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\n\nfunction addExtensionsToContext(gl) {\n  for (var ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction create3DContext(canvas, opt_attribs) {\n  var names = [\"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n * @memberOf module:twgl\n */\n\n\nfunction getWebGLContext(canvas, opt_attribs) {\n  var gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction createContext(canvas, opt_attribs) {\n  var names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextCreationAttirbutes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\n\n\nfunction getContext(canvas, opt_attribs) {\n  var gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\n\n\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  var width = canvas.clientWidth * multiplier | 0;\n  var height = canvas.clientHeight * multiplier | 0;\n\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n\n  return false;\n}\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.drawBufferInfo = drawBufferInfo;\nexports.drawObjectList = drawObjectList;\n\nvar programs = _interopRequireWildcard(__webpack_require__(5));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Drawing related functions\n *\n * For backward compatibily they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {enum} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? gl.TRIANGLES : type;\n  var indices = bufferInfo.indices;\n  var elementType = bufferInfo.elementType;\n  var numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In otherwords `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElemnts`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\n\n\nfunction drawObjectList(gl, objectsToDraw) {\n  var lastUsedProgramInfo = null;\n  var lastUsedBufferInfo = null;\n  objectsToDraw.forEach(function (object) {\n    if (object.active === false) {\n      return;\n    }\n\n    var programInfo = object.programInfo;\n    var bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    var bindBuffers = false;\n    var type = object.type === undefined ? gl.TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program); // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n\n      bindBuffers = true;\n    } // Setup all the needed attributes.\n\n\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n\n      lastUsedBufferInfo = bufferInfo;\n      programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    } // Set the uniforms.\n\n\n    programs.setUniforms(programInfo, object.uniforms); // Draw\n\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.bindFramebufferInfo = bindFramebufferInfo;\nexports.createFramebufferInfo = createFramebufferInfo;\nexports.resizeFramebufferInfo = resizeFramebufferInfo;\n\nvar textures = _interopRequireWildcard(__webpack_require__(8));\n\nvar helper = _interopRequireWildcard(__webpack_require__(0));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Framebuffer related functions\n *\n * For backward compatibily they are available at both `twgl.framebuffer` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/framebuffers\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar UNSIGNED_BYTE = 0x1401;\n/* PixelFormat */\n\nvar DEPTH_COMPONENT = 0x1902;\nvar RGBA = 0x1908;\n/* Framebuffer Object. */\n\nvar RGBA4 = 0x8056;\nvar RGB5_A1 = 0x8057;\nvar RGB565 = 0x8D62;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar STENCIL_INDEX = 0x1901;\nvar STENCIL_INDEX8 = 0x8D48;\nvar DEPTH_STENCIL = 0x84F9;\nvar COLOR_ATTACHMENT0 = 0x8CE0;\nvar DEPTH_ATTACHMENT = 0x8D00;\nvar STENCIL_ATTACHMENT = 0x8D20;\nvar DEPTH_STENCIL_ATTACHMENT = 0x821A;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar CLAMP_TO_EDGE = 0x812F;\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\nvar LINEAR = 0x2601;\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attach] The attachment point. Defaults\n *   to `gl.COLOR_ATTACTMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachemnts across framebuffers.\n * @memberOf module:twgl\n */\n\nvar defaultAttachments = [{\n  format: RGBA,\n  type: UNSIGNED_BYTE,\n  min: LINEAR,\n  wrap: CLAMP_TO_EDGE\n}, {\n  format: DEPTH_STENCIL\n}];\nvar attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format) {\n  return attachmentsByFormat[format];\n}\n\nvar renderbufferFormats = {};\nrenderbufferFormats[RGBA4] = true;\nrenderbufferFormats[RGB5_A1] = true;\nrenderbufferFormats[RGB565] = true;\nrenderbufferFormats[DEPTH_STENCIL] = true;\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  var target = gl.FRAMEBUFFER;\n  var fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  var colorAttachmentCount = 0;\n  var framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height\n  };\n  attachments.forEach(function (attachmentOptions) {\n    var attachment = attachmentOptions.attachment;\n    var format = attachmentOptions.format;\n    var attachmentPoint = getAttachmentPointForFormat(format);\n\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n    }\n\n    if (!attachment) {\n      if (isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n        gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n      } else {\n        var textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || gl.LINEAR;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || gl.LINEAR;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n        }\n\n        attachment = textures.createTexture(gl, textureOptions);\n      }\n    }\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, gl.RENDERBUFFER, attachment);\n    } else if (helper.isTexture(gl, attachment)) {\n      gl.framebufferTexture2D(target, attachmentPoint, attachmentOptions.texTarget || gl.TEXTURE_2D, attachment, attachmentOptions.level || 0);\n    } else {\n      throw \"unknown attachment type\";\n    }\n\n    framebufferInfo.attachments.push(attachment);\n  });\n  return framebufferInfo;\n}\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function (attachmentOptions, ndx) {\n    var attachment = framebufferInfo.attachments[ndx];\n    var format = attachmentOptions.format;\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n      gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n    } else if (helper.isTexture(gl, attachment)) {\n      textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw \"unknown attachment type\";\n    }\n  });\n}\n/**\n * Binds a framebuffer\n *\n * This function pretty much soley exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If not passed will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || gl.FRAMEBUFFER;\n\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createVertexArrayInfo = createVertexArrayInfo;\nexports.createVAOAndSetAttributes = createVAOAndSetAttributes;\nexports.createVAOFromBufferInfo = createVAOFromBufferInfo;\n\nvar programs = _interopRequireWildcard(__webpack_require__(5));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2015, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n\n  programInfos.forEach(function (programInfo) {\n    programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao\n  };\n}\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  programs.setAttributes(setters, attribs);\n\n  if (indices) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n  } // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n\n\n  gl.bindVertexArray(null);\n  return vao;\n}\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\n/***/ })\n/******/ ]);\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/twgl.js/dist/4.x/twgl-full.js\n// module id = 0\n// module chunks = 0 1","const EventEmitter = require('events');\n\nconst twgl = require('twgl.js');\n\nconst RenderConstants = require('./RenderConstants');\n\n/**\n * Truncate a number into what could be stored in a 32 bit floating point value.\n * @param {number} num Number to truncate.\n * @return {number} Truncated value.\n */\nconst toFloat32 = (function () {\n    const memory = new Float32Array(1);\n    return function (num) {\n        memory[0] = num;\n        return memory[0];\n    };\n}());\n\nclass Skin extends EventEmitter {\n    /**\n     * Create a Skin, which stores and/or generates textures for use in rendering.\n     * @param {int} id - The unique ID for this Skin.\n     * @constructor\n     */\n    constructor (id) {\n        super();\n\n        /** @type {int} */\n        this._id = id;\n\n        /** @type {Vec3} */\n        this._rotationCenter = twgl.v3.create(0, 0);\n\n        /**\n         * The uniforms to be used by the vertex and pixel shaders.\n         * Some of these are used by other parts of the renderer as well.\n         * @type {Object.<string,*>}\n         * @private\n         */\n        this._uniforms = {\n            /**\n             * The nominal (not necessarily current) size of the current skin.\n             * @type {Array<number>}\n             */\n            u_skinSize: [0, 0],\n\n            /**\n             * The actual WebGL texture object for the skin.\n             * @type {WebGLTexture}\n             */\n            u_skin: null\n        };\n\n        this.setMaxListeners(RenderConstants.SKIN_SHARE_SOFT_LIMIT);\n    }\n\n    /**\n     * Dispose of this object. Do not use it after calling this method.\n     */\n    dispose () {\n        this._id = RenderConstants.ID_NONE;\n    }\n\n    /**\n     * @returns {boolean} true for a raster-style skin (like a BitmapSkin), false for vector-style (like SVGSkin).\n     */\n    get isRaster () {\n        return false;\n    }\n\n    /**\n     * @return {int} the unique ID for this Skin.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * @returns {Vec3} the origin, in object space, about which this Skin should rotate.\n     */\n    get rotationCenter () {\n        return this._rotationCenter;\n    }\n\n    /**\n     * @abstract\n     * @return {Array<number>} the \"native\" size, in texels, of this skin.\n     */\n    get size () {\n        return [0, 0];\n    }\n\n    /**\n     * Set the origin, in object space, about which this Skin should rotate.\n     * @param {number} x - The x coordinate of the new rotation center.\n     * @param {number} y - The y coordinate of the new rotation center.\n     * @fires Skin.event:WasAltered\n     */\n    setRotationCenter (x, y) {\n        const emptySkin = this.size[0] === 0 && this.size[1] === 0;\n        // Compare a 32 bit x and y value against the stored 32 bit center\n        // values.\n        const changed = (\n            toFloat32(x) !== this._rotationCenter[0] ||\n            toFloat32(y) !== this._rotationCenter[1]);\n        if (!emptySkin && changed) {\n            this._rotationCenter[0] = x;\n            this._rotationCenter[1] = y;\n            this.emit(Skin.Events.WasAltered);\n        }\n    }\n\n    /**\n     * Get the center of the current bounding box\n     * @return {Array<number>} the center of the current bounding box\n     */\n    calculateRotationCenter () {\n        return [this.size[0] / 2, this.size[1] / 2];\n    }\n\n    /**\n     * @abstract\n     * @param {Array<number>} scale - The scaling factors to be used.\n     * @return {WebGLTexture} The GL texture representation of this skin when drawing at the given size.\n     */\n    // eslint-disable-next-line no-unused-vars\n    getTexture (scale) {\n        return null;\n    }\n\n    /**\n     * Update and returns the uniforms for this skin.\n     * @param {Array<number>} scale - The scaling factors to be used.\n     * @returns {object.<string, *>} the shader uniforms to be used when rendering with this Skin.\n     */\n    getUniforms (scale) {\n        this._uniforms.u_skin = this.getTexture(scale);\n        this._uniforms.u_skinSize = this.size;\n        return this._uniforms;\n    }\n\n    /**\n     * Does this point touch an opaque or translucent point on this skin?\n     * @param {twgl.v3} vec A texture coordinate.\n     * @return {boolean} Did it touch?\n     */\n    isTouching () {\n        return false;\n    }\n}\n\n/**\n * These are the events which can be emitted by instances of this class.\n * @enum {string}\n */\nSkin.Events = {\n    /**\n     * Emitted when anything about the Skin has been altered, such as the appearance or rotation center.\n     * @event Skin.event:WasAltered\n     */\n    WasAltered: 'WasAltered'\n};\n\nmodule.exports = Skin;\n\n\n\n// WEBPACK FOOTER //\n// src/Skin.js","/** @module RenderConstants */\n\n/**\n * Various constants meant for use throughout the renderer.\n * @enum\n */\nmodule.exports = {\n    /**\n     * The ID value to use for \"no item\" or when an object has been disposed.\n     * @const {int}\n     */\n    ID_NONE: -1,\n\n    /**\n     * Optimize for fewer than this number of Drawables sharing the same Skin.\n     * Going above this may cause middleware warnings or a performance penalty but should otherwise behave correctly.\n     * @const {int}\n     */\n    SKIN_SHARE_SOFT_LIMIT: 301,\n\n    /**\n     * @enum {string}\n     */\n    Events: {\n        /**\n         * NativeSizeChanged event\n         *\n         * @event RenderWebGL#event:NativeSizeChanged\n         * @type {object}\n         * @property {Array<int>} newSize - the new size of the renderer\n         */\n        NativeSizeChanged: 'NativeSizeChanged'\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/RenderConstants.js","/**\n * @fileoverview\n * A representation of a Skin's silhouette that can test if a point on the skin\n * renders a pixel where it is drawn.\n */\n\n/**\n * <canvas> element used to update Silhouette data from skin bitmap data.\n * @type {CanvasElement}\n */\nlet __SilhouetteUpdateCanvas;\n\nclass Silhouette {\n    constructor () {\n        /**\n         * The width of the data representing the current skin data.\n         * @type {number}\n         */\n        this._width = 0;\n\n        /**\n         * The height of the data representing the current skin date.\n         * @type {number}\n         */\n        this._height = 0;\n\n        /**\n         * The data representing a skin's silhouette shape.\n         * @type {Uint8ClampedArray}\n         */\n        this._data = null;\n    }\n\n    /**\n     * Update this silhouette with the bitmapData for a skin.\n     * @param {*} bitmapData An image, canvas or other element that the skin\n     * rendering can be queried from.\n     */\n    update (bitmapData) {\n        const canvas = Silhouette._updateCanvas();\n        const width = this._width = canvas.width = bitmapData.width;\n        const height = this._height = canvas.height = bitmapData.height;\n        const ctx = canvas.getContext('2d');\n\n        ctx.clearRect(0, 0, width, height);\n        ctx.drawImage(bitmapData, 0, 0, width, height);\n        const imageData = ctx.getImageData(0, 0, width, height);\n\n        this._data = new Uint8ClampedArray(imageData.data.length / 4);\n\n        for (let i = 0; i < imageData.data.length; i += 4) {\n            this._data[i / 4] = imageData.data[i + 3];\n        }\n    }\n\n    /**\n     * Does this point touch the silhouette?\n     * @param {twgl.v3} vec A texture coordinate.\n     * @return {boolean} Did the point touch?\n     */\n    isTouching (vec) {\n        const x = Math.floor(vec[0] * this._width);\n        const y = Math.floor(vec[1] * this._height);\n        return (\n            x < this._width && x >= 0 &&\n            y < this._height && y >= 0 &&\n            this._data[(y * this._width) + x] !== 0);\n    }\n\n    /**\n     * Get the canvas element reused by Silhouettes to update their data with.\n     * @private\n     * @return {CanvasElement} A canvas to draw bitmap data to.\n     */\n    static _updateCanvas () {\n        if (typeof __SilhouetteUpdateCanvas === 'undefined') {\n            __SilhouetteUpdateCanvas = document.createElement('canvas');\n        }\n        return __SilhouetteUpdateCanvas;\n    }\n}\n\nmodule.exports = Silhouette;\n\n\n\n// WEBPACK FOOTER //\n// src/Silhouette.js","const twgl = require('twgl.js');\n\n\nclass ShaderManager {\n    /**\n     * @param {WebGLRenderingContext} gl WebGL rendering context to create shaders for\n     * @constructor\n     */\n    constructor (gl) {\n        this._gl = gl;\n\n        /**\n         * The cache of all shaders compiled so far, filled on demand.\n         * @type {Object<ShaderManager.DRAW_MODE, Array<ProgramInfo>>}\n         * @private\n         */\n        this._shaderCache = {};\n        for (const modeName in ShaderManager.DRAW_MODE) {\n            if (ShaderManager.DRAW_MODE.hasOwnProperty(modeName)) {\n                this._shaderCache[modeName] = [];\n            }\n        }\n    }\n\n    /**\n     * Fetch the shader for a particular set of active effects.\n     * Build the shader if necessary.\n     * @param {ShaderManager.DRAW_MODE} drawMode Draw normally, silhouette, etc.\n     * @param {int} effectBits Bitmask representing the enabled effects.\n     * @returns {ProgramInfo} The shader's program info.\n     */\n    getShader (drawMode, effectBits) {\n        const cache = this._shaderCache[drawMode];\n        if (drawMode === ShaderManager.DRAW_MODE.silhouette) {\n            // Silhouette mode isn't affected by these effects.\n            effectBits &= ~(ShaderManager.EFFECT_INFO.color.mask | ShaderManager.EFFECT_INFO.brightness.mask);\n        }\n        let shader = cache[effectBits];\n        if (!shader) {\n            shader = cache[effectBits] = this._buildShader(drawMode, effectBits);\n        }\n        return shader;\n    }\n\n    /**\n     * Build the shader for a particular set of active effects.\n     * @param {ShaderManager.DRAW_MODE} drawMode Draw normally, silhouette, etc.\n     * @param {int} effectBits Bitmask representing the enabled effects.\n     * @returns {ProgramInfo} The new shader's program info.\n     * @private\n     */\n    _buildShader (drawMode, effectBits) {\n        const numEffects = ShaderManager.EFFECTS.length;\n\n        const defines = [\n            `#define DRAW_MODE_${drawMode}`\n        ];\n        for (let index = 0; index < numEffects; ++index) {\n            if ((effectBits & (1 << index)) !== 0) {\n                defines.push(`#define ENABLE_${ShaderManager.EFFECTS[index]}`);\n            }\n        }\n\n        const definesText = `${defines.join('\\n')}\\n`;\n\n        /* eslint-disable global-require */\n        const vsFullText = definesText + require('raw-loader!./shaders/sprite.vert');\n        const fsFullText = definesText + require('raw-loader!./shaders/sprite.frag');\n        /* eslint-enable global-require */\n\n        return twgl.createProgramInfo(this._gl, [vsFullText, fsFullText]);\n    }\n}\n\n/**\n * @typedef {object} ShaderManager.Effect\n * @prop {int} mask - The bit in 'effectBits' representing the effect.\n * @prop {function} converter - A conversion function which takes a Scratch value (generally in the range\n *   0..100 or -100..100) and maps it to a value useful to the shader. This\n *   mapping may not be reversible.\n * @prop {boolean} shapeChanges - Whether the effect could change the drawn shape.\n */\n\n/**\n * Mapping of each effect name to info about that effect.\n * @enum {ShaderManager.Effect}\n */\nShaderManager.EFFECT_INFO = {\n    /** Color effect */\n    color: {\n        mask: 1 << 0,\n        converter: x => (x / 200) % 1,\n        shapeChanges: false\n    },\n    /** Fisheye effect */\n    fisheye: {\n        mask: 1 << 1,\n        converter: x => Math.max(0, (x + 100) / 100),\n        shapeChanges: true\n    },\n    /** Whirl effect */\n    whirl: {\n        mask: 1 << 2,\n        converter: x => -x * Math.PI / 180,\n        shapeChanges: true\n    },\n    /** Pixelate effect */\n    pixelate: {\n        mask: 1 << 3,\n        converter: x => Math.abs(x) / 10,\n        shapeChanges: true\n    },\n    /** Mosaic effect */\n    mosaic: {\n        mask: 1 << 4,\n        converter: x => {\n            x = Math.round((Math.abs(x) + 10) / 10);\n            /** @todo cap by Math.min(srcWidth, srcHeight) */\n            return Math.max(1, Math.min(x, 512));\n        },\n        shapeChanges: true\n    },\n    /** Brightness effect */\n    brightness: {\n        mask: 1 << 5,\n        converter: x => Math.max(-100, Math.min(x, 100)) / 100,\n        shapeChanges: false\n    },\n    /** Ghost effect */\n    ghost: {\n        mask: 1 << 6,\n        converter: x => 1 - (Math.max(0, Math.min(x, 100)) / 100),\n        shapeChanges: false\n    }\n};\n\n/**\n * The name of each supported effect.\n * @type {Array}\n */\nShaderManager.EFFECTS = Object.keys(ShaderManager.EFFECT_INFO);\n\n/**\n * The available draw modes.\n * @readonly\n * @enum {string}\n */\nShaderManager.DRAW_MODE = {\n    /**\n     * Draw normally.\n     */\n    default: 'default',\n\n    /**\n     * Draw a silhouette using a solid color.\n     */\n    silhouette: 'silhouette',\n\n    /**\n     * Draw only the parts of the drawable which match a particular color.\n     */\n    colorMask: 'colorMask'\n};\n\nmodule.exports = ShaderManager;\n\n\n\n// WEBPACK FOOTER //\n// src/ShaderManager.js","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 5\n// module chunks = 0 1","class Rectangle {\n    /**\n     * A utility for creating and comparing axis-aligned rectangles.\n     * Rectangles are always initialized to the \"largest possible rectangle\";\n     * use one of the init* methods below to set up a particular rectangle.\n     * @constructor\n     */\n    constructor () {\n        this.left = -Infinity;\n        this.right = Infinity;\n        this.bottom = -Infinity;\n        this.top = Infinity;\n    }\n\n    /**\n     * Initialize a Rectangle from given Scratch-coordinate bounds.\n     * @param {number} left Left bound of the rectangle.\n     * @param {number} right Right bound of the rectangle.\n     * @param {number} bottom Bottom bound of the rectangle.\n     * @param {number} top Top bound of the rectangle.\n     */\n    initFromBounds (left, right, bottom, top) {\n        this.left = left;\n        this.right = right;\n        this.bottom = bottom;\n        this.top = top;\n    }\n\n    /**\n     * Initialize a Rectangle to the minimum AABB around a set of points.\n     * @param {Array<Array<number>>} points Array of [x, y] points.\n     */\n    initFromPointsAABB (points) {\n        this.left = Infinity;\n        this.right = -Infinity;\n        this.top = -Infinity;\n        this.bottom = Infinity;\n        for (let i = 0; i < points.length; i++) {\n            const x = points[i][0];\n            const y = points[i][1];\n            if (x < this.left) {\n                this.left = x;\n            }\n            if (x > this.right) {\n                this.right = x;\n            }\n            if (y > this.top) {\n                this.top = y;\n            }\n            if (y < this.bottom) {\n                this.bottom = y;\n            }\n        }\n    }\n\n    /**\n     * Determine if this Rectangle intersects some other.\n     * Note that this is a comparison assuming the Rectangle was\n     * initialized with Scratch-space bounds or points.\n     * @param {!Rectangle} other Rectangle to check if intersecting.\n     * @return {boolean} True if this Rectangle intersects other.\n     */\n    intersects (other) {\n        return (\n            this.left <= other.right &&\n            other.left <= this.right &&\n            this.top >= other.bottom &&\n            other.top >= this.bottom\n        );\n    }\n\n    /**\n     * Determine if this Rectangle fully contains some other.\n     * Note that this is a comparison assuming the Rectangle was\n     * initialized with Scratch-space bounds or points.\n     * @param {!Rectangle} other Rectangle to check if fully contained.\n     * @return {boolean} True if this Rectangle fully contains other.\n     */\n    contains (other) {\n        return (\n            other.left > this.left &&\n            other.right < this.right &&\n            other.top < this.top &&\n            other.bottom > this.bottom\n        );\n    }\n\n    /**\n     * Clamp a Rectangle to bounds.\n     * @param {number} left Left clamp.\n     * @param {number} right Right clamp.\n     * @param {number} bottom Bottom clamp.\n     * @param {number} top Top clamp.\n     */\n    clamp (left, right, bottom, top) {\n        this.left = Math.max(this.left, left);\n        this.right = Math.min(this.right, right);\n        this.bottom = Math.max(this.bottom, bottom);\n        this.top = Math.min(this.top, top);\n        // Ensure rectangle coordinates in order.\n        this.left = Math.min(this.left, this.right);\n        this.right = Math.max(this.right, this.left);\n        this.bottom = Math.min(this.bottom, this.top);\n        this.top = Math.max(this.top, this.bottom);\n    }\n\n    /**\n     * Push out the Rectangle to integer bounds.\n     */\n    snapToInt () {\n        this.left = Math.floor(this.left);\n        this.right = Math.ceil(this.right);\n        this.bottom = Math.floor(this.bottom);\n        this.top = Math.ceil(this.top);\n    }\n\n    /**\n     * Width of the Rectangle.\n     * @return {number} Width of rectangle.\n     */\n    get width () {\n        return Math.abs(this.left - this.right);\n    }\n\n    /**\n     * Height of the Rectangle.\n     * @return {number} Height of rectangle.\n     */\n    get height () {\n        return Math.abs(this.top - this.bottom);\n    }\n}\n\nmodule.exports = Rectangle;\n\n\n\n// WEBPACK FOOTER //\n// src/Rectangle.js","/**\n * @fileoverview\n * A utility to transform a texture coordinate to another texture coordinate\n * representing how the shaders apply effects.\n */\n\nconst twgl = require('twgl.js');\n\nconst ShaderManager = require('./ShaderManager');\n\n/**\n * A texture coordinate is between 0 and 1. 0.5 is the center position.\n * @const {number}\n */\nconst CENTER_X = 0.5;\n\n/**\n * A texture coordinate is between 0 and 1. 0.5 is the center position.\n * @const {number}\n */\nconst CENTER_Y = 0.5;\n\nclass EffectTransform {\n    /**\n     * Transform a texture coordinate to one that would be select after applying shader effects.\n     * @param {Drawable} drawable The drawable whose effects to emulate.\n     * @param {twgl.v3} vec The texture coordinate to transform.\n     * @param {?twgl.v3} dst A place to store the output coordinate.\n     * @return {twgl.v3} The coordinate after being transform by effects.\n     */\n    static transformPoint (drawable, vec, dst) {\n        dst = dst || twgl.v3.create();\n        twgl.v3.copy(vec, dst);\n\n        const uniforms = drawable.getUniforms();\n        const effects = drawable.getEnabledEffects();\n\n        if ((effects & ShaderManager.EFFECT_INFO.mosaic.mask) !== 0) {\n            // texcoord0 = fract(u_mosaic * texcoord0);\n            dst[0] = uniforms.u_mosaic * dst[0] % 1;\n            dst[1] = uniforms.u_mosaic * dst[1] % 1;\n        }\n        if ((effects & ShaderManager.EFFECT_INFO.pixelate.mask) !== 0) {\n            const skinUniforms = drawable.skin.getUniforms();\n            // vec2 pixelTexelSize = u_skinSize / u_pixelate;\n            const texelX = skinUniforms.u_skinSize[0] * uniforms.u_pixelate;\n            const texelY = skinUniforms.u_skinSize[1] * uniforms.u_pixelate;\n            // texcoord0 = (floor(texcoord0 * pixelTexelSize) + kCenter) /\n            //   pixelTexelSize;\n            dst[0] = (Math.floor(dst[0] * texelX) + CENTER_X) / texelX;\n            dst[1] = (Math.floor(dst[1] * texelY) + CENTER_Y) / texelY;\n        }\n        if ((effects & ShaderManager.EFFECT_INFO.whirl.mask) !== 0) {\n            // const float kRadius = 0.5;\n            const RADIUS = 0.5;\n            // vec2 offset = texcoord0 - kCenter;\n            const offsetX = dst[0] - CENTER_X;\n            const offsetY = dst[1] - CENTER_Y;\n            // float offsetMagnitude = length(offset);\n            const offsetMagnitude = twgl.v3.length(dst);\n            // float whirlFactor = max(1.0 - (offsetMagnitude / kRadius), 0.0);\n            const whirlFactor = Math.max(1.0 - (offsetMagnitude / RADIUS), 0.0);\n            // float whirlActual = u_whirl * whirlFactor * whirlFactor;\n            const whirlActual = uniforms.u_whirl * whirlFactor * whirlFactor;\n            // float sinWhirl = sin(whirlActual);\n            const sinWhirl = Math.sin(whirlActual);\n            // float cosWhirl = cos(whirlActual);\n            const cosWhirl = Math.cos(whirlActual);\n            // mat2 rotationMatrix = mat2(\n            //     cosWhirl, -sinWhirl,\n            //     sinWhirl, cosWhirl\n            // );\n            const rot00 = cosWhirl;\n            const rot10 = -sinWhirl;\n            const rot01 = sinWhirl;\n            const rot11 = cosWhirl;\n\n            // texcoord0 = rotationMatrix * offset + kCenter;\n            dst[0] = (rot00 * offsetX) + (rot10 * offsetY) + CENTER_X;\n            dst[1] = (rot01 * offsetX) + (rot11 * offsetY) + CENTER_Y;\n        }\n        if ((effects & ShaderManager.EFFECT_INFO.fisheye.mask) !== 0) {\n            // vec2 vec = (texcoord0 - kCenter) / kCenter;\n            const vX = (dst[0] - CENTER_X) / CENTER_X;\n            const vY = (dst[1] - CENTER_Y) / CENTER_Y;\n            // float vecLength = length(vec);\n            const vLength = Math.sqrt((vX * vX) + (vY * vY));\n            // float r = pow(min(vecLength, 1.0), u_fisheye) * max(1.0, vecLength);\n            const r = Math.pow(Math.min(vLength, 1), uniforms.u_fisheye) * Math.max(1, vLength);\n            // vec2 unit = vec / vecLength;\n            const unitX = vX / vLength;\n            const unitY = vY / vLength;\n            // texcoord0 = kCenter + r * unit * kCenter;\n            dst[0] = CENTER_X + (r * unitX * CENTER_X);\n            dst[1] = CENTER_Y + (r * unitY * CENTER_Y);\n        }\n\n        return dst;\n    }\n}\n\nmodule.exports = EffectTransform;\n\n\n\n// WEBPACK FOOTER //\n// src/EffectTransform.js","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ScratchSVGRenderer\"] = factory();\n\telse\n\t\troot[\"ScratchSVGRenderer\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Synchronously load TTF fonts.\n// First, have Webpack load their data as Base 64 strings.\n/* eslint-disable global-require */\nvar FONTS = {\n    Donegal: __webpack_require__(1),\n    Gloria: __webpack_require__(2),\n    Mystery: __webpack_require__(3),\n    Marker: __webpack_require__(4),\n    Scratch: __webpack_require__(5)\n};\n/* eslint-enable global-require */\n\n// For each Base 64 string,\n// 1. Replace each with a usable @font-face tag that points to a Data URI.\n// 2. Inject the font into a style on `document.body`, so measurements\n//    can be accurately taken in SvgRenderer._transformMeasurements.\nvar documentStyleTag = document.createElement('style');\ndocumentStyleTag.id = 'scratch-font-styles';\nfor (var fontName in FONTS) {\n    var fontData = FONTS[fontName];\n    FONTS[fontName] = '@font-face {' + ('font-family: \"' + fontName + '\";src: url(\"data:application/x-font-ttf;charset=utf-8;base64,' + fontData + '\");}');\n    documentStyleTag.textContent += FONTS[fontName];\n}\ndocument.body.insertBefore(documentStyleTag, document.body.firstChild);\n\n/**\n * Main quirks-mode SVG rendering code.\n */\n\nvar SvgRenderer = function () {\n    /**\n     * Create a quirks-mode SVG renderer for a particular canvas.\n     * @param {HTMLCanvasElement} [canvas] An optional canvas element to draw to. If this is not provided, the renderer\n     * will create a new canvas.\n     * @constructor\n     */\n    function SvgRenderer(canvas) {\n        _classCallCheck(this, SvgRenderer);\n\n        this._canvas = canvas || document.createElement('canvas');\n        this._context = this._canvas.getContext('2d');\n        this._measurements = { x: 0, y: 0, width: 0, height: 0 };\n        this._cachedImage = null;\n    }\n\n    /**\n     * @returns {!HTMLCanvasElement} this renderer's target canvas.\n     */\n\n\n    _createClass(SvgRenderer, [{\n        key: 'fromString',\n\n\n        /**\n         * Load an SVG from a string and draw it.\n         * This will be parsed and transformed, and finally drawn.\n         * When drawing is finished, the `onFinish` callback is called.\n         * @param {string} svgString String of SVG data to draw in quirks-mode.\n         * @param {number} [scale] - Optionally, also scale the image by this factor (multiplied by `getDrawRatio()`).\n         * @param {Function} [onFinish] Optional callback for when drawing finished.\n         */\n        value: function fromString(svgString, scale, onFinish) {\n            this._loadString(svgString);\n            this._draw(scale, onFinish);\n        }\n\n        /**\n         * Load an SVG from a string and measure it.\n         * @param {string} svgString String of SVG data to draw in quirks-mode.\n         * @return {object} the natural size, in Scratch units, of this SVG.\n         */\n\n    }, {\n        key: 'measure',\n        value: function measure(svgString) {\n            this._loadString(svgString);\n            return this._measurements;\n        }\n\n        /**\n         * @return {Array<number>} the natural size, in Scratch units, of this SVG.\n         */\n\n    }, {\n        key: '_loadString',\n\n\n        /**\n         * Load an SVG string and normalize it. All the steps before drawing/measuring.\n         * @param {string} svgString String of SVG data to draw in quirks-mode.\n         */\n        value: function _loadString(svgString) {\n            // New svg string invalidates the cached image\n            this._cachedImage = null;\n\n            // Parse string into SVG XML.\n            var parser = new DOMParser();\n            this._svgDom = parser.parseFromString(svgString, 'text/xml');\n            if (this._svgDom.childNodes.length < 1 || this._svgDom.documentElement.localName !== 'svg') {\n                throw new Error('Document does not appear to be SVG.');\n            }\n            this._svgTag = this._svgDom.documentElement;\n            // Transform all text elements.\n            this._transformText();\n            // Transform measurements.\n            this._transformMeasurements();\n        }\n\n        /**\n         * Transforms an SVG's text elements for Scratch 2.0 quirks.\n         * These quirks include:\n         * 1. `x` and `y` properties are removed/ignored.\n         * 2. Alignment is set to `text-before-edge`.\n         * 3. Line-breaks are converted to explicit <tspan> elements.\n         * 4. Any required fonts are injected.\n         */\n\n    }, {\n        key: '_transformText',\n        value: function _transformText() {\n            // Collect all text elements into a list.\n            var textElements = [];\n            var collectText = function collectText(domElement) {\n                if (domElement.localName === 'text') {\n                    textElements.push(domElement);\n                }\n                for (var i = 0; i < domElement.childNodes.length; i++) {\n                    collectText(domElement.childNodes[i]);\n                }\n            };\n            collectText(this._svgTag);\n            // For each text element, apply quirks.\n            var fontsNeeded = {};\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = textElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var textElement = _step.value;\n\n                    // Remove x and y attributes - they are not used in Scratch.\n                    textElement.removeAttribute('x');\n                    textElement.removeAttribute('y');\n                    // Set text-before-edge alignment:\n                    // Scratch renders all text like this.\n                    textElement.setAttribute('alignment-baseline', 'text-before-edge');\n                    // If there's no font size provided, provide one.\n                    if (!textElement.getAttribute('font-size')) {\n                        textElement.setAttribute('font-size', '14');\n                    }\n                    // If there's no font-family provided, provide one.\n                    if (!textElement.getAttribute('font-family')) {\n                        textElement.setAttribute('font-family', 'Helvetica');\n                    }\n                    // Collect fonts that need injection.\n                    var font = textElement.getAttribute('font-family');\n                    fontsNeeded[font] = true;\n                    // Fix line breaks in text, which are not natively supported by SVG.\n                    var text = textElement.textContent;\n                    if (text) {\n                        textElement.textContent = '';\n                        var lines = text.split('\\n');\n                        text = '';\n                        var _iteratorNormalCompletion3 = true;\n                        var _didIteratorError3 = false;\n                        var _iteratorError3 = undefined;\n\n                        try {\n                            for (var _iterator3 = lines[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                                var line = _step3.value;\n\n                                var tspanNode = this._createSVGElement('tspan');\n                                tspanNode.setAttribute('x', '0');\n                                tspanNode.setAttribute('dy', '1.2em');\n                                tspanNode.textContent = line;\n                                textElement.appendChild(tspanNode);\n                            }\n                        } catch (err) {\n                            _didIteratorError3 = true;\n                            _iteratorError3 = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                    _iterator3.return();\n                                }\n                            } finally {\n                                if (_didIteratorError3) {\n                                    throw _iteratorError3;\n                                }\n                            }\n                        }\n                    }\n                }\n                // Inject fonts that are needed.\n                // It would be nice if there were another way to get the SVG-in-canvas\n                // to render the correct font family, but I couldn't find any other way.\n                // Other things I tried:\n                // Just injecting the font-family into the document: no effect.\n                // External stylesheet linked to by SVG: no effect.\n                // Using a <link> or <style>@import</style> to link to font-family\n                // injected into the document: no effect.\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            var newDefs = this._createSVGElement('defs');\n            var newStyle = this._createSVGElement('style');\n            var allFonts = Object.keys(fontsNeeded);\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = allFonts[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var font = _step2.value;\n\n                    if (FONTS.hasOwnProperty(font)) {\n                        newStyle.textContent += FONTS[font];\n                    }\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            newDefs.appendChild(newStyle);\n            this._svgTag.insertBefore(newDefs, this._svgTag.childNodes[0]);\n        }\n\n        /**\n         * Find the largest stroke width in the svg. If a shape has no\n         * `stroke` property, it has a stroke-width of 0. If it has a `stroke`,\n         * it is by default a stroke-width of 1.\n         * This is used to enlarge the computed bounding box, which doesn't take\n         * stroke width into account.\n         * @param {SVGSVGElement} rootNode The root SVG node to traverse.\n         * @return {number} The largest stroke width in the SVG.\n         */\n\n    }, {\n        key: '_findLargestStrokeWidth',\n        value: function _findLargestStrokeWidth(rootNode) {\n            var largestStrokeWidth = 0;\n            var collectStrokeWidths = function collectStrokeWidths(domElement) {\n                if (domElement.getAttribute) {\n                    if (domElement.getAttribute('stroke')) {\n                        largestStrokeWidth = Math.max(largestStrokeWidth, 1);\n                    }\n                    if (domElement.getAttribute('stroke-width')) {\n                        largestStrokeWidth = Math.max(largestStrokeWidth, Number(domElement.getAttribute('stroke-width')) || 0);\n                    }\n                }\n                for (var i = 0; i < domElement.childNodes.length; i++) {\n                    collectStrokeWidths(domElement.childNodes[i]);\n                }\n            };\n            collectStrokeWidths(rootNode);\n            return largestStrokeWidth;\n        }\n\n        /**\n         * Transform the measurements of the SVG.\n         * In Scratch 2.0, SVGs are drawn without respect to the width,\n         * height, and viewBox attribute on the tag. The exporter\n         * does output these properties - but they appear to be incorrect often.\n         * To address the incorrect measurements, we append the DOM to the\n         * document, and then use SVG's native `getBBox` to find the real\n         * drawn dimensions. This ensures things drawn in negative dimensions,\n         * outside the given viewBox, etc., are all eventually drawn to the canvas.\n         * I tried to do this several other ways: stripping the width/height/viewBox\n         * attributes and then drawing (Firefox won't draw anything),\n         * or inflating them and then measuring a canvas. But this seems to be\n         * a natural and performant way.\n         */\n\n    }, {\n        key: '_transformMeasurements',\n        value: function _transformMeasurements() {\n            // Save `svgText` for later re-parsing.\n            var svgText = this._toString();\n\n            // Append the SVG dom to the document.\n            // This allows us to use `getBBox` on the page,\n            // which returns the full bounding-box of all drawn SVG\n            // elements, similar to how Scratch 2.0 did measurement.\n            var svgSpot = document.createElement('span');\n            var bbox = void 0;\n            try {\n                document.body.appendChild(svgSpot);\n                svgSpot.appendChild(this._svgTag);\n                // Take the bounding box.\n                bbox = this._svgTag.getBBox();\n            } finally {\n                // Always destroy the element, even if, for example, getBBox throws.\n                document.body.removeChild(svgSpot);\n            }\n\n            // Re-parse the SVG from `svgText`. The above DOM becomes\n            // unusable/undrawable in browsers once it's appended to the page,\n            // perhaps for security reasons?\n            var parser = new DOMParser();\n            this._svgDom = parser.parseFromString(svgText, 'text/xml');\n            this._svgTag = this._svgDom.documentElement;\n\n            // Enlarge the bbox from the largest found stroke width\n            // This may have false-positives, but at least the bbox will always\n            // contain the full graphic including strokes.\n            var halfStrokeWidth = this._findLargestStrokeWidth(this._svgTag) / 2;\n            var width = bbox.width + halfStrokeWidth * 2;\n            var height = bbox.height + halfStrokeWidth * 2;\n            var x = bbox.x - halfStrokeWidth;\n            var y = bbox.y - halfStrokeWidth;\n\n            // Set the correct measurements on the SVG tag, and save them.\n            this._svgTag.setAttribute('width', width);\n            this._svgTag.setAttribute('height', height);\n            this._svgTag.setAttribute('viewBox', x + ' ' + y + ' ' + width + ' ' + height);\n            this._measurements = {\n                width: width,\n                height: height,\n                x: x,\n                y: y\n            };\n        }\n\n        /**\n         * Serialize the active SVG DOM to a string.\n         * @returns {string} String representing current SVG data.\n         */\n\n    }, {\n        key: '_toString',\n        value: function _toString() {\n            var serializer = new XMLSerializer();\n            return serializer.serializeToString(this._svgDom);\n        }\n\n        /**\n         * Get the drawing ratio, adjusted for HiDPI screens.\n         * @return {number} Scale ratio to draw to canvases with.\n         */\n\n    }, {\n        key: 'getDrawRatio',\n        value: function getDrawRatio() {\n            var devicePixelRatio = window.devicePixelRatio || 1;\n            var backingStoreRatio = this._context.webkitBackingStorePixelRatio || this._context.mozBackingStorePixelRatio || this._context.msBackingStorePixelRatio || this._context.oBackingStorePixelRatio || this._context.backingStorePixelRatio || 1;\n            return devicePixelRatio / backingStoreRatio;\n        }\n\n        /**\n         * Draw the SVG to a canvas. The canvas will automatically be scaled by the value returned by `getDrawRatio`.\n         * @param {number} [scale] - Optionally, also scale the image by this factor (multiplied by `getDrawRatio()`).\n         * @param {Function} [onFinish] - An optional callback to call when the draw operation is complete.\n         */\n\n    }, {\n        key: '_draw',\n        value: function _draw(scale, onFinish) {\n            var _this = this;\n\n            // Convert the SVG text to an Image, and then draw it to the canvas.\n            if (this._cachedImage) {\n                this._drawFromImage(scale, onFinish);\n            } else {\n                var img = new Image();\n                img.onload = function () {\n                    _this._cachedImage = img;\n                    _this._drawFromImage(scale, onFinish);\n                };\n                var svgText = this._toString();\n                img.src = 'data:image/svg+xml;utf8,' + encodeURIComponent(svgText);\n            }\n        }\n\n        /**\n         * Draw to the canvas from a loaded image element.\n         * @param {number} [scale] - Optionally, also scale the image by this factor (multiplied by `getDrawRatio()`).\n         * @param {Function} [onFinish] - An optional callback to call when the draw operation is complete.\n         **/\n\n    }, {\n        key: '_drawFromImage',\n        value: function _drawFromImage(scale, onFinish) {\n            if (!this._cachedImage) return;\n\n            var ratio = this.getDrawRatio() * (Number.isFinite(scale) ? scale : 1);\n            var bbox = this._measurements;\n            this._canvas.width = bbox.width * ratio;\n            this._canvas.height = bbox.height * ratio;\n            this._context.clearRect(0, 0, this._canvas.width, this._canvas.height);\n            this._context.scale(ratio, ratio);\n            this._context.drawImage(this._cachedImage, 0, 0);\n            // Reset the canvas transform after drawing.\n            this._context.setTransform(1, 0, 0, 1, 0, 0);\n            // Set the CSS style of the canvas to the actual measurements.\n            this._canvas.style.width = bbox.width;\n            this._canvas.style.height = bbox.height;\n            // All finished - call the callback if provided.\n            if (onFinish) {\n                onFinish();\n            }\n        }\n\n        /**\n         * Helper to create an SVG element with the correct NS.\n         * @param {string} tagName Tag name for the element.\n         * @return {!DOMElement} Element created.\n         */\n\n    }, {\n        key: '_createSVGElement',\n        value: function _createSVGElement(tagName) {\n            return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n        }\n    }, {\n        key: 'canvas',\n        get: function get() {\n            return this._canvas;\n        }\n    }, {\n        key: 'size',\n        get: function get() {\n            return [this._measurements.width, this._measurements.height];\n        }\n\n        /**\n         * @return {Array<number>} the offset (upper left corner) of the SVG's view box.\n         */\n\n    }, {\n        key: 'viewOffset',\n        get: function get() {\n            return [this._measurements.x, this._measurements.y];\n        }\n    }]);\n\n    return SvgRenderer;\n}();\n\nmodule.exports = SvgRenderer;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"\"\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"\"\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"\"\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"\"\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"\"\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=scratch-svg-renderer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/scratch-svg-renderer/dist/web/scratch-svg-renderer.js\n// module id = 8\n// module chunks = 0 1","// Generated by CoffeeScript 1.7.1\nvar UnicodeTrie, inflate;\n\ninflate = require('tiny-inflate');\n\nUnicodeTrie = (function() {\n  var DATA_BLOCK_LENGTH, DATA_GRANULARITY, DATA_MASK, INDEX_1_OFFSET, INDEX_2_BLOCK_LENGTH, INDEX_2_BMP_LENGTH, INDEX_2_MASK, INDEX_SHIFT, LSCP_INDEX_2_LENGTH, LSCP_INDEX_2_OFFSET, OMITTED_BMP_INDEX_1_LENGTH, SHIFT_1, SHIFT_1_2, SHIFT_2, UTF8_2B_INDEX_2_LENGTH, UTF8_2B_INDEX_2_OFFSET;\n\n  SHIFT_1 = 6 + 5;\n\n  SHIFT_2 = 5;\n\n  SHIFT_1_2 = SHIFT_1 - SHIFT_2;\n\n  OMITTED_BMP_INDEX_1_LENGTH = 0x10000 >> SHIFT_1;\n\n  INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;\n\n  INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;\n\n  INDEX_SHIFT = 2;\n\n  DATA_BLOCK_LENGTH = 1 << SHIFT_2;\n\n  DATA_MASK = DATA_BLOCK_LENGTH - 1;\n\n  LSCP_INDEX_2_OFFSET = 0x10000 >> SHIFT_2;\n\n  LSCP_INDEX_2_LENGTH = 0x400 >> SHIFT_2;\n\n  INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;\n\n  UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;\n\n  UTF8_2B_INDEX_2_LENGTH = 0x800 >> 6;\n\n  INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;\n\n  DATA_GRANULARITY = 1 << INDEX_SHIFT;\n\n  function UnicodeTrie(data) {\n    var isBuffer, uncompressedLength, view;\n    isBuffer = typeof data.readUInt32BE === 'function' && typeof data.slice === 'function';\n    if (isBuffer || data instanceof Uint8Array) {\n      if (isBuffer) {\n        this.highStart = data.readUInt32BE(0);\n        this.errorValue = data.readUInt32BE(4);\n        uncompressedLength = data.readUInt32BE(8);\n        data = data.slice(12);\n      } else {\n        view = new DataView(data.buffer);\n        this.highStart = view.getUint32(0);\n        this.errorValue = view.getUint32(4);\n        uncompressedLength = view.getUint32(8);\n        data = data.subarray(12);\n      }\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      data = inflate(data, new Uint8Array(uncompressedLength));\n      this.data = new Uint32Array(data.buffer);\n    } else {\n      this.data = data.data, this.highStart = data.highStart, this.errorValue = data.errorValue;\n    }\n  }\n\n  UnicodeTrie.prototype.get = function(codePoint) {\n    var index;\n    if (codePoint < 0 || codePoint > 0x10ffff) {\n      return this.errorValue;\n    }\n    if (codePoint < 0xd800 || (codePoint > 0xdbff && codePoint <= 0xffff)) {\n      index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n    if (codePoint <= 0xffff) {\n      index = (this.data[LSCP_INDEX_2_OFFSET + ((codePoint - 0xd800) >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n    if (codePoint < this.highStart) {\n      index = this.data[(INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH) + (codePoint >> SHIFT_1)];\n      index = this.data[index + ((codePoint >> SHIFT_2) & INDEX_2_MASK)];\n      index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);\n      return this.data[index];\n    }\n    return this.data[this.data.length - DATA_GRANULARITY];\n  };\n\n  return UnicodeTrie;\n\n})();\n\nmodule.exports = UnicodeTrie;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/unicode-trie/index.js\n// module id = 9\n// module chunks = 0 1","const RenderWebGL = require('./RenderWebGL');\n\n/**\n * Export for NPM & Node.js\n * @type {RenderWebGL}\n */\nmodule.exports = RenderWebGL;\n\n\n\n// WEBPACK FOOTER //\n// src/index.js","const EventEmitter = require('events');\n\nconst hull = require('hull.js');\nconst twgl = require('twgl.js');\n\nconst BitmapSkin = require('./BitmapSkin');\nconst Drawable = require('./Drawable');\nconst Rectangle = require('./Rectangle');\nconst PenSkin = require('./PenSkin');\nconst RenderConstants = require('./RenderConstants');\nconst ShaderManager = require('./ShaderManager');\nconst SVGSkin = require('./SVGSkin');\nconst SVGTextBubble = require('./util/svg-text-bubble');\nconst EffectTransform = require('./EffectTransform');\n\n/**\n * @callback RenderWebGL#idFilterFunc\n * @param {int} drawableID The ID to filter.\n * @return {bool} True if the ID passes the filter, otherwise false.\n */\n\n/**\n * Maximum touch size for a picking check.\n * @todo Figure out a reasonable max size. Maybe this should be configurable?\n * @type {Array<int>}\n * @memberof RenderWebGL\n */\nconst MAX_TOUCH_SIZE = [3, 3];\n\n/**\n * \"touching {color}?\" or \"{color} touching {color}?\" tests will be true if the\n * target is touching a color whose components are each within this tolerance of\n * the corresponding component of the query color.\n * between 0 (exact matches only) and 255 (match anything).\n * @type {object.<string,int>}\n * @memberof RenderWebGL\n */\nconst TOLERANCE_TOUCHING_COLOR = {\n    R: 7,\n    G: 7,\n    B: 15,\n    Mask: 2\n};\n\n/**\n * Constant used for masking when detecting the color white\n * @type {Array<int>}\n * @memberof RenderWebGL\n */\nconst COLOR_BLACK = [0, 0, 0, 1];\n\n/**\n * Sprite Fencing - The number of pixels a sprite is required to leave remaining\n * onscreen around the edge of the staging area.\n * @type {number}\n */\nconst FENCE_WIDTH = 15;\n\n\nclass RenderWebGL extends EventEmitter {\n    /**\n     * Check if this environment appears to support this renderer before attempting to create an instance.\n     * Catching an exception from the constructor is also a valid way to test for (lack of) support.\n     * @param {canvas} [optCanvas] - An optional canvas to use for the test. Otherwise a temporary canvas will be used.\n     * @returns {boolean} - True if this environment appears to support this renderer, false otherwise.\n     */\n    static isSupported (optCanvas) {\n        try {\n            // Create the context the same way that the constructor will: attributes may make the difference.\n            return !!RenderWebGL._getContext(optCanvas || document.createElement('canvas'));\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Ask TWGL to create a rendering context with the attributes used by this renderer.\n     * @param {canvas} canvas - attach the context to this canvas.\n     * @returns {WebGLRenderingContext} - a TWGL rendering context (backed by either WebGL 1.0 or 2.0).\n     * @private\n     */\n    static _getContext (canvas) {\n        return twgl.getWebGLContext(canvas, {alpha: false, stencil: true});\n    }\n\n    /**\n     * Create a renderer for drawing Scratch sprites to a canvas using WebGL.\n     * Coordinates will default to Scratch 2.0 values if unspecified.\n     * The stage's \"native\" size will be calculated from the these coordinates.\n     * For example, the defaults result in a native size of 480x360.\n     * Queries such as \"touching color?\" will always execute at the native size.\n     * @see RenderWebGL#setStageSize\n     * @see RenderWebGL#resize\n     * @param {canvas} canvas The canvas to draw onto.\n     * @param {int} [xLeft=-240] The x-coordinate of the left edge.\n     * @param {int} [xRight=240] The x-coordinate of the right edge.\n     * @param {int} [yBottom=-180] The y-coordinate of the bottom edge.\n     * @param {int} [yTop=180] The y-coordinate of the top edge.\n     * @constructor\n     * @listens RenderWebGL#event:NativeSizeChanged\n     */\n    constructor (canvas, xLeft, xRight, yBottom, yTop) {\n        super();\n\n        /** @type {WebGLRenderingContext} */\n        const gl = this._gl = RenderWebGL._getContext(canvas);\n        if (!gl) {\n            throw new Error('Could not get WebGL context: this browser or environment may not support WebGL.');\n        }\n\n        /** @type {Drawable[]} */\n        this._allDrawables = [];\n\n        /** @type {Skin[]} */\n        this._allSkins = [];\n\n        /** @type {Array<int>} */\n        this._drawList = [];\n\n        /** @type {int} */\n        this._nextDrawableId = RenderConstants.ID_NONE + 1;\n\n        /** @type {int} */\n        this._nextSkinId = RenderConstants.ID_NONE + 1;\n\n        /** @type {module:twgl/m4.Mat4} */\n        this._projection = twgl.m4.identity();\n\n        /** @type {ShaderManager} */\n        this._shaderManager = new ShaderManager(gl);\n\n        /** @type {HTMLCanvasElement} */\n        this._tempCanvas = document.createElement('canvas');\n\n        this._svgTextBubble = new SVGTextBubble();\n\n        this._createGeometry();\n\n        this.on(RenderConstants.Events.NativeSizeChanged, this.onNativeSizeChanged);\n\n        this.setBackgroundColor(1, 1, 1);\n        this.setStageSize(xLeft || -240, xRight || 240, yBottom || -180, yTop || 180);\n        this.resize(this._nativeSize[0], this._nativeSize[1]);\n\n        gl.disable(gl.DEPTH_TEST);\n        /** @todo disable when no partial transparency? */\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ZERO, gl.ONE);\n    }\n\n    /**\n     * @returns {WebGLRenderingContext} the WebGL rendering context associated with this renderer.\n     */\n    get gl () {\n        return this._gl;\n    }\n\n    /**\n     * Set the physical size of the stage in device-independent pixels.\n     * This will be multiplied by the device's pixel ratio on high-DPI displays.\n     * @param {int} pixelsWide The desired width in device-independent pixels.\n     * @param {int} pixelsTall The desired height in device-independent pixels.\n     */\n    resize (pixelsWide, pixelsTall) {\n        const pixelRatio = window.devicePixelRatio || 1;\n        this._gl.canvas.width = pixelsWide * pixelRatio;\n        this._gl.canvas.height = pixelsTall * pixelRatio;\n    }\n\n    /**\n     * Set the background color for the stage. The stage will be cleared with this\n     * color each frame.\n     * @param {number} red The red component for the background.\n     * @param {number} green The green component for the background.\n     * @param {number} blue The blue component for the background.\n     */\n    setBackgroundColor (red, green, blue) {\n        this._backgroundColor = [red, green, blue, 1];\n    }\n\n    /**\n     * Tell the renderer to draw various debug information to the provided canvas\n     * during certain operations.\n     * @param {canvas} canvas The canvas to use for debug output.\n     */\n    setDebugCanvas (canvas) {\n        this._debugCanvas = canvas;\n    }\n\n    /**\n     * Set logical size of the stage in Scratch units.\n     * @param {int} xLeft The left edge's x-coordinate. Scratch 2 uses -240.\n     * @param {int} xRight The right edge's x-coordinate. Scratch 2 uses 240.\n     * @param {int} yBottom The bottom edge's y-coordinate. Scratch 2 uses -180.\n     * @param {int} yTop The top edge's y-coordinate. Scratch 2 uses 180.\n     */\n    setStageSize (xLeft, xRight, yBottom, yTop) {\n        this._xLeft = xLeft;\n        this._xRight = xRight;\n        this._yBottom = yBottom;\n        this._yTop = yTop;\n\n        // swap yBottom & yTop to fit Scratch convention of +y=up\n        this._projection = twgl.m4.ortho(xLeft, xRight, yBottom, yTop, -1, 1);\n\n        this._setNativeSize(Math.abs(xRight - xLeft), Math.abs(yBottom - yTop));\n    }\n\n    /**\n     * @return {Array<int>} the \"native\" size of the stage, which is used for pen, query renders, etc.\n     */\n    getNativeSize () {\n        return [this._nativeSize[0], this._nativeSize[1]];\n    }\n\n    /**\n     * Set the \"native\" size of the stage, which is used for pen, query renders, etc.\n     * @param {int} width - the new width to set.\n     * @param {int} height - the new height to set.\n     * @private\n     * @fires RenderWebGL#event:NativeSizeChanged\n     */\n    _setNativeSize (width, height) {\n        this._nativeSize = [width, height];\n        this.emit(RenderConstants.Events.NativeSizeChanged, {newSize: this._nativeSize});\n    }\n\n    /**\n     * Create a new bitmap skin from a snapshot of the provided bitmap data.\n     * @param {ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} bitmapData - new contents for this skin.\n     * @param {!int} [costumeResolution=1] - The resolution to use for this bitmap.\n     * @param {?Array<number>} [rotationCenter] Optional: rotation center of the skin. If not supplied, the center of\n     * the skin will be used.\n     * @returns {!int} the ID for the new skin.\n     */\n    createBitmapSkin (bitmapData, costumeResolution, rotationCenter) {\n        const skinId = this._nextSkinId++;\n        const newSkin = new BitmapSkin(skinId, this);\n        newSkin.setBitmap(bitmapData, costumeResolution, rotationCenter);\n        this._allSkins[skinId] = newSkin;\n        return skinId;\n    }\n\n    /**\n     * Create a new SVG skin.\n     * @param {!string} svgData - new SVG to use.\n     * @param {?Array<number>} rotationCenter Optional: rotation center of the skin. If not supplied, the center of the\n     * skin will be used\n     * @returns {!int} the ID for the new skin.\n     */\n    createSVGSkin (svgData, rotationCenter) {\n        const skinId = this._nextSkinId++;\n        const newSkin = new SVGSkin(skinId, this);\n        newSkin.setSVG(svgData, rotationCenter);\n        this._allSkins[skinId] = newSkin;\n        return skinId;\n    }\n\n    /**\n     * Create a new PenSkin - a skin which implements a Scratch pen layer.\n     * @returns {!int} the ID for the new skin.\n     */\n    createPenSkin () {\n        const skinId = this._nextSkinId++;\n        const newSkin = new PenSkin(skinId, this);\n        this._allSkins[skinId] = newSkin;\n        return skinId;\n    }\n\n    /**\n     * Create a new SVG skin using the text bubble svg creator. The rotation center\n     * is always placed at the top left.\n     * @param {!string} type - either \"say\" or \"think\".\n     * @param {!string} text - the text for the bubble.\n     * @param {!boolean} pointsLeft - which side the bubble is pointing.\n     * @returns {!int} the ID for the new skin.\n     */\n    createTextSkin (type, text, pointsLeft) {\n        const bubbleSvg = this._svgTextBubble.buildString(type, text, pointsLeft);\n        return this.createSVGSkin(bubbleSvg, [0, 0]);\n    }\n\n    /**\n     * Update an existing SVG skin, or create an SVG skin if the previous skin was not SVG.\n     * @param {!int} skinId the ID for the skin to change.\n     * @param {!string} svgData - new SVG to use.\n     * @param {?Array<number>} rotationCenter Optional: rotation center of the skin. If not supplied, the center of the\n     * skin will be used\n     */\n    updateSVGSkin (skinId, svgData, rotationCenter) {\n        if (this._allSkins[skinId] instanceof SVGSkin) {\n            this._allSkins[skinId].setSVG(svgData, rotationCenter);\n            return;\n        }\n\n        const newSkin = new SVGSkin(skinId, this);\n        newSkin.setSVG(svgData, rotationCenter);\n        const oldSkin = this._allSkins[skinId];\n        this._allSkins[skinId] = newSkin;\n\n        // Tell drawables to update\n        for (const drawable of this._allDrawables) {\n            if (drawable && drawable.skin === oldSkin) {\n                drawable.skin = newSkin;\n            }\n        }\n        oldSkin.dispose();\n    }\n\n    /**\n     * Update a skin using the text bubble svg creator.\n     * @param {!int} skinId the ID for the skin to change.\n     * @param {!string} type - either \"say\" or \"think\".\n     * @param {!string} text - the text for the bubble.\n     * @param {!boolean} pointsLeft - which side the bubble is pointing.\n     */\n    updateTextSkin (skinId, type, text, pointsLeft) {\n        const bubbleSvg = this._svgTextBubble.buildString(type, text, pointsLeft);\n        this.updateSVGSkin(skinId, bubbleSvg, [0, 0]);\n    }\n\n\n    /**\n     * Destroy an existing skin. Do not use the skin or its ID after calling this.\n     * @param {!int} skinId - The ID of the skin to destroy.\n     */\n    destroySkin (skinId) {\n        const oldSkin = this._allSkins[skinId];\n        oldSkin.dispose();\n        delete this._allSkins[skinId];\n    }\n\n    /**\n     * Create a new Drawable and add it to the scene.\n     * @returns {int} The ID of the new Drawable.\n     */\n    createDrawable () {\n        const drawableID = this._nextDrawableId++;\n        const drawable = new Drawable(drawableID);\n        this._allDrawables[drawableID] = drawable;\n        this._drawList.push(drawableID);\n\n        drawable.skin = null;\n\n        return drawableID;\n    }\n\n    /**\n     * Destroy a Drawable, removing it from the scene.\n     * @param {int} drawableID The ID of the Drawable to remove.\n     */\n    destroyDrawable (drawableID) {\n        const drawable = this._allDrawables[drawableID];\n        drawable.dispose();\n        delete this._allDrawables[drawableID];\n\n        let index;\n        while ((index = this._drawList.indexOf(drawableID)) >= 0) {\n            this._drawList.splice(index, 1);\n        }\n    }\n\n    /**\n     * Set a drawable's order in the drawable list (effectively, z/layer).\n     * Can be used to move drawables to absolute positions in the list,\n     * or relative to their current positions.\n     * \"go back N layers\": setDrawableOrder(id, -N, true, 1); (assuming stage at 0).\n     * \"go to back\": setDrawableOrder(id, 1); (assuming stage at 0).\n     * \"go to front\": setDrawableOrder(id, Infinity);\n     * @param {int} drawableID ID of Drawable to reorder.\n     * @param {number} order New absolute order or relative order adjusment.\n     * @param {boolean=} optIsRelative If set, `order` refers to a relative change.\n     * @param {number=} optMin If set, order constrained to be at least `optMin`.\n     * @return {?number} New order if changed, or null.\n     */\n    setDrawableOrder (drawableID, order, optIsRelative, optMin) {\n        const oldIndex = this._drawList.indexOf(drawableID);\n        if (oldIndex >= 0) {\n            // Remove drawable from the list.\n            const drawable = this._drawList.splice(oldIndex, 1)[0];\n            // Determine new index.\n            let newIndex = order;\n            if (optIsRelative) {\n                newIndex += oldIndex;\n            }\n            if (optMin) {\n                newIndex = Math.max(newIndex, optMin);\n            }\n            newIndex = Math.max(newIndex, 0);\n            // Insert at new index.\n            this._drawList.splice(newIndex, 0, drawable);\n            return this._drawList.indexOf(drawable);\n        }\n        return null;\n    }\n\n    /**\n     * Draw all current drawables and present the frame on the canvas.\n     */\n    draw () {\n        const gl = this._gl;\n\n        twgl.bindFramebufferInfo(gl, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clearColor.apply(gl, this._backgroundColor);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        this._drawThese(this._drawList, ShaderManager.DRAW_MODE.default, this._projection);\n    }\n\n    /**\n     * Get the precise bounds for a Drawable.\n     * @param {int} drawableID ID of Drawable to get bounds for.\n     * @return {object} Bounds for a tight box around the Drawable.\n     */\n    getBounds (drawableID) {\n        const drawable = this._allDrawables[drawableID];\n        // Tell the Drawable about its updated convex hull, if necessary.\n        if (drawable.needsConvexHullPoints()) {\n            const points = this._getConvexHullPointsForDrawable(drawableID);\n            drawable.setConvexHullPoints(points);\n        }\n        const bounds = drawable.getFastBounds();\n        // In debug mode, draw the bounds.\n        if (this._debugCanvas) {\n            const gl = this._gl;\n            this._debugCanvas.width = gl.canvas.width;\n            this._debugCanvas.height = gl.canvas.height;\n            const context = this._debugCanvas.getContext('2d');\n            context.drawImage(gl.canvas, 0, 0);\n            context.strokeStyle = '#FF0000';\n            const pr = window.devicePixelRatio;\n            context.strokeRect(\n                pr * (bounds.left + (this._nativeSize[0] / 2)),\n                pr * (-bounds.top + (this._nativeSize[1] / 2)),\n                pr * (bounds.right - bounds.left),\n                pr * (-bounds.bottom + bounds.top)\n            );\n        }\n        return bounds;\n    }\n\n    /**\n     * Get the current skin (costume) size of a Drawable.\n     * @param {int} drawableID The ID of the Drawable to measure.\n     * @return {Array<number>} Skin size, width and height.\n     */\n    getSkinSize (drawableID) {\n        const drawable = this._allDrawables[drawableID];\n        return drawable.skin.size;\n    }\n\n    /**\n     * Check if a particular Drawable is touching a particular color.\n     * Unlike touching drawable, touching color tests invisible sprites.\n     * @param {int} drawableID The ID of the Drawable to check.\n     * @param {Array<int>} color3b Test if the Drawable is touching this color.\n     * @param {Array<int>} [mask3b] Optionally mask the check to this part of Drawable.\n     * @returns {boolean} True iff the Drawable is touching the color.\n     */\n    isTouchingColor (drawableID, color3b, mask3b) {\n        const gl = this._gl;\n        twgl.bindFramebufferInfo(gl, this._queryBufferInfo);\n\n        const bounds = this._touchingBounds(drawableID);\n        if (!bounds) {\n            return false;\n        }\n        const candidateIDs = this._filterCandidatesTouching(drawableID, this._drawList, bounds);\n        if (!candidateIDs) {\n            return false;\n        }\n\n        // Limit size of viewport to the bounds around the target Drawable,\n        // and create the projection matrix for the draw.\n        gl.viewport(0, 0, bounds.width, bounds.height);\n        const projection = twgl.m4.ortho(bounds.left, bounds.right, bounds.top, bounds.bottom, -1, 1);\n\n        let fillBackgroundColor = this._backgroundColor;\n\n        // When using masking such that the background fill color will showing through, ensure we don't\n        // fill using the same color that we are trying to detect!\n        if (color3b[0] > 196 && color3b[1] > 196 && color3b[2] > 196) {\n            fillBackgroundColor = COLOR_BLACK;\n        }\n\n        gl.clearColor.apply(gl, fillBackgroundColor);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n\n        let extraUniforms;\n        if (mask3b) {\n            extraUniforms = {\n                u_colorMask: [mask3b[0] / 255, mask3b[1] / 255, mask3b[2] / 255],\n                u_colorMaskTolerance: TOLERANCE_TOUCHING_COLOR.Mask / 255\n            };\n        }\n\n        try {\n            gl.enable(gl.STENCIL_TEST);\n            gl.stencilFunc(gl.ALWAYS, 1, 1);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n            gl.colorMask(false, false, false, false);\n            this._drawThese(\n                [drawableID],\n                mask3b ?\n                    ShaderManager.DRAW_MODE.colorMask :\n                    ShaderManager.DRAW_MODE.silhouette,\n                projection,\n                {\n                    extraUniforms,\n                    ignoreVisibility: true // Touching color ignores sprite visibility\n                });\n\n            gl.stencilFunc(gl.EQUAL, 1, 1);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n            gl.colorMask(true, true, true, true);\n\n            this._drawThese(candidateIDs, ShaderManager.DRAW_MODE.default, projection,\n                {idFilterFunc: testID => testID !== drawableID}\n            );\n        } finally {\n            gl.colorMask(true, true, true, true);\n            gl.disable(gl.STENCIL_TEST);\n        }\n\n        const pixels = new Uint8Array(Math.floor(bounds.width * bounds.height * 4));\n        gl.readPixels(0, 0, bounds.width, bounds.height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n        if (this._debugCanvas) {\n            this._debugCanvas.width = bounds.width;\n            this._debugCanvas.height = bounds.height;\n            const context = this._debugCanvas.getContext('2d');\n            const imageData = context.getImageData(0, 0, bounds.width, bounds.height);\n            imageData.data.set(pixels);\n            context.putImageData(imageData, 0, 0);\n        }\n\n        for (let pixelBase = 0; pixelBase < pixels.length; pixelBase += 4) {\n            const pixelDistanceR = Math.abs(pixels[pixelBase] - color3b[0]);\n            const pixelDistanceG = Math.abs(pixels[pixelBase + 1] - color3b[1]);\n            const pixelDistanceB = Math.abs(pixels[pixelBase + 2] - color3b[2]);\n\n            if (pixelDistanceR <= TOLERANCE_TOUCHING_COLOR.R &&\n                pixelDistanceG <= TOLERANCE_TOUCHING_COLOR.G &&\n                pixelDistanceB <= TOLERANCE_TOUCHING_COLOR.B) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if a particular Drawable is touching any in a set of Drawables.\n     * @param {int} drawableID The ID of the Drawable to check.\n     * @param {Array<int>} candidateIDs The Drawable IDs to check, otherwise all.\n     * @returns {boolean} True iff the Drawable is touching one of candidateIDs.\n     */\n    isTouchingDrawables (drawableID, candidateIDs) {\n        candidateIDs = candidateIDs || this._drawList;\n\n        const gl = this._gl;\n\n        twgl.bindFramebufferInfo(gl, this._queryBufferInfo);\n\n        const bounds = this._touchingBounds(drawableID);\n        if (!bounds) {\n            return false;\n        }\n        candidateIDs = this._filterCandidatesTouching(drawableID, candidateIDs, bounds);\n        if (!candidateIDs) {\n            return false;\n        }\n\n        // Limit size of viewport to the bounds around the target Drawable,\n        // and create the projection matrix for the draw.\n        gl.viewport(0, 0, bounds.width, bounds.height);\n        const projection = twgl.m4.ortho(bounds.left, bounds.right, bounds.top, bounds.bottom, -1, 1);\n\n        const noneColor = Drawable.color4fFromID(RenderConstants.ID_NONE);\n        gl.clearColor.apply(gl, noneColor);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n\n        try {\n            gl.enable(gl.STENCIL_TEST);\n            gl.stencilFunc(gl.ALWAYS, 1, 1);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n            gl.colorMask(false, false, false, false);\n            this._drawThese([drawableID], ShaderManager.DRAW_MODE.silhouette, projection);\n\n            gl.stencilFunc(gl.EQUAL, 1, 1);\n            gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n            gl.colorMask(true, true, true, true);\n\n            this._drawThese(candidateIDs, ShaderManager.DRAW_MODE.silhouette, projection,\n                {idFilterFunc: testID => testID !== drawableID}\n            );\n        } finally {\n            gl.colorMask(true, true, true, true);\n            gl.disable(gl.STENCIL_TEST);\n        }\n\n        const pixels = new Uint8Array(Math.floor(bounds.width * bounds.height * 4));\n        gl.readPixels(0, 0, bounds.width, bounds.height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n        if (this._debugCanvas) {\n            this._debugCanvas.width = bounds.width;\n            this._debugCanvas.height = bounds.height;\n            const context = this._debugCanvas.getContext('2d');\n            const imageData = context.getImageData(0, 0, bounds.width, bounds.height);\n            imageData.data.set(pixels);\n            context.putImageData(imageData, 0, 0);\n        }\n\n        for (let pixelBase = 0; pixelBase < pixels.length; pixelBase += 4) {\n            const pixelID = Drawable.color3bToID(\n                pixels[pixelBase],\n                pixels[pixelBase + 1],\n                pixels[pixelBase + 2]);\n            if (pixelID > RenderConstants.ID_NONE) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Detect which sprite, if any, is at the given location. This function will not\n     * pick drawables that are not visible or have ghost set all the way up.\n     * @param {int} centerX The client x coordinate of the picking location.\n     * @param {int} centerY The client y coordinate of the picking location.\n     * @param {int} [touchWidth] The client width of the touch event (optional).\n     * @param {int} [touchHeight] The client height of the touch event (optional).\n     * @param {Array<int>} [candidateIDs] The Drawable IDs to pick from, otherwise all.\n     * @returns {int} The ID of the topmost Drawable under the picking location, or\n     * RenderConstants.ID_NONE if there is no Drawable at that location.\n     */\n    pick (centerX, centerY, touchWidth, touchHeight, candidateIDs) {\n        const gl = this._gl;\n\n        touchWidth = touchWidth || 1;\n        touchHeight = touchHeight || 1;\n        candidateIDs = (candidateIDs || this._drawList).filter(id => {\n            const drawable = this._allDrawables[id];\n            const uniforms = drawable.getUniforms();\n            return drawable.getVisible() && uniforms.u_ghost !== 0;\n        });\n\n        const clientToGLX = gl.canvas.width / gl.canvas.clientWidth;\n        const clientToGLY = gl.canvas.height / gl.canvas.clientHeight;\n\n        centerX *= clientToGLX;\n        centerY *= clientToGLY;\n        touchWidth *= clientToGLX;\n        touchHeight *= clientToGLY;\n\n        touchWidth = Math.max(1, Math.min(touchWidth, MAX_TOUCH_SIZE[0]));\n        touchHeight = Math.max(1, Math.min(touchHeight, MAX_TOUCH_SIZE[1]));\n\n        const pixelLeft = Math.floor(centerX - Math.floor(touchWidth / 2) + 0.5);\n        const pixelTop = Math.floor(centerY - Math.floor(touchHeight / 2) + 0.5);\n\n        const widthPerPixel = (this._xRight - this._xLeft) / this._gl.canvas.width;\n        const heightPerPixel = (this._yBottom - this._yTop) / this._gl.canvas.height;\n\n        const pickLeft = this._xLeft + (pixelLeft * widthPerPixel);\n        const pickTop = this._yTop + (pixelTop * heightPerPixel);\n\n        const hits = [];\n        const worldPos = twgl.v3.create(0, 0, 0);\n        worldPos[2] = 0;\n\n        // Iterate over the canvas pixels and check if any candidate can be\n        // touched at that point.\n        for (let x = 0; x < touchWidth; x++) {\n            worldPos[0] = x + pickLeft;\n            for (let y = 0; y < touchHeight; y++) {\n                worldPos[1] = y + pickTop;\n                // Check candidates in the reverse order they would have been\n                // drawn. This will determine what candiate's silhouette pixel\n                // would have been drawn at the point.\n                for (let d = candidateIDs.length - 1; d >= 0; d--) {\n                    const id = candidateIDs[d];\n                    const drawable = this._allDrawables[id];\n                    if (drawable.isTouching(worldPos)) {\n                        hits[id] = (hits[id] || 0) + 1;\n                        break;\n                    }\n                }\n            }\n        }\n\n        // Bias toward selecting anything over nothing\n        hits[RenderConstants.ID_NONE] = 0;\n\n        let hit = RenderConstants.ID_NONE;\n        for (const hitID in hits) {\n            if (hits.hasOwnProperty(hitID) && (hits[hitID] > hits[hit])) {\n                hit = hitID;\n            }\n        }\n\n        return hit | 0;\n    }\n\n    /**\n     * @typedef DrawableExtraction\n     * @property {Uint8Array} data Raw pixel data for the drawable\n     * @property {int} width Drawable bounding box width\n     * @property {int} height Drawable bounding box height\n     * @property {Array<number>} scratchOffset [x, y] offset in Scratch coordinates\n     * from the drawable position to the client x, y coordinate\n     * @property {int} x The x coordinate relative to drawable bounding box\n     * @property {int} y The y coordinate relative to drawable bounding box\n     */\n\n    /**\n     * Return drawable pixel data and picking coordinates relative to the drawable bounds\n     * @param {int} drawableID The ID of the drawable to get pixel data for\n     * @param {int} x The client x coordinate of the picking location.\n     * @param {int} y The client y coordinate of the picking location.\n     * @return {?DrawableExtraction} Data about the picked drawable\n     */\n    extractDrawable (drawableID, x, y) {\n        const drawable = this._allDrawables[drawableID];\n        if (!drawable) return null;\n\n        // Convert client coordinates into absolute scratch units\n        const scratchX = this._nativeSize[0] * ((x / this._gl.canvas.clientWidth) - 0.5);\n        const scratchY = this._nativeSize[1] * ((y / this._gl.canvas.clientHeight) - 0.5);\n\n        const gl = this._gl;\n        twgl.bindFramebufferInfo(gl, this._queryBufferInfo);\n\n        const bounds = drawable.getFastBounds();\n        bounds.snapToInt();\n\n        // Translate to scratch units relative to the drawable\n        const pickX = scratchX - bounds.left;\n        const pickY = scratchY + bounds.top;\n\n        // Limit size of viewport to the bounds around the target Drawable,\n        // and create the projection matrix for the draw.\n        gl.viewport(0, 0, bounds.width, bounds.height);\n        const projection = twgl.m4.ortho(bounds.left, bounds.right, bounds.top, bounds.bottom, -1, 1);\n\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        try {\n            gl.disable(gl.BLEND);\n            this._drawThese([drawableID], ShaderManager.DRAW_MODE.default, projection,\n                {effectMask: ~ShaderManager.EFFECT_INFO.ghost.mask});\n        } finally {\n            gl.enable(gl.BLEND);\n        }\n\n        const data = new Uint8Array(Math.floor(bounds.width * bounds.height * 4));\n        gl.readPixels(0, 0, bounds.width, bounds.height, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n        if (this._debugCanvas) {\n            this._debugCanvas.width = bounds.width;\n            this._debugCanvas.height = bounds.height;\n            const ctx = this._debugCanvas.getContext('2d');\n            const imageData = ctx.createImageData(bounds.width, bounds.height);\n            imageData.data.set(data);\n            ctx.putImageData(imageData, 0, 0);\n            ctx.beginPath();\n            ctx.arc(pickX, pickY, 3, 0, 2 * Math.PI, false);\n            ctx.fillStyle = 'white';\n            ctx.fill();\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = 'black';\n            ctx.stroke();\n        }\n\n        return {\n            data: data,\n            width: bounds.width,\n            height: bounds.height,\n            scratchOffset: [\n                -scratchX + drawable._position[0],\n                -scratchY - drawable._position[1]\n            ],\n            x: pickX,\n            y: pickY\n        };\n    }\n\n    /**\n     * @typedef ColorExtraction\n     * @property {Uint8Array} data Raw pixel data for the drawable\n     * @property {int} width Drawable bounding box width\n     * @property {int} height Drawable bounding box height\n     * @property {object} color Color object with RGBA properties at picked location\n     */\n\n    /**\n     * Return drawable pixel data and color at a given position\n     * @param {int} x The client x coordinate of the picking location.\n     * @param {int} y The client y coordinate of the picking location.\n     * @param {int} radius The client radius to extract pixels with.\n     * @return {?ColorExtraction} Data about the picked color\n     */\n    extractColor (x, y, radius) {\n        const scratchX = Math.round(this._nativeSize[0] * ((x / this._gl.canvas.clientWidth) - 0.5));\n        const scratchY = Math.round(-this._nativeSize[1] * ((y / this._gl.canvas.clientHeight) - 0.5));\n\n        const gl = this._gl;\n        twgl.bindFramebufferInfo(gl, this._queryBufferInfo);\n\n        const bounds = new Rectangle();\n        bounds.initFromBounds(scratchX - radius, scratchX + radius, scratchY - radius, scratchY + radius);\n\n        const pickX = scratchX - bounds.left;\n        const pickY = bounds.top - scratchY;\n\n        gl.viewport(0, 0, bounds.width, bounds.height);\n        const projection = twgl.m4.ortho(bounds.left, bounds.right, bounds.top, bounds.bottom, -1, 1);\n\n        gl.clearColor.apply(gl, this._backgroundColor);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        this._drawThese(this._drawList, ShaderManager.DRAW_MODE.default, projection);\n\n        const data = new Uint8Array(Math.floor(bounds.width * bounds.height * 4));\n        gl.readPixels(0, 0, bounds.width, bounds.height, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n        const pixelBase = Math.floor(4 * ((pickY * bounds.width) + pickX));\n        const color = {\n            r: data[pixelBase],\n            g: data[pixelBase + 1],\n            b: data[pixelBase + 2],\n            a: data[pixelBase + 3]\n        };\n\n        if (this._debugCanvas) {\n            this._debugCanvas.width = bounds.width;\n            this._debugCanvas.height = bounds.height;\n            const ctx = this._debugCanvas.getContext('2d');\n            const imageData = ctx.createImageData(bounds.width, bounds.height);\n            imageData.data.set(data);\n            ctx.putImageData(imageData, 0, 0);\n            ctx.strokeStyle = 'black';\n            ctx.fillStyle = `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`;\n            ctx.rect(pickX - 4, pickY - 4, 8, 8);\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        return {\n            data: data,\n            width: bounds.width,\n            height: bounds.height,\n            color: color\n        };\n    }\n\n    /**\n     * Get the candidate bounding box for a touching query.\n     * @param {int} drawableID ID for drawable of query.\n     * @return {?Rectangle} Rectangle bounds for touching query, or null.\n     */\n    _touchingBounds (drawableID) {\n        const drawable = this._allDrawables[drawableID];\n\n        /** @todo remove this once URL-based skin setting is removed. */\n        if (!drawable.skin || !drawable.skin.getTexture([100, 100])) return null;\n\n        const bounds = drawable.getFastBounds();\n\n        // Limit queries to the stage size.\n        bounds.clamp(this._xLeft, this._xRight, this._yBottom, this._yTop);\n\n        // Use integer coordinates for queries - weird things happen\n        // when you provide float width/heights to gl.viewport and projection.\n        bounds.snapToInt();\n\n        if (bounds.width === 0 || bounds.height === 0) {\n            // No space to query.\n            return null;\n        }\n        return bounds;\n    }\n\n    /**\n     * Filter a list of candidates for a touching query into only those that\n     * could possibly intersect the given bounds.\n     * @param {int} drawableID - ID for drawable of query.\n     * @param {Array<int>} candidateIDs - Candidates for touching query.\n     * @param {Rectangle} bounds - Bounds to limit candidates to.\n     * @return {?Array<int>} Filtered candidateIDs, or null if none.\n     */\n    _filterCandidatesTouching (drawableID, candidateIDs, bounds) {\n        // Filter candidates by rough bounding box intersection.\n        // Do this before _drawThese, so we can prevent any GL operations\n        // and readback by returning early.\n        candidateIDs = candidateIDs.filter(testID => {\n            if (testID === drawableID) return false;\n            // Only draw items which could possibly overlap target Drawable.\n            const candidate = this._allDrawables[testID];\n            const candidateBounds = candidate.getFastBounds();\n            return bounds.intersects(candidateBounds);\n        });\n        if (candidateIDs.length === 0) {\n            // No possible intersections based on bounding boxes.\n            return null;\n        }\n        return candidateIDs;\n    }\n\n    /**\n     * Update the position, direction, scale, or effect properties of this Drawable.\n     * @param {int} drawableID The ID of the Drawable to update.\n     * @param {object.<string,*>} properties The new property values to set.\n     */\n    updateDrawableProperties (drawableID, properties) {\n        const drawable = this._allDrawables[drawableID];\n        if (!drawable) {\n            /**\n             * @todo fix whatever's wrong in the VM which causes this, then add a warning or throw here.\n             * Right now this happens so much on some projects that a warning or exception here can hang the browser.\n             */\n            return;\n        }\n        if ('skinId' in properties) {\n            drawable.skin = this._allSkins[properties.skinId];\n        }\n        if ('rotationCenter' in properties) {\n            const newRotationCenter = properties.rotationCenter;\n            drawable.skin.setRotationCenter(newRotationCenter[0], newRotationCenter[1]);\n        }\n        drawable.updateProperties(properties);\n    }\n\n    /**\n     * Update the position object's x & y members to keep the drawable fenced in view.\n     * @param {int} drawableID - The ID of the Drawable to update.\n     * @param {Array.<number, number>} position to be fenced - An array of type [x, y]\n     * @return {Array.<number, number>} The fenced position as an array [x, y]\n     */\n    getFencedPositionOfDrawable (drawableID, position) {\n        let x = position[0];\n        let y = position[1];\n\n        const drawable = this._allDrawables[drawableID];\n        if (!drawable) {\n            // TODO: fix whatever's wrong in the VM which causes this, then add a warning or throw here.\n            // Right now this happens so much on some projects that a warning or exception here can hang the browser.\n            return [x, y];\n        }\n\n        const dx = x - drawable._position[0];\n        const dy = y - drawable._position[1];\n\n        const aabb = drawable.getFastBounds();\n\n        const sx = this._xRight - Math.min(FENCE_WIDTH, Math.floor((aabb.right - aabb.left) / 2));\n        if (aabb.right + dx < -sx) {\n            x = drawable._position[0] - (sx + aabb.right);\n        } else if (aabb.left + dx > sx) {\n            x = drawable._position[0] + (sx - aabb.left);\n        }\n        const sy = this._yTop - Math.min(FENCE_WIDTH, Math.floor((aabb.top - aabb.bottom) / 2));\n        if (aabb.top + dy < -sy) {\n            y = drawable._position[1] - (sy + aabb.top);\n        } else if (aabb.bottom + dy > sy) {\n            y = drawable._position[1] + (sy - aabb.bottom);\n        }\n        return [x, y];\n    }\n\n    /**\n     * Clear a pen layer.\n     * @param {int} penSkinID - the unique ID of a Pen Skin.\n     */\n    penClear (penSkinID) {\n        const skin = /** @type {PenSkin} */ this._allSkins[penSkinID];\n        skin.clear();\n    }\n\n    /**\n     * Draw a point on a pen layer.\n     * @param {int} penSkinID - the unique ID of a Pen Skin.\n     * @param {PenAttributes} penAttributes - how the point should be drawn.\n     * @param {number} x - the X coordinate of the point to draw.\n     * @param {number} y - the Y coordinate of the point to draw.\n     */\n    penPoint (penSkinID, penAttributes, x, y) {\n        const skin = /** @type {PenSkin} */ this._allSkins[penSkinID];\n        skin.drawPoint(penAttributes, x, y);\n    }\n\n    /**\n     * Draw a line on a pen layer.\n     * @param {int} penSkinID - the unique ID of a Pen Skin.\n     * @param {PenAttributes} penAttributes - how the line should be drawn.\n     * @param {number} x0 - the X coordinate of the beginning of the line.\n     * @param {number} y0 - the Y coordinate of the beginning of the line.\n     * @param {number} x1 - the X coordinate of the end of the line.\n     * @param {number} y1 - the Y coordinate of the end of the line.\n     */\n    penLine (penSkinID, penAttributes, x0, y0, x1, y1) {\n        const skin = /** @type {PenSkin} */ this._allSkins[penSkinID];\n        skin.drawLine(penAttributes, x0, y0, x1, y1);\n    }\n\n    /**\n     * Stamp a Drawable onto a pen layer.\n     * @param {int} penSkinID - the unique ID of a Pen Skin.\n     * @param {int} stampID - the unique ID of the Drawable to use as the stamp.\n     */\n    penStamp (penSkinID, stampID) {\n        const stampDrawable = this._allDrawables[stampID];\n        if (!stampDrawable) {\n            return;\n        }\n\n        const bounds = this._touchingBounds(stampID);\n        if (!bounds) {\n            return;\n        }\n\n        const skin = /** @type {PenSkin} */ this._allSkins[penSkinID];\n\n        const gl = this._gl;\n        twgl.bindFramebufferInfo(gl, this._queryBufferInfo);\n\n        // Limit size of viewport to the bounds around the stamp Drawable and create the projection matrix for the draw.\n        gl.viewport(0, 0, bounds.width, bounds.height);\n        const projection = twgl.m4.ortho(bounds.left, bounds.right, bounds.top, bounds.bottom, -1, 1);\n\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        try {\n            gl.disable(gl.BLEND);\n            this._drawThese([stampID], ShaderManager.DRAW_MODE.default, projection, {ignoreVisibility: true});\n        } finally {\n            gl.enable(gl.BLEND);\n        }\n\n        const stampPixels = new Uint8Array(Math.floor(bounds.width * bounds.height * 4));\n        gl.readPixels(0, 0, bounds.width, bounds.height, gl.RGBA, gl.UNSIGNED_BYTE, stampPixels);\n\n        const stampCanvas = this._tempCanvas;\n        stampCanvas.width = bounds.width;\n        stampCanvas.height = bounds.height;\n\n        const stampContext = stampCanvas.getContext('2d');\n        const stampImageData = stampContext.createImageData(bounds.width, bounds.height);\n        stampImageData.data.set(stampPixels);\n        stampContext.putImageData(stampImageData, 0, 0);\n\n        skin.drawStamp(stampCanvas, bounds.left, bounds.top);\n    }\n\n    /* ******\n     * Truly internal functions: these support the functions above.\n     ********/\n\n    /**\n     * Build geometry (vertex and index) buffers.\n     * @private\n     */\n    _createGeometry () {\n        const quad = {\n            a_position: {\n                numComponents: 2,\n                data: [\n                    -0.5, -0.5,\n                    0.5, -0.5,\n                    -0.5, 0.5,\n                    -0.5, 0.5,\n                    0.5, -0.5,\n                    0.5, 0.5\n                ]\n            },\n            a_texCoord: {\n                numComponents: 2,\n                data: [\n                    1, 0,\n                    0, 0,\n                    1, 1,\n                    1, 1,\n                    0, 0,\n                    0, 1\n                ]\n            }\n        };\n        this._bufferInfo = twgl.createBufferInfoFromArrays(this._gl, quad);\n    }\n\n    /**\n     * Respond to a change in the \"native\" rendering size. The native size is used by buffers which are fixed in size\n     * regardless of the size of the main render target. This includes the buffers used for queries such as picking and\n     * color-touching. The fixed size allows (more) consistent behavior across devices and presentation modes.\n     * @param {object} event - The change event.\n     * @private\n     */\n    onNativeSizeChanged (event) {\n        const [width, height] = event.newSize;\n\n        const gl = this._gl;\n        const attachments = [\n            {format: gl.RGBA},\n            {format: gl.DEPTH_STENCIL}\n        ];\n\n        if (!this._pickBufferInfo) {\n            this._pickBufferInfo = twgl.createFramebufferInfo(gl, attachments, MAX_TOUCH_SIZE[0], MAX_TOUCH_SIZE[1]);\n        }\n\n        /** @todo should we create this on demand to save memory? */\n        // A 480x360 32-bpp buffer is 675 KiB.\n        if (this._queryBufferInfo) {\n            twgl.resizeFramebufferInfo(gl, this._queryBufferInfo, attachments, width, height);\n        } else {\n            this._queryBufferInfo = twgl.createFramebufferInfo(gl, attachments, width, height);\n        }\n    }\n\n    /**\n     * Draw a set of Drawables, by drawable ID\n     * @param {Array<int>} drawables The Drawable IDs to draw, possibly this._drawList.\n     * @param {ShaderManager.DRAW_MODE} drawMode Draw normally, silhouette, etc.\n     * @param {module:twgl/m4.Mat4} projection The projection matrix to use.\n     * @param {object} [opts] Options for drawing\n     * @param {idFilterFunc} opts.filter An optional filter function.\n     * @param {object.<string,*>} opts.extraUniforms Extra uniforms for the shaders.\n     * @param {int} opts.effectMask Bitmask for effects to allow\n     * @param {boolean} opts.ignoreVisibility Draw all, despite visibility (e.g. stamping, touching color)\n     * @private\n     */\n    _drawThese (drawables, drawMode, projection, opts = {}) {\n        const near = function (a, b, relativeTolerance = 0.01) {\n            const absA = Math.abs(a);\n            const absB = Math.abs(b);\n            const error = Math.abs(a - b) / Math.max(absA, absB);\n            return error < relativeTolerance;\n        };\n\n        const gl = this._gl;\n        let currentShader = null;\n\n        const numDrawables = drawables.length;\n        for (let drawableIndex = 0; drawableIndex < numDrawables; ++drawableIndex) {\n            const drawableID = drawables[drawableIndex];\n\n            // If we have a filter, check whether the ID fails\n            if (opts.filter && !opts.filter(drawableID)) continue;\n\n            const drawable = this._allDrawables[drawableID];\n            /** @todo check if drawable is inside the viewport before anything else */\n\n            // Hidden drawables (e.g., by a \"hide\" block) are not drawn unless\n            // the ignoreVisibility flag is used (e.g. for stamping or touchingColor).\n            if (!drawable.getVisible() && !opts.ignoreVisibility) continue;\n\n            const drawableScale = drawable.scale;\n\n            // If the skin or texture isn't ready yet, skip it.\n            if (!drawable.skin || !drawable.skin.getTexture(drawableScale)) continue;\n\n            const uniforms = {};\n\n            let effectBits = drawable.getEnabledEffects();\n            effectBits &= opts.hasOwnProperty('effectMask') ? opts.effectMask : effectBits;\n            const newShader = this._shaderManager.getShader(drawMode, effectBits);\n            if (currentShader !== newShader) {\n                currentShader = newShader;\n                gl.useProgram(currentShader.program);\n                twgl.setBuffersAndAttributes(gl, currentShader, this._bufferInfo);\n                Object.assign(uniforms, {\n                    u_projectionMatrix: projection,\n                    u_fudge: window.fudge || 0\n                });\n            }\n\n            Object.assign(uniforms,\n                drawable.skin.getUniforms(drawableScale),\n                drawable.getUniforms());\n\n            // Apply extra uniforms after the Drawable's, to allow overwriting.\n            if (opts.extraUniforms) {\n                Object.assign(uniforms, opts.extraUniforms);\n            }\n\n            if (uniforms.u_skin) {\n                const useNearest =\n                    (drawable._direction % 90 === 0) && (near(drawableScale, 100) || drawable.skin.isRaster);\n                twgl.setTextureParameters(gl, uniforms.u_skin, {minMag: useNearest ? gl.NEAREST : gl.LINEAR});\n            }\n\n            twgl.setUniforms(currentShader, uniforms);\n\n            twgl.drawBufferInfo(gl, this._bufferInfo, gl.TRIANGLES);\n        }\n    }\n\n    /**\n     * Get the convex hull points for a particular Drawable.\n     * To do this, draw the Drawable unrotated, unscaled, and untranslated.\n     * Read back the pixels and find all boundary points.\n     * Finally, apply a convex hull algorithm to simplify the set.\n     * @param {int} drawableID The Drawable IDs calculate convex hull for.\n     * @return {Array<Array<number>>} points Convex hull points, as [[x, y], ...]\n     */\n    _getConvexHullPointsForDrawable (drawableID) {\n        const drawable = this._allDrawables[drawableID];\n        const [width, height] = drawable.skin.size;\n        // No points in the hull if invisible or size is 0.\n        if (!drawable.getVisible() || width === 0 || height === 0) {\n            return [];\n        }\n\n        /**\n         * Return the determinant of two vectors, the vector from A to B and\n         * the vector from A to C.\n         *\n         * The determinant is useful in this case to know if AC is counter\n         * clockwise from AB. A positive value means the AC is counter\n         * clockwise from AC. A negative value menas AC is clockwise from AB.\n         *\n         * @param {Float32Array} A A 2d vector in space.\n         * @param {Float32Array} B A 2d vector in space.\n         * @param {Float32Array} C A 2d vector in space.\n         * @return {number} Greater than 0 if counter clockwise, less than if\n         * clockwise, 0 if all points are on a line.\n         */\n        const CCW = function (A, B, C) {\n            // AB = B - A\n            // AC = C - A\n            // det (AB BC) = AB0 * AC1 - AB1 * AC0\n            return (((B[0] - A[0]) * (C[1] - A[1])) - ((B[1] - A[1]) * (C[0] - A[0])));\n        };\n\n        // https://github.com/LLK/scratch-flash/blob/dcbeeb59d44c3be911545dfe54d\n        // 46a32404f8e69/src/scratch/ScratchCostume.as#L369-L413 Following\n        // RasterHull creation, compare and store left and right values that\n        // maintain a convex shape until that data can be passed to `hull` for\n        // further work.\n        const L = [];\n        const R = [];\n        const _pixelPos = twgl.v3.create();\n        const _effectPos = twgl.v3.create();\n        let ll = -1;\n        let rr = -1;\n        let Q;\n        for (let y = 0; y < height; y++) {\n            _pixelPos[1] = y / height;\n            // Scan from left to right, looking for a touchable spot in the\n            // skin.\n            let x = 0;\n            for (; x < width; x++) {\n                _pixelPos[0] = x / width;\n                EffectTransform.transformPoint(drawable, _pixelPos, _effectPos);\n                if (drawable.skin.isTouching(_effectPos)) {\n                    Q = [x, y];\n                    break;\n                }\n            }\n            // If x is equal to the width there are no touchable points in the\n            // skin. Nothing we can add to L. And looping for R would find the\n            // same thing.\n            if (x >= width) {\n                continue;\n            }\n            // Decrement ll until Q is clockwise (CCW returns negative) from the\n            // last two points in L.\n            while (ll > 0) {\n                if (CCW(L[ll - 1], L[ll], Q) < 0) {\n                    break;\n                } else {\n                    --ll;\n                }\n            }\n            // Increment ll and then set L[ll] to Q. If ll was -1 before this\n            // line, this will set L[0] to Q. If ll was 0 before this line, this\n            // will set L[1] to Q.\n            L[++ll] = Q;\n\n            // Scan from right to left, looking for a touchable spot in the\n            // skin.\n            for (x = width - 1; x >= 0; x--) {\n                _pixelPos[0] = x / width;\n                EffectTransform.transformPoint(drawable, _pixelPos, _effectPos);\n                if (drawable.skin.isTouching(_effectPos)) {\n                    Q = [x, y];\n                    break;\n                }\n            }\n            // Decrement rr until Q is counter clockwise (CCW returns positive)\n            // from the last two points in L. L takes clockwise points and R\n            // takes counter clockwise points. if y was decremented instead of\n            // incremented R would take clockwise points. We are going in the\n            // right direction for L and the wrong direction for R, so we\n            // compare the opposite value for R from L.\n            while (rr > 0) {\n                if (CCW(R[rr - 1], R[rr], Q) > 0) {\n                    break;\n                } else {\n                    --rr;\n                }\n            }\n            // Increment rr and then set R[rr] to Q.\n            R[++rr] = Q;\n        }\n\n        // Known boundary points on left/right edges of pixels.\n        const boundaryPoints = L;\n        // Truncate boundaryPoints to the index of the last added Q to L. L may\n        // have more entries than the index for the last Q.\n        boundaryPoints.length = ll + 1;\n        // Add points in R to boundaryPoints in reverse so all points in\n        // boundaryPoints are clockwise from each other.\n        for (let j = rr; j >= 0; --j) {\n            boundaryPoints.push(R[j]);\n        }\n        // Simplify boundary points using convex hull.\n        return hull(boundaryPoints, Infinity);\n    }\n}\n\n// :3\nRenderWebGL.prototype.canHazPixels = RenderWebGL.prototype.extractDrawable;\n\nmodule.exports = RenderWebGL;\n\n\n\n// WEBPACK FOOTER //\n// src/RenderWebGL.js","/*\n (c) 2014-2016, Andrii Heonia\n Hull.js, a JavaScript library for concave hull generation by set of points.\n https://github.com/AndriiHeonia/hull\n*/\n\n'use strict';\n\nvar intersect = require('./intersect.js');\nvar grid = require('./grid.js');\nvar formatUtil = require('./format.js');\nvar convexHull = require('./convex.js');\n\nfunction _filterDuplicates(pointset) {\n    return pointset.filter(function(el, idx, arr) {\n        var prevEl = arr[idx - 1];\n        return idx === 0 || !(prevEl[0] === el[0] && prevEl[1] === el[1]);\n    });\n}\n\nfunction _sortByX(pointset) {\n    return pointset.sort(function(a, b) {\n        if (a[0] == b[0]) {\n            return a[1] - b[1];\n        } else {\n            return a[0] - b[0];\n        }\n    });\n}\n\nfunction _sqLength(a, b) {\n    return Math.pow(b[0] - a[0], 2) + Math.pow(b[1] - a[1], 2);\n}\n\nfunction _cos(o, a, b) {\n    var aShifted = [a[0] - o[0], a[1] - o[1]],\n        bShifted = [b[0] - o[0], b[1] - o[1]],\n        sqALen = _sqLength(o, a),\n        sqBLen = _sqLength(o, b),\n        dot = aShifted[0] * bShifted[0] + aShifted[1] * bShifted[1];\n\n    return dot / Math.sqrt(sqALen * sqBLen);\n}\n\nfunction _intersect(segment, pointset) {\n    for (var i = 0; i < pointset.length - 1; i++) {\n        var seg = [pointset[i], pointset[i + 1]];\n        if (segment[0][0] === seg[0][0] && segment[0][1] === seg[0][1] ||\n            segment[0][0] === seg[1][0] && segment[0][1] === seg[1][1]) {\n            continue;\n        }\n        if (intersect(segment, seg)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction _occupiedArea(pointset) {\n    var minX = Infinity,\n        minY = Infinity,\n        maxX = -Infinity,\n        maxY = -Infinity;\n\n    for (var i = pointset.length - 1; i >= 0; i--) {\n        if (pointset[i][0] < minX) {\n            minX = pointset[i][0];\n        }\n        if (pointset[i][1] < minY) {\n            minY = pointset[i][1];\n        }\n        if (pointset[i][0] > maxX) {\n            maxX = pointset[i][0];\n        }\n        if (pointset[i][1] > maxY) {\n            maxY = pointset[i][1];\n        }\n    }\n\n    return [\n        maxX - minX, // width\n        maxY - minY  // height\n    ];\n}\n\nfunction _bBoxAround(edge) {\n    return [\n        Math.min(edge[0][0], edge[1][0]), // left\n        Math.min(edge[0][1], edge[1][1]), // top\n        Math.max(edge[0][0], edge[1][0]), // right\n        Math.max(edge[0][1], edge[1][1])  // bottom\n    ];\n}\n\nfunction _midPoint(edge, innerPoints, convex) {\n    var point = null,\n        angle1Cos = MAX_CONCAVE_ANGLE_COS,\n        angle2Cos = MAX_CONCAVE_ANGLE_COS,\n        a1Cos, a2Cos;\n\n    for (var i = 0; i < innerPoints.length; i++) {\n        a1Cos = _cos(edge[0], edge[1], innerPoints[i]);\n        a2Cos = _cos(edge[1], edge[0], innerPoints[i]);\n\n        if (a1Cos > angle1Cos && a2Cos > angle2Cos &&\n            !_intersect([edge[0], innerPoints[i]], convex) &&\n            !_intersect([edge[1], innerPoints[i]], convex)) {\n\n            angle1Cos = a1Cos;\n            angle2Cos = a2Cos;\n            point = innerPoints[i];\n        }\n    }\n\n    return point;\n}\n\nfunction _concave(convex, maxSqEdgeLen, maxSearchArea, grid, edgeSkipList) {\n    var edge,\n        keyInSkipList,\n        scaleFactor,\n        midPoint,\n        bBoxAround,\n        bBoxWidth,\n        bBoxHeight,\n        midPointInserted = false;\n\n    for (var i = 0; i < convex.length - 1; i++) {\n        edge = [convex[i], convex[i + 1]];\n        keyInSkipList = edge[0].join() + ',' + edge[1].join();\n\n        if (_sqLength(edge[0], edge[1]) < maxSqEdgeLen ||\n            edgeSkipList[keyInSkipList] === true) { continue; }\n\n        scaleFactor = 0;\n        bBoxAround = _bBoxAround(edge);\n        do {\n            bBoxAround = grid.extendBbox(bBoxAround, scaleFactor);\n            bBoxWidth = bBoxAround[2] - bBoxAround[0];\n            bBoxHeight = bBoxAround[3] - bBoxAround[1];\n\n            midPoint = _midPoint(edge, grid.rangePoints(bBoxAround), convex);            \n            scaleFactor++;\n        }  while (midPoint === null && (maxSearchArea[0] > bBoxWidth || maxSearchArea[1] > bBoxHeight));\n\n        if (bBoxWidth >= maxSearchArea[0] && bBoxHeight >= maxSearchArea[1]) {\n            edgeSkipList[keyInSkipList] = true;\n        }\n\n        if (midPoint !== null) {\n            convex.splice(i + 1, 0, midPoint);\n            grid.removePoint(midPoint);\n            midPointInserted = true;\n        }\n    }\n\n    if (midPointInserted) {\n        return _concave(convex, maxSqEdgeLen, maxSearchArea, grid, edgeSkipList);\n    }\n\n    return convex;\n}\n\nfunction hull(pointset, concavity, format) {\n    var convex,\n        concave,\n        innerPoints,\n        occupiedArea,\n        maxSearchArea,\n        cellSize,\n        points,\n        maxEdgeLen = concavity || 20;\n\n    if (pointset.length < 4) {\n        return pointset.slice();\n    }\n\n    points = _filterDuplicates(_sortByX(formatUtil.toXy(pointset, format)));\n\n    occupiedArea = _occupiedArea(points);\n    maxSearchArea = [\n        occupiedArea[0] * MAX_SEARCH_BBOX_SIZE_PERCENT,\n        occupiedArea[1] * MAX_SEARCH_BBOX_SIZE_PERCENT\n    ];\n\n    convex = convexHull(points);\n    innerPoints = points.filter(function(pt) {\n        return convex.indexOf(pt) < 0;\n    });\n\n    cellSize = Math.ceil(1 / (points.length / (occupiedArea[0] * occupiedArea[1])));\n\n    concave = _concave(\n        convex, Math.pow(maxEdgeLen, 2),\n        maxSearchArea, grid(innerPoints, cellSize), {});\n \n    return formatUtil.fromXy(concave, format);\n}\n\nvar MAX_CONCAVE_ANGLE_COS = Math.cos(90 / (180 / Math.PI)); // angle = 90 deg\nvar MAX_SEARCH_BBOX_SIZE_PERCENT = 0.6;\n\nmodule.exports = hull;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hull.js/src/hull.js\n// module id = 12\n// module chunks = 0 1","function ccw(x1, y1, x2, y2, x3, y3) {           \n    var cw = ((y3 - y1) * (x2 - x1)) - ((y2 - y1) * (x3 - x1));\n    return cw > 0 ? true : cw < 0 ? false : true; // colinear\n}\n\nfunction intersect(seg1, seg2) {\n  var x1 = seg1[0][0], y1 = seg1[0][1],\n      x2 = seg1[1][0], y2 = seg1[1][1],\n      x3 = seg2[0][0], y3 = seg2[0][1],\n      x4 = seg2[1][0], y4 = seg2[1][1];\n\n    return ccw(x1, y1, x3, y3, x4, y4) !== ccw(x2, y2, x3, y3, x4, y4) && ccw(x1, y1, x2, y2, x3, y3) !== ccw(x1, y1, x2, y2, x4, y4);\n}\n\nmodule.exports = intersect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hull.js/src/intersect.js\n// module id = 13\n// module chunks = 0 1","function Grid(points, cellSize) {\n    this._cells = [];\n    this._cellSize = cellSize;\n\n    points.forEach(function(point) {\n        var cellXY = this.point2CellXY(point),\n            x = cellXY[0],\n            y = cellXY[1];\n        if (this._cells[x] === undefined) {\n            this._cells[x] = [];\n        }\n        if (this._cells[x][y] === undefined) {\n            this._cells[x][y] = [];\n        }\n        this._cells[x][y].push(point);\n    }, this);\n}\n\nGrid.prototype = {\n    cellPoints: function(x, y) { // (Number, Number) -> Array\n        return (this._cells[x] !== undefined && this._cells[x][y] !== undefined) ? this._cells[x][y] : [];\n    },\n\n    rangePoints: function(bbox) { // (Array) -> Array\n        var tlCellXY = this.point2CellXY([bbox[0], bbox[1]]),\n            brCellXY = this.point2CellXY([bbox[2], bbox[3]]),\n            points = [];\n\n        for (var x = tlCellXY[0]; x <= brCellXY[0]; x++) {\n            for (var y = tlCellXY[1]; y <= brCellXY[1]; y++) {\n                points = points.concat(this.cellPoints(x, y));\n            }\n        }\n\n        return points;\n    },\n\n    removePoint: function(point) { // (Array) -> Array\n        var cellXY = this.point2CellXY(point),\n            cell = this._cells[cellXY[0]][cellXY[1]],\n            pointIdxInCell;\n        \n        for (var i = 0; i < cell.length; i++) {\n            if (cell[i][0] === point[0] && cell[i][1] === point[1]) {\n                pointIdxInCell = i;\n                break;\n            }\n        }\n\n        cell.splice(pointIdxInCell, 1);\n\n        return cell;\n    },\n\n    point2CellXY: function(point) { // (Array) -> Array\n        var x = parseInt(point[0] / this._cellSize),\n            y = parseInt(point[1] / this._cellSize);\n        return [x, y];\n    },\n\n    extendBbox: function(bbox, scaleFactor) { // (Array, Number) -> Array\n        return [\n            bbox[0] - (scaleFactor * this._cellSize),\n            bbox[1] - (scaleFactor * this._cellSize),\n            bbox[2] + (scaleFactor * this._cellSize),\n            bbox[3] + (scaleFactor * this._cellSize)\n        ];\n    }\n};\n\nfunction grid(points, cellSize) {\n    return new Grid(points, cellSize);\n}\n\nmodule.exports = grid;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hull.js/src/grid.js\n// module id = 14\n// module chunks = 0 1","module.exports = {\n\n    toXy: function(pointset, format) {\n        if (format === undefined) {\n            return pointset.slice();\n        }\n        return pointset.map(function(pt) {\n            /*jslint evil: true */\n            var _getXY = new Function('pt', 'return [pt' + format[0] + ',' + 'pt' + format[1] + '];');\n            return _getXY(pt);\n        });\n    },\n\n    fromXy: function(pointset, format) {\n        if (format === undefined) {\n            return pointset.slice();\n        }\n        return pointset.map(function(pt) {\n            /*jslint evil: true */\n            var _getObj = new Function('pt', 'var o = {}; o' + format[0] + '= pt[0]; o' + format[1] + '= pt[1]; return o;');\n            return _getObj(pt);\n        });\n    }\n\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hull.js/src/format.js\n// module id = 15\n// module chunks = 0 1","function _cross(o, a, b) {\n    return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0]);\n}\n\nfunction _upperTangent(pointset) {\n    var lower = [];\n    for (var l = 0; l < pointset.length; l++) {\n        while (lower.length >= 2 && (_cross(lower[lower.length - 2], lower[lower.length - 1], pointset[l]) <= 0)) {\n            lower.pop();\n        }\n        lower.push(pointset[l]);\n    }\n    lower.pop();\n    return lower;\n}\n\nfunction _lowerTangent(pointset) {\n    var reversed = pointset.reverse(),\n        upper = [];\n    for (var u = 0; u < reversed.length; u++) {\n        while (upper.length >= 2 && (_cross(upper[upper.length - 2], upper[upper.length - 1], reversed[u]) <= 0)) {\n            upper.pop();\n        }\n        upper.push(reversed[u]);\n    }\n    upper.pop();\n    return upper;\n}\n\n// pointset has to be sorted by X\nfunction convex(pointset) {\n    var convex,\n        upper = _upperTangent(pointset),\n        lower = _lowerTangent(pointset);\n    convex = lower.concat(upper);\n    convex.push(pointset[0]);  \n    return convex;  \n}\n\nmodule.exports = convex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hull.js/src/convex.js\n// module id = 16\n// module chunks = 0 1","const twgl = require('twgl.js');\n\nconst Skin = require('./Skin');\nconst Silhouette = require('./Silhouette');\n\nclass BitmapSkin extends Skin {\n    /**\n     * Create a new Bitmap Skin.\n     * @extends Skin\n     * @param {!int} id - The ID for this Skin.\n     * @param {!RenderWebGL} renderer - The renderer which will use this skin.\n     */\n    constructor (id, renderer) {\n        super(id);\n\n        /** @type {!int} */\n        this._costumeResolution = 1;\n\n        /** @type {!RenderWebGL} */\n        this._renderer = renderer;\n\n        /** @type {WebGLTexture} */\n        this._texture = null;\n\n        /** @type {Array<int>} */\n        this._textureSize = [0, 0];\n\n        this._silhouette = new Silhouette();\n    }\n\n    /**\n     * Dispose of this object. Do not use it after calling this method.\n     */\n    dispose () {\n        if (this._texture) {\n            this._renderer.gl.deleteTexture(this._texture);\n            this._texture = null;\n        }\n        super.dispose();\n    }\n\n    /**\n     * @returns {boolean} true for a raster-style skin (like a BitmapSkin), false for vector-style (like SVGSkin).\n     */\n    get isRaster () {\n        return true;\n    }\n\n    /**\n     * @return {Array<number>} the \"native\" size, in texels, of this skin.\n     */\n    get size () {\n        return [this._textureSize[0] / this._costumeResolution, this._textureSize[1] / this._costumeResolution];\n    }\n\n    /**\n     * @param {Array<number>} scale - The scaling factors to be used.\n     * @return {WebGLTexture} The GL texture representation of this skin when drawing at the given scale.\n     */\n    // eslint-disable-next-line no-unused-vars\n    getTexture (scale) {\n        return this._texture;\n    }\n\n    /**\n     * Set the contents of this skin to a snapshot of the provided bitmap data.\n     * @param {ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} bitmapData - new contents for this skin.\n     * @param {int} [costumeResolution=1] - The resolution to use for this bitmap.\n     * @param {Array<number>} [rotationCenter] - Optional rotation center for the bitmap. If not supplied, it will be\n     * calculated from the bounding box\n     * @fires Skin.event:WasAltered\n     */\n    setBitmap (bitmapData, costumeResolution, rotationCenter) {\n        const gl = this._renderer.gl;\n\n        if (this._texture) {\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, bitmapData);\n            this._silhouette.update(bitmapData);\n        } else {\n            // TODO: mipmaps?\n            const textureOptions = {\n                auto: true,\n                wrap: gl.CLAMP_TO_EDGE,\n                src: bitmapData\n            };\n\n            this._texture = twgl.createTexture(gl, textureOptions);\n            this._silhouette.update(bitmapData);\n        }\n\n        // Do these last in case any of the above throws an exception\n        this._costumeResolution = costumeResolution || 1;\n        this._textureSize = BitmapSkin._getBitmapSize(bitmapData);\n\n        if (typeof rotationCenter === 'undefined') rotationCenter = this.calculateRotationCenter();\n        this.setRotationCenter.apply(this, rotationCenter);\n\n        this.emit(Skin.Events.WasAltered);\n    }\n\n    /**\n     * @param {ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} bitmapData - bitmap data to inspect.\n     * @returns {Array<int>} the width and height of the bitmap data, in pixels.\n     * @private\n     */\n    static _getBitmapSize (bitmapData) {\n        if (bitmapData instanceof HTMLImageElement) {\n            return [bitmapData.naturalWidth || bitmapData.width, bitmapData.naturalHeight || bitmapData.height];\n        }\n\n        if (bitmapData instanceof HTMLVideoElement) {\n            return [bitmapData.videoWidth || bitmapData.width, bitmapData.videoHeight || bitmapData.height];\n        }\n\n        // ImageData or HTMLCanvasElement\n        return [bitmapData.width, bitmapData.height];\n    }\n\n    /**\n     * Does this point touch an opaque or translucent point on this skin?\n     * @param {twgl.v3} vec A texture coordinate.\n     * @return {boolean} Did it touch?\n     */\n    isTouching (vec) {\n        return this._silhouette.isTouching(vec);\n    }\n}\n\nmodule.exports = BitmapSkin;\n\n\n\n// WEBPACK FOOTER //\n// src/BitmapSkin.js","const twgl = require('twgl.js');\n\nconst Rectangle = require('./Rectangle');\nconst RenderConstants = require('./RenderConstants');\nconst ShaderManager = require('./ShaderManager');\nconst Skin = require('./Skin');\nconst EffectTransform = require('./EffectTransform');\n\nconst __isTouchingPosition = twgl.v3.create();\n\nclass Drawable {\n    /**\n     * An object which can be drawn by the renderer.\n     * @todo double-buffer all rendering state (position, skin, effects, etc.)\n     * @param {!int} id - This Drawable's unique ID.\n     * @constructor\n     */\n    constructor (id) {\n        /** @type {!int} */\n        this._id = id;\n\n        /**\n         * The uniforms to be used by the vertex and pixel shaders.\n         * Some of these are used by other parts of the renderer as well.\n         * @type {Object.<string,*>}\n         * @private\n         */\n        this._uniforms = {\n            /**\n             * The model matrix, to concat with projection at draw time.\n             * @type {module:twgl/m4.Mat4}\n             */\n            u_modelMatrix: twgl.m4.identity(),\n\n            /**\n             * The color to use in the silhouette draw mode.\n             * @type {Array<number>}\n             */\n            u_silhouetteColor: Drawable.color4fFromID(this._id)\n        };\n\n        // Effect values are uniforms too\n        const numEffects = ShaderManager.EFFECTS.length;\n        for (let index = 0; index < numEffects; ++index) {\n            const effectName = ShaderManager.EFFECTS[index];\n            const converter = ShaderManager.EFFECT_INFO[effectName].converter;\n            this._uniforms[`u_${effectName}`] = converter(0);\n        }\n\n        this._position = twgl.v3.create(0, 0);\n        this._scale = twgl.v3.create(100, 100);\n        this._direction = 90;\n        this._transformDirty = true;\n        this._rotationMatrix = twgl.m4.identity();\n        this._rotationTransformDirty = true;\n        this._rotationAdjusted = twgl.v3.create();\n        this._rotationCenterDirty = true;\n        this._skinScale = twgl.v3.create(0, 0, 0);\n        this._skinScaleDirty = true;\n        this._inverseMatrix = twgl.m4.identity();\n        this._inverseTransformDirty = true;\n        this._visible = true;\n        this._effectBits = 0;\n\n        /** @todo move convex hull functionality, maybe bounds functionality overall, to Skin classes */\n        this._convexHullPoints = null;\n        this._convexHullDirty = true;\n\n        this._skinWasAltered = this._skinWasAltered.bind(this);\n    }\n\n    /**\n     * Dispose of this Drawable. Do not use it after calling this method.\n     */\n    dispose () {\n        // Use the setter: disconnect events\n        this.skin = null;\n    }\n\n    /**\n     * Mark this Drawable's transform as dirty.\n     * It will be recalculated next time it's needed.\n     */\n    setTransformDirty () {\n        this._transformDirty = true;\n        this._inverseTransformDirty = true;\n    }\n\n    /**\n     * @returns {number} The ID for this Drawable.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * @returns {Skin} the current skin for this Drawable.\n     */\n    get skin () {\n        return this._skin;\n    }\n\n    /**\n     * @param {Skin} newSkin - A new Skin for this Drawable.\n     */\n    set skin (newSkin) {\n        if (this._skin !== newSkin) {\n            if (this._skin) {\n                this._skin.removeListener(Skin.Events.WasAltered, this._skinWasAltered);\n            }\n            this._skin = newSkin;\n            if (this._skin) {\n                this._skin.addListener(Skin.Events.WasAltered, this._skinWasAltered);\n            }\n            this._skinWasAltered();\n        }\n    }\n\n    /**\n     * @returns {Array<number>} the current scaling percentages applied to this Drawable. [100,100] is normal size.\n     */\n    get scale () {\n        return [this._scale[0], this._scale[1]];\n    }\n\n    /**\n     * @returns {int} A bitmask identifying which effects are currently in use.\n     */\n    getEnabledEffects () {\n        return this._effectBits;\n    }\n\n    /**\n     * @returns {object.<string, *>} the shader uniforms to be used when rendering this Drawable.\n     */\n    getUniforms () {\n        if (this._transformDirty) {\n            this._calculateTransform();\n        }\n        return this._uniforms;\n    }\n\n    /**\n     * @returns {boolean} whether this Drawable is visible.\n     */\n    getVisible () {\n        return this._visible;\n    }\n\n    /**\n     * Update the position, direction, scale, or effect properties of this Drawable.\n     * @param {object.<string,*>} properties The new property values to set.\n     */\n    updateProperties (properties) {\n        let dirty = false;\n        if ('position' in properties && (\n            this._position[0] !== properties.position[0] ||\n            this._position[1] !== properties.position[1])) {\n            this._position[0] = properties.position[0];\n            this._position[1] = properties.position[1];\n            dirty = true;\n        }\n        if ('direction' in properties && this._direction !== properties.direction) {\n            this._direction = properties.direction;\n            this._rotationTransformDirty = true;\n            dirty = true;\n        }\n        if ('scale' in properties && (\n            this._scale[0] !== properties.scale[0] ||\n            this._scale[1] !== properties.scale[1])) {\n            this._scale[0] = properties.scale[0];\n            this._scale[1] = properties.scale[1];\n            this._rotationCenterDirty = true;\n            this._skinScaleDirty = true;\n            dirty = true;\n        }\n        if ('visible' in properties) {\n            this._visible = properties.visible;\n            this.setConvexHullDirty();\n        }\n        if (dirty) {\n            this.setTransformDirty();\n        }\n        const numEffects = ShaderManager.EFFECTS.length;\n        for (let index = 0; index < numEffects; ++index) {\n            const effectName = ShaderManager.EFFECTS[index];\n            if (effectName in properties) {\n                const rawValue = properties[effectName];\n                const effectInfo = ShaderManager.EFFECT_INFO[effectName];\n                if (rawValue) {\n                    this._effectBits |= effectInfo.mask;\n                } else {\n                    this._effectBits &= ~effectInfo.mask;\n                }\n                const converter = effectInfo.converter;\n                this._uniforms[`u_${effectName}`] = converter(rawValue);\n                if (effectInfo.shapeChanges) {\n                    this.setConvexHullDirty();\n                }\n            }\n        }\n    }\n\n    /**\n     * Calculate the transform to use when rendering this Drawable.\n     * @private\n     */\n    _calculateTransform () {\n        if (this._rotationTransformDirty) {\n            const rotation = (270 - this._direction) * Math.PI / 180;\n\n            // Calling rotationZ sets the destination matrix to a rotation\n            // around the Z axis setting matrix components 0, 1, 4 and 5 with\n            // cosine and sine values of the rotation.\n            // twgl.m4.rotationZ(rotation, this._rotationMatrix);\n\n            // twgl assumes the last value set to the matrix was anything.\n            // Drawable knows, it was another rotationZ matrix, so we can skip\n            // assigning the values that will never change.\n            const c = Math.cos(rotation);\n            const s = Math.sin(rotation);\n            this._rotationMatrix[0] = c;\n            this._rotationMatrix[1] = s;\n            // this._rotationMatrix[2] = 0;\n            // this._rotationMatrix[3] = 0;\n            this._rotationMatrix[4] = -s;\n            this._rotationMatrix[5] = c;\n            // this._rotationMatrix[6] = 0;\n            // this._rotationMatrix[7] = 0;\n            // this._rotationMatrix[8] = 0;\n            // this._rotationMatrix[9] = 0;\n            // this._rotationMatrix[10] = 1;\n            // this._rotationMatrix[11] = 0;\n            // this._rotationMatrix[12] = 0;\n            // this._rotationMatrix[13] = 0;\n            // this._rotationMatrix[14] = 0;\n            // this._rotationMatrix[15] = 1;\n\n            this._rotationTransformDirty = false;\n        }\n\n        // Adjust rotation center relative to the skin.\n        if (this._rotationCenterDirty && this.skin !== null) {\n            // twgl version of the following in function work.\n            // let rotationAdjusted = twgl.v3.subtract(\n            //     this.skin.rotationCenter,\n            //     twgl.v3.divScalar(this.skin.size, 2, this._rotationAdjusted),\n            //     this._rotationAdjusted\n            // );\n            // rotationAdjusted = twgl.v3.multiply(\n            //     rotationAdjusted, this._scale, rotationAdjusted\n            // );\n            // rotationAdjusted = twgl.v3.divScalar(\n            //     rotationAdjusted, 100, rotationAdjusted\n            // );\n            // rotationAdjusted[1] *= -1; // Y flipped to Scratch coordinate.\n            // rotationAdjusted[2] = 0; // Z coordinate is 0.\n\n            // Locally assign rotationCenter and skinSize to keep from having\n            // the Skin getter properties called twice while locally assigning\n            // their components for readability.\n            const rotationCenter = this.skin.rotationCenter;\n            const skinSize = this.skin.size;\n            const center0 = rotationCenter[0];\n            const center1 = rotationCenter[1];\n            const skinSize0 = skinSize[0];\n            const skinSize1 = skinSize[1];\n            const scale0 = this._scale[0];\n            const scale1 = this._scale[1];\n\n            const rotationAdjusted = this._rotationAdjusted;\n            rotationAdjusted[0] = (center0 - (skinSize0 / 2)) * scale0 / 100;\n            rotationAdjusted[1] = ((center1 - (skinSize1 / 2)) * scale1 / 100) * -1;\n            // rotationAdjusted[2] = 0;\n\n            this._rotationCenterDirty = false;\n        }\n\n        if (this._skinScaleDirty && this.skin !== null) {\n            // twgl version of the following in function work.\n            // const scaledSize = twgl.v3.divScalar(\n            //     twgl.v3.multiply(this.skin.size, this._scale),\n            //     100\n            // );\n            // // was NaN because the vectors have only 2 components.\n            // scaledSize[2] = 0;\n\n            // Locally assign skinSize to keep from having the Skin getter\n            // properties called twice.\n            const skinSize = this.skin.size;\n            const scaledSize = this._skinScale;\n            scaledSize[0] = skinSize[0] * this._scale[0] / 100;\n            scaledSize[1] = skinSize[1] * this._scale[1] / 100;\n            // scaledSize[2] = 0;\n\n            this._skinScaleDirty = false;\n        }\n\n        const modelMatrix = this._uniforms.u_modelMatrix;\n\n        // twgl version of the following in function work.\n        // twgl.m4.identity(modelMatrix);\n        // twgl.m4.translate(modelMatrix, this._position, modelMatrix);\n        // twgl.m4.multiply(modelMatrix, this._rotationMatrix, modelMatrix);\n        // twgl.m4.translate(modelMatrix, this._rotationAdjusted, modelMatrix);\n        // twgl.m4.scale(modelMatrix, scaledSize, modelMatrix);\n\n        // Drawable configures a 3D matrix for drawing in WebGL, but most values\n        // will never be set because the inputs are on the X and Y position axis\n        // and the Z rotation axis. Drawable can bring the work inside\n        // _calculateTransform and greatly reduce the ammount of math and array\n        // assignments needed.\n\n        const scale0 = this._skinScale[0];\n        const scale1 = this._skinScale[1];\n        const rotation00 = this._rotationMatrix[0];\n        const rotation01 = this._rotationMatrix[1];\n        const rotation10 = this._rotationMatrix[4];\n        const rotation11 = this._rotationMatrix[5];\n        const adjusted0 = this._rotationAdjusted[0];\n        const adjusted1 = this._rotationAdjusted[1];\n        const position0 = this._position[0];\n        const position1 = this._position[1];\n\n        // Commented assignments show what the values are when the matrix was\n        // instantiated. Those values will never change so they do not need to\n        // be reassigned.\n        modelMatrix[0] = scale0 * rotation00;\n        modelMatrix[1] = scale0 * rotation01;\n        // modelMatrix[2] = 0;\n        // modelMatrix[3] = 0;\n        modelMatrix[4] = scale1 * rotation10;\n        modelMatrix[5] = scale1 * rotation11;\n        // modelMatrix[6] = 0;\n        // modelMatrix[7] = 0;\n        // modelMatrix[8] = 0;\n        // modelMatrix[9] = 0;\n        // modelMatrix[10] = 1;\n        // modelMatrix[11] = 0;\n        modelMatrix[12] = (rotation00 * adjusted0) + (rotation10 * adjusted1) + position0;\n        modelMatrix[13] = (rotation01 * adjusted0) + (rotation11 * adjusted1) + position1;\n        // modelMatrix[14] = 0;\n        // modelMatrix[15] = 1;\n\n        this._transformDirty = false;\n    }\n\n    /**\n     * Whether the Drawable needs convex hull points provided by the renderer.\n     * @return {boolean} True when no convex hull known, or it's dirty.\n     */\n    needsConvexHullPoints () {\n        return !this._convexHullPoints || this._convexHullDirty || this._convexHullPoints.length === 0;\n    }\n\n    /**\n     * Set the convex hull to be dirty.\n     * Do this whenever the Drawable's shape has possibly changed.\n     */\n    setConvexHullDirty () {\n        this._convexHullDirty = true;\n    }\n\n    /**\n     * Set the convex hull points for the Drawable.\n     * @param {Array<Array<number>>} points Convex hull points, as [[x, y], ...]\n     */\n    setConvexHullPoints (points) {\n        this._convexHullPoints = points;\n        this._convexHullDirty = false;\n    }\n\n    /**\n     * Check if the world position touches the skin.\n     * @param {twgl.v3} vec World coordinate vector.\n     * @return {boolean} True if the world position touches the skin.\n     */\n    isTouching (vec) {\n        if (!this.skin) {\n            return false;\n        }\n\n        if (this._transformDirty) {\n            this._calculateTransform();\n        }\n\n        // Get the inverse of the model matrix or update it.\n        const inverse = this._inverseMatrix;\n        if (this._inverseTransformDirty) {\n            const model = twgl.m4.copy(this._uniforms.u_modelMatrix, inverse);\n            // The normal matrix uses a z scaling of 0 causing model[10] to be\n            // 0. Getting a 4x4 inverse is impossible without a scaling in x, y,\n            // and z.\n            model[10] = 1;\n            twgl.m4.inverse(model, model);\n            this._inverseTransformDirty = false;\n        }\n\n        // Transfrom from world coordinates to Drawable coordinates.\n        const localPosition = twgl.m4.transformPoint(inverse, vec, __isTouchingPosition);\n\n        // Transform into texture coordinates. 0, 0 is the bottom left. 1, 1 is\n        // the top right.\n        localPosition[0] += 0.5;\n        localPosition[1] += 0.5;\n        // The RenderWebGL quad flips the texture's X axis. So rendered bottom\n        // left is 1, 0 and the top right is 0, 1. Flip the X axis so\n        // localPosition matches that transformation.\n        localPosition[0] = 1 - localPosition[0];\n\n        // Apply texture effect transform.\n        EffectTransform.transformPoint(this, localPosition, localPosition);\n\n        return this.skin.isTouching(localPosition);\n    }\n\n    /**\n     * Get the precise bounds for a Drawable.\n     * This function applies the transform matrix to the known convex hull,\n     * and then finds the minimum box along the axes.\n     * Before calling this, ensure the renderer has updated convex hull points.\n     * @return {!Rectangle} Bounds for a tight box around the Drawable.\n     */\n    getBounds () {\n        if (this.needsConvexHullPoints()) {\n            throw new Error('Needs updated convex hull points before bounds calculation.');\n        }\n        if (this._transformDirty) {\n            this._calculateTransform();\n        }\n        // First, transform all the convex hull points by the current Drawable's\n        // transform. This allows us to skip recalculating the convex hull\n        // for many Drawable updates, including translation, rotation, scaling.\n        const projection = twgl.m4.ortho(-1, 1, -1, 1, -1, 1);\n        const skinSize = this.skin.size;\n        const tm = twgl.m4.multiply(this._uniforms.u_modelMatrix, projection);\n        const transformedHullPoints = [];\n        for (let i = 0; i < this._convexHullPoints.length; i++) {\n            const point = this._convexHullPoints[i];\n            const glPoint = twgl.v3.create(\n                0.5 + (-point[0] / skinSize[0]),\n                0.5 + (-point[1] / skinSize[1]),\n                0\n            );\n            twgl.m4.transformPoint(tm, glPoint, glPoint);\n            transformedHullPoints.push(glPoint);\n        }\n        // Search through transformed points to generate box on axes.\n        const bounds = new Rectangle();\n        bounds.initFromPointsAABB(transformedHullPoints);\n        return bounds;\n    }\n\n    /**\n     * Get the rough axis-aligned bounding box for the Drawable.\n     * Calculated by transforming the skin's bounds.\n     * Note that this is less precise than the box returned by `getBounds`,\n     * which is tightly snapped to account for a Drawable's transparent regions.\n     * `getAABB` returns a much less accurate bounding box, but will be much\n     * faster to calculate so may be desired for quick checks/optimizations.\n     * @return {!Rectangle} Rough axis-aligned bounding box for Drawable.\n     */\n    getAABB () {\n        if (this._transformDirty) {\n            this._calculateTransform();\n        }\n        const tm = this._uniforms.u_modelMatrix;\n        const bounds = new Rectangle();\n        bounds.initFromPointsAABB([\n            twgl.m4.transformPoint(tm, [-0.5, -0.5, 0]),\n            twgl.m4.transformPoint(tm, [0.5, -0.5, 0]),\n            twgl.m4.transformPoint(tm, [-0.5, 0.5, 0]),\n            twgl.m4.transformPoint(tm, [0.5, 0.5, 0])\n        ]);\n        return bounds;\n    }\n\n    /**\n     * Return the best Drawable bounds possible without performing graphics queries.\n     * I.e., returns the tight bounding box when the convex hull points are already\n     * known, but otherwise return the rough AABB of the Drawable.\n     * @return {!Rectangle} Bounds for the Drawable.\n     */\n    getFastBounds () {\n        if (!this.needsConvexHullPoints()) {\n            return this.getBounds();\n        }\n        return this.getAABB();\n    }\n\n    /**\n     * Respond to an internal change in the current Skin.\n     * @private\n     */\n    _skinWasAltered () {\n        this._rotationCenterDirty = true;\n        this._skinScaleDirty = true;\n        this.setConvexHullDirty();\n        this.setTransformDirty();\n    }\n\n    /**\n     * Calculate a color to represent the given ID number. At least one component of\n     * the resulting color will be non-zero if the ID is not RenderConstants.ID_NONE.\n     * @param {int} id The ID to convert.\n     * @returns {Array<number>} An array of [r,g,b,a], each component in the range [0,1].\n     */\n    static color4fFromID (id) {\n        id -= RenderConstants.ID_NONE;\n        const r = ((id >> 0) & 255) / 255.0;\n        const g = ((id >> 8) & 255) / 255.0;\n        const b = ((id >> 16) & 255) / 255.0;\n        return [r, g, b, 1.0];\n    }\n\n    /**\n     * Calculate the ID number represented by the given color. If all components of\n     * the color are zero, the result will be RenderConstants.ID_NONE; otherwise the result\n     * will be a valid ID.\n     * @param {int} r The red value of the color, in the range [0,255].\n     * @param {int} g The green value of the color, in the range [0,255].\n     * @param {int} b The blue value of the color, in the range [0,255].\n     * @returns {int} The ID represented by that color.\n     */\n    static color3bToID (r, g, b) {\n        let id;\n        id = (r & 255) << 0;\n        id |= (g & 255) << 8;\n        id |= (b & 255) << 16;\n        return id + RenderConstants.ID_NONE;\n    }\n}\n\nmodule.exports = Drawable;\n\n\n\n// WEBPACK FOOTER //\n// src/Drawable.js","module.exports = \"uniform mat4 u_projectionMatrix;\\nuniform mat4 u_modelMatrix;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nvarying vec2 v_texCoord;\\n\\nvoid main() {\\n    gl_Position = u_projectionMatrix * u_modelMatrix * vec4(a_position, 0, 1);\\n    v_texCoord = a_texCoord;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/shaders/sprite.vert\n// module id = 19\n// module chunks = 0 1","module.exports = \"precision mediump float;\\n\\nuniform float u_fudge;\\n\\n#ifdef DRAW_MODE_silhouette\\nuniform vec4 u_silhouetteColor;\\n#else // DRAW_MODE_silhouette\\n# ifdef ENABLE_color\\nuniform float u_color;\\n# endif // ENABLE_color\\n# ifdef ENABLE_brightness\\nuniform float u_brightness;\\n# endif // ENABLE_brightness\\n#endif // DRAW_MODE_silhouette\\n\\n#ifdef DRAW_MODE_colorMask\\nuniform vec3 u_colorMask;\\nuniform float u_colorMaskTolerance;\\n#endif // DRAW_MODE_colorMask\\n\\n#ifdef ENABLE_fisheye\\nuniform float u_fisheye;\\n#endif // ENABLE_fisheye\\n#ifdef ENABLE_whirl\\nuniform float u_whirl;\\n#endif // ENABLE_whirl\\n#ifdef ENABLE_pixelate\\nuniform float u_pixelate;\\nuniform vec2 u_skinSize;\\n#endif // ENABLE_pixelate\\n#ifdef ENABLE_mosaic\\nuniform float u_mosaic;\\n#endif // ENABLE_mosaic\\n#ifdef ENABLE_ghost\\nuniform float u_ghost;\\n#endif // ENABLE_ghost\\n\\nuniform sampler2D u_skin;\\n\\nvarying vec2 v_texCoord;\\n\\n#if !defined(DRAW_MODE_silhouette) && (defined(ENABLE_color) || defined(ENABLE_brightness))\\n// Branchless color conversions based on code from:\\n// http://www.chilliant.com/rgb2hsv.html by Ian Taylor\\n// Based in part on work by Sam Hocevar and Emil Persson\\n// See also: https://en.wikipedia.org/wiki/HSL_and_HSV#Formal_derivation\\n\\n// Smaller values can cause problems with \\\"color\\\" and \\\"brightness\\\" effects on some mobile devices\\nconst float epsilon = 1e-4;\\n\\n// Convert an RGB color to Hue, Saturation, and Lightness.\\n// All components of input and output are expected to be in the [0,1] range.\\nvec3 convertRGB2HSL(vec3 rgb)\\n{\\n\\t// Hue calculation has 3 cases, depending on which RGB component is largest, and one of those cases involves a \\\"mod\\\"\\n\\t// operation. In order to avoid that \\\"mod\\\" we split the M==R case in two: one for G<B and one for B>G. The B>G case\\n\\t// will be calculated in the negative and fed through abs() in the hue calculation at the end.\\n\\t// See also: https://en.wikipedia.org/wiki/HSL_and_HSV#Hue_and_chroma\\n\\tconst vec4 hueOffsets = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\n\\n\\t// temp1.xy = sort B & G (largest first)\\n\\t// temp1.z = the hue offset we'll use if it turns out that R is the largest component (M==R)\\n\\t// temp1.w = the hue offset we'll use if it turns out that R is not the largest component (M==G or M==B)\\n\\tvec4 temp1 = rgb.b > rgb.g ? vec4(rgb.bg, hueOffsets.wz) : vec4(rgb.gb, hueOffsets.xy);\\n\\n\\t// temp2.x = the largest component of RGB (\\\"M\\\" / \\\"Max\\\")\\n\\t// temp2.yw = the smaller components of RGB, ordered for the hue calculation (not necessarily sorted by magnitude!)\\n\\t// temp2.z = the hue offset we'll use in the hue calculation\\n\\tvec4 temp2 = rgb.r > temp1.x ? vec4(rgb.r, temp1.yzx) : vec4(temp1.xyw, rgb.r);\\n\\n\\t// m = the smallest component of RGB (\\\"min\\\")\\n\\tfloat m = min(temp2.y, temp2.w);\\n\\n\\t// Chroma = M - m\\n\\tfloat C = temp2.x - m;\\n\\n\\t// Lightness = 1/2 * (M + m)\\n\\tfloat L = 0.5 * (temp2.x + m);\\n\\n\\treturn vec3(\\n\\t\\tabs(temp2.z + (temp2.w - temp2.y) / (6.0 * C + epsilon)), // Hue\\n\\t\\tC / (1.0 - abs(2.0 * L - 1.0) + epsilon), // Saturation\\n\\t\\tL); // Lightness\\n}\\n\\nvec3 convertHue2RGB(float hue)\\n{\\n\\tfloat r = abs(hue * 6.0 - 3.0) - 1.0;\\n\\tfloat g = 2.0 - abs(hue * 6.0 - 2.0);\\n\\tfloat b = 2.0 - abs(hue * 6.0 - 4.0);\\n\\treturn clamp(vec3(r, g, b), 0.0, 1.0);\\n}\\n\\nvec3 convertHSL2RGB(vec3 hsl)\\n{\\n\\tvec3 rgb = convertHue2RGB(hsl.x);\\n\\tfloat c = (1.0 - abs(2.0 * hsl.z - 1.0)) * hsl.y;\\n\\treturn (rgb - 0.5) * c + hsl.z;\\n}\\n#endif // !defined(DRAW_MODE_silhouette) && (defined(ENABLE_color) || defined(ENABLE_brightness))\\n\\nconst vec2 kCenter = vec2(0.5, 0.5);\\n\\nvoid main()\\n{\\n\\tvec2 texcoord0 = v_texCoord;\\n\\n\\t#ifdef ENABLE_mosaic\\n\\ttexcoord0 = fract(u_mosaic * texcoord0);\\n\\t#endif // ENABLE_mosaic\\n\\n\\t#ifdef ENABLE_pixelate\\n\\t{\\n\\t\\t// TODO: clean up \\\"pixel\\\" edges\\n\\t\\tvec2 pixelTexelSize = u_skinSize / u_pixelate;\\n\\t\\ttexcoord0 = (floor(texcoord0 * pixelTexelSize) + kCenter) / pixelTexelSize;\\n\\t}\\n\\t#endif // ENABLE_pixelate\\n\\n\\t#ifdef ENABLE_whirl\\n\\t{\\n\\t\\tconst float kRadius = 0.5;\\n\\t\\tvec2 offset = texcoord0 - kCenter;\\n\\t\\tfloat offsetMagnitude = length(offset);\\n\\t\\tfloat whirlFactor = max(1.0 - (offsetMagnitude / kRadius), 0.0);\\n\\t\\tfloat whirlActual = u_whirl * whirlFactor * whirlFactor;\\n\\t\\tfloat sinWhirl = sin(whirlActual);\\n\\t\\tfloat cosWhirl = cos(whirlActual);\\n\\t\\tmat2 rotationMatrix = mat2(\\n\\t\\t\\tcosWhirl, -sinWhirl,\\n\\t\\t\\tsinWhirl, cosWhirl\\n\\t\\t);\\n\\n\\t\\ttexcoord0 = rotationMatrix * offset + kCenter;\\n\\t}\\n\\t#endif // ENABLE_whirl\\n\\n\\t#ifdef ENABLE_fisheye\\n\\t{\\n\\t\\tvec2 vec = (texcoord0 - kCenter) / kCenter;\\n\\t\\tfloat vecLength = length(vec);\\n\\t\\tfloat r = pow(min(vecLength, 1.0), u_fisheye) * max(1.0, vecLength);\\n\\t\\tvec2 unit = vec / vecLength;\\n\\n\\t\\ttexcoord0 = kCenter + r * unit * kCenter;\\n\\t}\\n\\t#endif // ENABLE_fisheye\\n\\n\\tgl_FragColor = texture2D(u_skin, texcoord0);\\n\\n\\n\\tif (gl_FragColor.a == 0.0)\\n\\t{\\n\\t\\tdiscard;\\n\\t}\\n\\n    #ifdef ENABLE_ghost\\n    gl_FragColor.a *= u_ghost;\\n    #endif // ENABLE_ghost\\n\\n\\t#ifdef DRAW_MODE_silhouette\\n\\t// switch to u_silhouetteColor only AFTER the alpha test\\n\\tgl_FragColor = u_silhouetteColor;\\n\\t#else // DRAW_MODE_silhouette\\n\\n\\t#if defined(ENABLE_color) || defined(ENABLE_brightness)\\n\\t{\\n\\t\\tvec3 hsl = convertRGB2HSL(gl_FragColor.xyz);\\n\\n\\t\\t#ifdef ENABLE_color\\n\\t\\t{\\n\\t\\t\\t// this code forces grayscale values to be slightly saturated\\n\\t\\t\\t// so that some slight change of hue will be visible\\n\\t\\t\\tconst float minLightness = 0.11 / 2.0;\\n\\t\\t\\tconst float minSaturation = 0.09;\\n\\t\\t\\tif (hsl.z < minLightness) hsl = vec3(0.0, 1.0, minLightness);\\n\\t\\t\\telse if (hsl.y < minSaturation) hsl = vec3(0.0, minSaturation, hsl.z);\\n\\n\\t\\t\\thsl.x = mod(hsl.x + u_color, 1.0);\\n\\t\\t\\tif (hsl.x < 0.0) hsl.x += 1.0;\\n\\t\\t}\\n\\t\\t#endif // ENABLE_color\\n\\n\\t\\t#ifdef ENABLE_brightness\\n\\t\\thsl.z = clamp(hsl.z + u_brightness, 0.0, 1.0);\\n\\t\\t#endif // ENABLE_brightness\\n\\n\\t\\tgl_FragColor.rgb = convertHSL2RGB(hsl);\\n\\t}\\n\\t#endif // defined(ENABLE_color) || defined(ENABLE_brightness)\\n\\n\\t#ifdef DRAW_MODE_colorMask\\n\\tvec3 maskDistance = abs(gl_FragColor.rgb - u_colorMask);\\n\\tvec3 colorMaskTolerance = vec3(u_colorMaskTolerance, u_colorMaskTolerance, u_colorMaskTolerance);\\n\\tif (any(greaterThan(maskDistance, colorMaskTolerance)))\\n\\t{\\n\\t\\tdiscard;\\n\\t}\\n\\t#endif // DRAW_MODE_colorMask\\n\\n\\t// WebGL defaults to premultiplied alpha\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n\\n\\t#endif // DRAW_MODE_silhouette\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/shaders/sprite.frag\n// module id = 20\n// module chunks = 0 1","const twgl = require('twgl.js');\n\nconst RenderConstants = require('./RenderConstants');\nconst Skin = require('./Skin');\nconst Silhouette = require('./Silhouette');\n\n/**\n * Attributes to use when drawing with the pen\n * @typedef {object} PenSkin#PenAttributes\n * @property {number} [diameter] - The size (diameter) of the pen.\n * @property {Array<number>} [color4f] - The pen color as an array of [r,g,b,a], each component in the range [0,1].\n */\n\n/**\n * The pen attributes to use when unspecified.\n * @type {PenSkin#PenAttributes}\n * @memberof PenSkin\n * @private\n * @const\n */\nconst DefaultPenAttributes = {\n    color4f: [0, 0, 1, 1],\n    diameter: 1\n};\n\n\nclass PenSkin extends Skin {\n    /**\n     * Create a Skin which implements a Scratch pen layer.\n     * @param {int} id - The unique ID for this Skin.\n     * @param {RenderWebGL} renderer - The renderer which will use this Skin.\n     * @extends Skin\n     * @listens RenderWebGL#event:NativeSizeChanged\n     */\n    constructor (id, renderer) {\n        super(id);\n\n        /**\n         * @private\n         * @type {RenderWebGL}\n         */\n        this._renderer = renderer;\n\n        /** @type {HTMLCanvasElement} */\n        this._canvas = document.createElement('canvas');\n\n        /** @type {boolean} */\n        this._canvasDirty = false;\n\n        /** @type {WebGLTexture} */\n        this._texture = null;\n\n        /** @type {Silhouette} */\n        this._silhouette = new Silhouette();\n\n        /** @type {boolean} */\n        this._silhouetteDirty = false;\n\n        this.onNativeSizeChanged = this.onNativeSizeChanged.bind(this);\n        this._renderer.on(RenderConstants.Events.NativeSizeChanged, this.onNativeSizeChanged);\n\n        this._setCanvasSize(renderer.getNativeSize());\n    }\n\n    /**\n     * Dispose of this object. Do not use it after calling this method.\n     */\n    dispose () {\n        this._renderer.removeListener(RenderConstants.Events.NativeSizeChanged, this.onNativeSizeChanged);\n        this._renderer.gl.deleteTexture(this._texture);\n        this._texture = null;\n        super.dispose();\n    }\n\n    /**\n     * @returns {boolean} true for a raster-style skin (like a BitmapSkin), false for vector-style (like SVGSkin).\n     */\n    get isRaster () {\n        return true;\n    }\n\n    /**\n     * @return {Array<number>} the \"native\" size, in texels, of this skin. [width, height]\n     */\n    get size () {\n        return [this._canvas.width, this._canvas.height];\n    }\n\n    /**\n     * @return {WebGLTexture} The GL texture representation of this skin when drawing at the given size.\n     * @param {int} pixelsWide - The width that the skin will be rendered at, in GPU pixels.\n     * @param {int} pixelsTall - The height that the skin will be rendered at, in GPU pixels.\n     */\n    // eslint-disable-next-line no-unused-vars\n    getTexture (pixelsWide, pixelsTall) {\n        if (this._canvasDirty) {\n            this._canvasDirty = false;\n\n            const gl = this._renderer.gl;\n            gl.bindTexture(gl.TEXTURE_2D, this._texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._canvas);\n        }\n\n        return this._texture;\n    }\n\n    /**\n     * Clear the pen layer.\n     */\n    clear () {\n        const ctx = this._canvas.getContext('2d');\n        ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n        this._canvasDirty = true;\n        this._silhouetteDirty = true;\n    }\n\n    /**\n     * Draw a point on the pen layer.\n     * @param {PenAttributes} penAttributes - how the point should be drawn.\n     * @param {number} x - the X coordinate of the point to draw.\n     * @param {number} y - the Y coordinate of the point to draw.\n     */\n    drawPoint (penAttributes, x, y) {\n        // Canvas renders a zero-length line as two end-caps back-to-back, which is what we want.\n        this.drawLine(penAttributes, x, y, x, y);\n    }\n\n    /**\n     * Draw a line on the pen layer.\n     * @param {PenAttributes} penAttributes - how the line should be drawn.\n     * @param {number} x0 - the X coordinate of the beginning of the line.\n     * @param {number} y0 - the Y coordinate of the beginning of the line.\n     * @param {number} x1 - the X coordinate of the end of the line.\n     * @param {number} y1 - the Y coordinate of the end of the line.\n     */\n    drawLine (penAttributes, x0, y0, x1, y1) {\n        const ctx = this._canvas.getContext('2d');\n        this._setAttributes(ctx, penAttributes);\n        ctx.beginPath();\n        ctx.moveTo(this._rotationCenter[0] + x0, this._rotationCenter[1] - y0);\n        ctx.lineTo(this._rotationCenter[0] + x1, this._rotationCenter[1] - y1);\n        ctx.stroke();\n        this._canvasDirty = true;\n        this._silhouetteDirty = true;\n    }\n\n    /**\n     * Stamp an image onto the pen layer.\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} stampElement - the element to use as the stamp.\n     * @param {number} x - the X coordinate of the stamp to draw.\n     * @param {number} y - the Y coordinate of the stamp to draw.\n     */\n    drawStamp (stampElement, x, y) {\n        const ctx = this._canvas.getContext('2d');\n        ctx.drawImage(stampElement, this._rotationCenter[0] + x, this._rotationCenter[1] - y);\n        this._canvasDirty = true;\n        this._silhouetteDirty = true;\n    }\n\n    /**\n     * React to a change in the renderer's native size.\n     * @param {object} event - The change event.\n     */\n    onNativeSizeChanged (event) {\n        this._setCanvasSize(event.newSize);\n    }\n\n    /**\n     * Set the size of the pen canvas.\n     * @param {Array<int>} canvasSize - the new width and height for the canvas.\n     * @private\n     */\n    _setCanvasSize (canvasSize) {\n        const [width, height] = canvasSize;\n\n        const gl = this._renderer.gl;\n        this._canvas.width = width;\n        this._canvas.height = height;\n        this._rotationCenter[0] = width / 2;\n        this._rotationCenter[1] = height / 2;\n        this._texture = twgl.createTexture(\n            gl,\n            {\n                auto: true,\n                mag: gl.NEAREST,\n                min: gl.NEAREST,\n                wrap: gl.CLAMP_TO_EDGE,\n                src: this._canvas\n            }\n        );\n        this._canvasDirty = true;\n        this._silhouetteDirty = true;\n    }\n\n    /**\n     * Set context state to match provided pen attributes.\n     * @param {CanvasRenderingContext2D} context - the canvas rendering context to be modified.\n     * @param {PenAttributes} penAttributes - the pen attributes to be used.\n     * @private\n     */\n    _setAttributes (context, penAttributes) {\n        penAttributes = penAttributes || DefaultPenAttributes;\n        const color4f = penAttributes.color4f || DefaultPenAttributes.color4f;\n        const diameter = penAttributes.diameter || DefaultPenAttributes.diameter;\n\n        const r = Math.round(color4f[0] * 255);\n        const g = Math.round(color4f[1] * 255);\n        const b = Math.round(color4f[2] * 255);\n        const a = color4f[3]; // Alpha is 0 to 1 (not 0 to 255 like r,g,b)\n\n        context.strokeStyle = `rgba(${r},${g},${b},${a})`;\n        context.lineCap = 'round';\n        context.lineWidth = diameter;\n    }\n\n    /**\n     * Does this point touch an opaque or translucent point on this skin?\n     * @param {twgl.v3} vec A texture coordinate.\n     * @return {boolean} Did it touch?\n     */\n    isTouching (vec) {\n        if (this._silhouetteDirty) {\n            if (this._canvasDirty) {\n                this.getTexture();\n            }\n            this._silhouette.update(this._canvas);\n        }\n        return this._silhouette.isTouching(vec);\n    }\n}\n\nmodule.exports = PenSkin;\n\n\n\n// WEBPACK FOOTER //\n// src/PenSkin.js","const twgl = require('twgl.js');\n\nconst Silhouette = require('./Silhouette');\nconst Skin = require('./Skin');\nconst SvgRenderer = require('scratch-svg-renderer');\n\nconst MAX_TEXTURE_DIMENSION = 2048;\n\nclass SVGSkin extends Skin {\n    /**\n     * Create a new SVG skin.\n     * @param {!int} id - The ID for this Skin.\n     * @param {!RenderWebGL} renderer - The renderer which will use this skin.\n     * @constructor\n     * @extends Skin\n     */\n    constructor (id, renderer) {\n        super(id);\n\n        /** @type {RenderWebGL} */\n        this._renderer = renderer;\n\n        /** @type {SvgRenderer} */\n        this._svgRenderer = new SvgRenderer();\n\n        /** @type {WebGLTexture} */\n        this._texture = null;\n\n        /** @type {number} */\n        this._textureScale = 1;\n\n        /** @type {Number} */\n        this._maxTextureScale = 0;\n\n        this._silhouette = new Silhouette();\n    }\n\n    /**\n     * Dispose of this object. Do not use it after calling this method.\n     */\n    dispose () {\n        if (this._texture) {\n            this._renderer.gl.deleteTexture(this._texture);\n            this._texture = null;\n        }\n        super.dispose();\n    }\n\n    /**\n     * @return {Array<number>} the natural size, in Scratch units, of this skin.\n     */\n    get size () {\n        return this._svgRenderer.size;\n    }\n\n    /**\n     * Set the origin, in object space, about which this Skin should rotate.\n     * @param {number} x - The x coordinate of the new rotation center.\n     * @param {number} y - The y coordinate of the new rotation center.\n     */\n    setRotationCenter (x, y) {\n        const viewOffset = this._svgRenderer.viewOffset;\n        super.setRotationCenter(x - viewOffset[0], y - viewOffset[1]);\n    }\n\n    /**\n     * @param {Array<number>} scale - The scaling factors to be used, each in the [0,100] range.\n     * @return {WebGLTexture} The GL texture representation of this skin when drawing at the given scale.\n     */\n    // eslint-disable-next-line no-unused-vars\n    getTexture (scale) {\n        // The texture only ever gets uniform scale. Take the larger of the two axes.\n        const scaleMax = scale ? Math.max(Math.abs(scale[0]), Math.abs(scale[1])) : 100;\n        const requestedScale = Math.min(scaleMax / 100, this._maxTextureScale);\n        let newScale = this._textureScale;\n        while ((newScale < this._maxTextureScale) && (requestedScale >= 1.5 * newScale)) {\n            newScale *= 2;\n        }\n        if (this._textureScale !== newScale) {\n            this._textureScale = newScale;\n            this._svgRenderer._draw(this._textureScale, () => {\n                if (this._textureScale === newScale) {\n                    const gl = this._renderer.gl;\n                    gl.bindTexture(gl.TEXTURE_2D, this._texture);\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._svgRenderer.canvas);\n                }\n            });\n        }\n\n        return this._texture;\n    }\n\n    /**\n     * Set the contents of this skin to a snapshot of the provided SVG data.\n     * @param {string} svgData - new SVG to use.\n     * @param {Array<number>} [rotationCenter] - Optional rotation center for the SVG. If not supplied, it will be\n     * calculated from the bounding box\n     * @fires Skin.event:WasAltered\n     */\n    setSVG (svgData, rotationCenter) {\n        this._svgRenderer.fromString(svgData, 1, () => {\n            const gl = this._renderer.gl;\n            this._textureScale = this._maxTextureScale = 1;\n            if (this._texture) {\n                gl.bindTexture(gl.TEXTURE_2D, this._texture);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._svgRenderer.canvas);\n                this._silhouette.update(this._svgRenderer.canvas);\n            } else {\n                // TODO: mipmaps?\n                const textureOptions = {\n                    auto: true,\n                    wrap: gl.CLAMP_TO_EDGE,\n                    src: this._svgRenderer.canvas\n                };\n\n                this._texture = twgl.createTexture(gl, textureOptions);\n                this._silhouette.update(this._svgRenderer.canvas);\n            }\n\n            const maxDimension = Math.max(this._svgRenderer.canvas.width, this._svgRenderer.canvas.height);\n            let testScale = 2;\n            for (testScale; maxDimension * testScale <= MAX_TEXTURE_DIMENSION; testScale *= 2) {\n                this._maxTextureScale = testScale;\n            }\n\n            if (typeof rotationCenter === 'undefined') rotationCenter = this.calculateRotationCenter();\n            this.setRotationCenter.apply(this, rotationCenter);\n            this.emit(Skin.Events.WasAltered);\n        });\n    }\n\n    /**\n     * Does this point touch an opaque or translucent point on this skin?\n     * @param {twgl.v3} vec A texture coordinate.\n     * @return {boolean} Did it touch?\n     */\n    isTouching (vec) {\n        return this._silhouette.isTouching(vec);\n    }\n}\n\nmodule.exports = SVGSkin;\n\n\n\n// WEBPACK FOOTER //\n// src/SVGSkin.js","const SVGTextWrapper = require('./svg-text-wrapper');\nconst SvgRenderer = require('scratch-svg-renderer');\nconst xmlescape = require('xml-escape');\n\nconst MAX_LINE_LENGTH = 170;\nconst MIN_WIDTH = 50;\n\nclass SVGTextBubble {\n    constructor () {\n        this.svgRenderer = new SvgRenderer();\n        this.svgTextWrapper = new SVGTextWrapper();\n        this._textSizeCache = {};\n    }\n\n    _speechBubble (w, h, radius, pointsLeft) {\n        let pathString = `\n            M 0 ${radius}\n            A ${radius} ${radius} 0 0 1 ${radius} 0\n            L ${w - radius} 0\n            A ${radius} ${radius} 0 0 1 ${w} ${radius}\n            L ${w} ${h - radius}\n            A ${radius} ${radius} 0 0 1 ${w - radius} ${h}`;\n\n        if (pointsLeft) {\n            pathString += `\n                L 32 ${h}\n                c -5 8 -15 12 -18 12\n                a 2 2 0 0 1 -2 -2\n                c 0 -2 4 -6 4 -10`;\n        } else {\n            pathString += `\n                L ${w - 16} ${h}\n                c 0 4 4 8 4 10\n                a 2 2 0 0 1 -2 2\n                c -3 0 -13 -4 -18 -12`;\n        }\n\n        pathString += `\n            L ${radius} ${h}\n            A ${radius} ${radius} 0 0 1 0 ${h - radius}\n            Z`;\n\n        return `\n            <g>\n                <path\n                  d=\"${pathString}\"\n                  stroke=\"rgba(0, 0, 0, 0.15)\"\n                  stroke-width=\"4\"\n                  fill=\"rgba(0, 0, 0, 0.15)\"\n                  stroke-line-join=\"round\"\n              />\n              <path\n                d=\"${pathString}\"\n                stroke=\"none\"\n                fill=\"white\" />\n            </g>`;\n    }\n\n    _thinkBubble (w, h, radius, pointsLeft) {\n        const e1rx = 2.25;\n        const e1ry = 2.25;\n        const e2rx = 1.5;\n        const e2ry = 1.5;\n        const e1x = 16 + 7 + e1rx;\n        const e1y = 5 + h + e1ry;\n        const e2x = 16 + e2rx;\n        const e2y = 8 + h + e2ry;\n        const insetR = 4;\n        const pInset1 = 12 + radius;\n        const pInset2 = pInset1 + (2 * insetR);\n\n        let pathString = `\n            M 0 ${radius}\n            A ${radius} ${radius} 0 0 1 ${radius} 0\n            L ${w - radius} 0\n            A ${radius} ${radius} 0 0 1 ${w} ${radius}\n            L ${w} ${h - radius}\n            A ${radius} ${radius} 0 0 1 ${w - radius} ${h}`;\n\n        if (pointsLeft) {\n            pathString += `\n                L ${pInset2} ${h}\n                A ${insetR} ${insetR} 0 0 1 ${pInset2 - insetR} ${h + insetR}\n                A ${insetR} ${insetR} 0 0 1 ${pInset1} ${h}`;\n        } else {\n            pathString += `\n                L ${w - pInset1} ${h}\n                A ${insetR} ${insetR} 0 0 1 ${w - pInset1 - insetR} ${h + insetR}\n                A ${insetR} ${insetR} 0 0 1 ${w - pInset2} ${h}`;\n        }\n\n        pathString += `\n            L ${radius} ${h}\n            A ${radius} ${radius} 0 0 1 0 ${h - radius}\n            Z`;\n\n        const ellipseSvg = (cx, cy, rx, ry) => `\n            <g>\n                <ellipse\n                    cx=\"${cx}\" cy=\"${cy}\"\n                    rx=\"${rx}\" ry=\"${ry}\"\n                    fill=\"rgba(0, 0, 0, 0.15)\"\n                    stroke=\"rgba(0, 0, 0, 0.15)\"\n                    stroke-width=\"4\"\n                />\n                <ellipse\n                    cx=\"${cx}\" cy=\"${cy}\"\n                    rx=\"${rx}\" ry=\"${ry}\"\n                    fill=\"white\"\n                    stroke=\"none\"\n                />\n            </g>`;\n        let ellipses = [];\n        if (pointsLeft) {\n            ellipses = [\n                ellipseSvg(e1x, e1y, e1rx, e1ry),\n                ellipseSvg(e2x, e2y, e2rx, e2ry)\n            ];\n        } else {\n            ellipses = [\n                ellipseSvg(w - e1x, e1y, e1rx, e1ry),\n                ellipseSvg(w - e2x, e2y, e2rx, e2ry)\n            ];\n        }\n\n        return `\n             <g>\n                <path d=\"${pathString}\" stroke=\"rgba(0, 0, 0, 0.15)\" stroke-width=\"4\" fill=\"rgba(0, 0, 0, 0.15)\" />\n                <path d=\"${pathString}\" stroke=\"none\" fill=\"white\" />\n                ${ellipses.join('\\n')}\n            </g>`;\n    }\n\n\n    _getTextSize () {\n        const svgString = this._wrapSvgFragment(this._textFragment());\n        if (!this._textSizeCache[svgString]) {\n            this._textSizeCache[svgString] = this.svgRenderer.measure(svgString);\n        }\n        return this._textSizeCache[svgString];\n    }\n\n    _wrapSvgFragment (fragment) {\n        return `\n          <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n              ${fragment}\n          </svg>\n        `;\n    }\n\n    _textFragment () {\n        return `<text fill=\"#575E75\">${xmlescape(this.lines.join('\\n'))}</text>`;\n    }\n\n    buildString (type, text, pointsLeft) {\n        this.type = type;\n        this.pointsLeft = pointsLeft;\n        this.lines = this.svgTextWrapper.wrapText(MAX_LINE_LENGTH, text);\n\n        let fragment = '';\n\n        const radius = 16;\n        const {x, y, width, height} = this._getTextSize();\n        const padding = 10;\n        const fullWidth = Math.max(MIN_WIDTH, width) + (2 * padding);\n        const fullHeight = height + (2 * padding);\n        if (this.type === 'say') {\n            fragment += this._speechBubble(fullWidth, fullHeight, radius, this.pointsLeft);\n        } else {\n            fragment += this._thinkBubble(fullWidth, fullHeight, radius, this.pointsLeft);\n        }\n        fragment += `<g transform=\"translate(${padding - x}, ${padding - y})\">${this._textFragment()}</g>`;\n        return this._wrapSvgFragment(fragment);\n    }\n}\n\nmodule.exports = SVGTextBubble;\n\n\n\n// WEBPACK FOOTER //\n// src/util/svg-text-bubble.js","const TextWrapper = require('./text-wrapper');\n\n/**\n * Measure text by using a hidden SVG attached to the DOM.\n * For use with TextWrapper.\n */\nclass SVGMeasurementProvider {\n    constructor () {\n        this._svgRoot = null;\n        this._cache = {};\n    }\n\n    /**\n     * Detach the hidden SVG element from the DOM and forget all references to it and its children.\n     */\n    dispose () {\n        if (this._svgRoot) {\n            this._svgRoot.parentElement.removeChild(this._svgRoot);\n            this._svgRoot = null;\n            this._svgText = null;\n        }\n    }\n\n    /**\n     * Called by the TextWrapper before a batch of zero or more calls to measureText().\n     */\n    beginMeasurementSession () {\n        if (!this._svgRoot) {\n            this._init();\n        }\n    }\n\n    /**\n     * Called by the TextWrapper after a batch of zero or more calls to measureText().\n     */\n    endMeasurementSession () {\n        this._svgText.textContent = '';\n        this.dispose();\n    }\n\n    /**\n     * Measure a whole string as one unit.\n     * @param {string} text - the text to measure.\n     * @returns {number} - the length of the string.\n     */\n    measureText (text) {\n        if (!this._cache[text]) {\n            this._svgText.textContent = text;\n            this._cache[text] = this._svgText.getComputedTextLength();\n        }\n        return this._cache[text];\n    }\n\n    /**\n     * Create a simple SVG containing a text node, hide it, and attach it to the DOM. The text node will be used to\n     * collect text measurements. The SVG must be attached to the DOM: otherwise measurements will generally be zero.\n     * @private\n     */\n    _init () {\n        const svgNamespace = 'http://www.w3.org/2000/svg';\n\n        const svgRoot = document.createElementNS(svgNamespace, 'svg');\n        const svgGroup = document.createElementNS(svgNamespace, 'g');\n        const svgText = document.createElementNS(svgNamespace, 'text');\n\n        // Normalize text attributes to match what the svg-renderer does.\n        // @TODO This code should be shared with the svg-renderer.\n        svgText.setAttribute('alignment-baseline', 'text-before-edge');\n        svgText.setAttribute('font-size', '14');\n        svgText.setAttribute('font-family', 'Helvetica');\n\n        // hide from the user, including screen readers\n        svgRoot.setAttribute('style', 'position:absolute;visibility:hidden');\n\n        document.body.appendChild(svgRoot);\n        svgRoot.appendChild(svgGroup);\n        svgGroup.appendChild(svgText);\n\n        /**\n         * The root SVG element.\n         * @type {SVGSVGElement}\n         * @private\n         */\n        this._svgRoot = svgRoot;\n\n        /**\n         * The leaf SVG element used for text measurement.\n         * @type {SVGTextElement}\n         * @private\n         */\n        this._svgText = svgText;\n    }\n}\n\n/**\n * TextWrapper specialized for SVG text.\n */\nclass SVGTextWrapper extends TextWrapper {\n    constructor () {\n        super(new SVGMeasurementProvider());\n    }\n}\n\nmodule.exports = SVGTextWrapper;\n\n\n\n// WEBPACK FOOTER //\n// src/util/svg-text-wrapper.js","const LineBreaker = require('linebreak');\nconst GraphemeBreaker = require('grapheme-breaker');\n\n/**\n * Tell this text wrapper to use a specific measurement provider.\n * @typedef {object} MeasurementProvider - the new measurement provider.\n * @property {Function} beginMeasurementSession - this will be called before a batch of measurements are made.\n *      Optionally, this function may return an object to be provided to the endMeasurementSession function.\n * @property {Function} measureText - this will be called each time a piece of text must be measured.\n * @property {Function} endMeasurementSession - this will be called after a batch of measurements is finished.\n *      It will be passed whatever value beginMeasurementSession returned, if any.\n */\n\n/**\n * Utility to wrap text across several lines, respecting Unicode grapheme clusters and, when possible, Unicode line\n * break opportunities.\n * Reference material:\n * - Unicode Standard Annex #14: http://unicode.org/reports/tr14/\n * - Unicode Standard Annex #39: http://unicode.org/reports/tr29/\n * - \"JavaScript has a Unicode problem\" by Mathias Bynens: https://mathiasbynens.be/notes/javascript-unicode\n */\nclass TextWrapper {\n    /**\n     * Construct a text wrapper which will measure text using the specified measurement provider.\n     * @param {MeasurementProvider} measurementProvider - a helper object to provide text measurement services.\n     */\n    constructor (measurementProvider) {\n        this._measurementProvider = measurementProvider;\n        this._cache = {};\n    }\n\n    /**\n     * Wrap the provided text into lines restricted to a maximum width. See Unicode Standard Annex (UAX) #14.\n     * @param {number} maxWidth - the maximum allowed width of a line.\n     * @param {string} text - the text to be wrapped. Will be split on whitespace.\n     * @returns {Array.<string>} an array containing the wrapped lines of text.\n     */\n    wrapText (maxWidth, text) {\n        // Normalize to canonical composition (see Unicode Standard Annex (UAX) #15)\n        text = text.normalize();\n\n        const cacheKey = `${maxWidth}-${text}`;\n        if (this._cache[cacheKey]) {\n            return this._cache[cacheKey];\n        }\n\n        const measurementSession = this._measurementProvider.beginMeasurementSession();\n\n        const breaker = new LineBreaker(text);\n        let lastPosition = 0;\n        let nextBreak;\n        let currentLine = null;\n        const lines = [];\n\n        while ((nextBreak = breaker.nextBreak())) {\n            const word = text.slice(lastPosition, nextBreak.position).replace(/\\n+$/, '');\n\n            let proposedLine = (currentLine || '').concat(word);\n            let proposedLineWidth = this._measurementProvider.measureText(proposedLine);\n\n            if (proposedLineWidth > maxWidth) {\n                // The next word won't fit on this line. Will it fit on a line by itself?\n                const wordWidth = this._measurementProvider.measureText(word);\n                if (wordWidth > maxWidth) {\n                    // The next word can't even fit on a line by itself. Consume it one grapheme cluster at a time.\n                    let lastCluster = 0;\n                    let nextCluster;\n                    while (lastCluster !== (nextCluster = GraphemeBreaker.nextBreak(word, lastCluster))) {\n                        const cluster = word.substring(lastCluster, nextCluster);\n                        proposedLine = (currentLine || '').concat(cluster);\n                        proposedLineWidth = this._measurementProvider.measureText(proposedLine);\n                        if ((currentLine === null) || (proposedLineWidth <= maxWidth)) {\n                            // first cluster of a new line or the cluster fits\n                            currentLine = proposedLine;\n                        } else {\n                            // no more can fit\n                            lines.push(currentLine);\n                            currentLine = cluster;\n                        }\n                        lastCluster = nextCluster;\n                    }\n                } else {\n                    // The next word can fit on the next line. Finish the current line and move on.\n                    if (currentLine !== null) lines.push(currentLine);\n                    currentLine = word;\n                }\n            } else {\n                // The next word fits on this line. Just keep going.\n                currentLine = proposedLine;\n            }\n\n            // Did we find a \\n or similar?\n            if (nextBreak.required) {\n                if (currentLine !== null) lines.push(currentLine);\n                currentLine = null;\n            }\n\n            lastPosition = nextBreak.position;\n        }\n\n        currentLine = currentLine || '';\n        if (currentLine.length > 0 || lines.length === 0) {\n            lines.push(currentLine);\n        }\n\n        this._cache[cacheKey] = lines;\n        this._measurementProvider.endMeasurementSession(measurementSession);\n        return lines;\n    }\n}\n\nmodule.exports = TextWrapper;\n\n\n\n// WEBPACK FOOTER //\n// src/util/text-wrapper.js","// Generated by CoffeeScript 1.7.1\n(function() {\n  var AI, AL, BA, BK, CB, CI_BRK, CJ, CP_BRK, CR, DI_BRK, ID, IN_BRK, LF, LineBreaker, NL, NS, PR_BRK, SA, SG, SP, UnicodeTrie, WJ, XX, base64, characterClasses, classTrie, data, fs, pairTable, _ref, _ref1;\n\n  UnicodeTrie = require('unicode-trie');\n\n  \n\n  base64 = require('base64-js');\n\n  _ref = require('./classes'), BK = _ref.BK, CR = _ref.CR, LF = _ref.LF, NL = _ref.NL, CB = _ref.CB, BA = _ref.BA, SP = _ref.SP, WJ = _ref.WJ, SP = _ref.SP, BK = _ref.BK, LF = _ref.LF, NL = _ref.NL, AI = _ref.AI, AL = _ref.AL, SA = _ref.SA, SG = _ref.SG, XX = _ref.XX, CJ = _ref.CJ, ID = _ref.ID, NS = _ref.NS, characterClasses = _ref.characterClasses;\n\n  _ref1 = require('./pairs'), DI_BRK = _ref1.DI_BRK, IN_BRK = _ref1.IN_BRK, CI_BRK = _ref1.CI_BRK, CP_BRK = _ref1.CP_BRK, PR_BRK = _ref1.PR_BRK, pairTable = _ref1.pairTable;\n\n  data = base64.toByteArray(\"AA4IAAAAAAAAAhqg5VV7NJtZvz7fTC8zU5deplUlMrQoWqmqahD5So0aipYWrUhVFSVBQ10iSTtUtW6nKDVF6k7d75eQfEUbFcQ9KiFS90tQEolcP23nrLPmO+esr/+f39rr/a293t/e7/P8nmfvlz0O6RvrBJADtbBNaD88IOKTOmOrCqhu9zE770vc1pBV/xL5dxj2V7Zj4FGSomFKStCWNlV7hG1VabZfZ1LaHbFrRwzzLjzPoi1UHDnlV/lWbhgIIJvLBp/pu7AHEdRnIY+ROdXxg4fNpMdTxVnnm08OjozejAVsBqwqz8kddGRlRxsd8c55dNZoPuex6a7Dt6L0NNb03sqgTlR2/OT7eTt0Y0WnpUXxLsp5SMANc4DsmX4zJUBQvznwexm9tsMH+C9uRYMPOd96ZHB29NZjCIM2nfO7tsmQveX3l2r7ft0N4/SRJ7kO6Y8ZCaeuUQ4gMTZ67cp7TgxvlNDsPgOBdZi2YTam5Q7m3+00l+XG7PrDe6YoPmHgK+yLih7fAR16ZFCeD9WvOVt+gfNW/KT5/M6rb/9KERt+N1lad5RneVjzxXHsLofuU+TvrEsr3+26sVz5WJh6L/svoPK3qepFH9bysDljWtD1F7KrxzW1i9r+e/NLxV/acts7zuo304J9+t3Pd6Y6u8f3EAqxNRgv5DZjaI3unyvkvHPya/v3mWVYOC38qBq11+yHZ2bAyP1HbkV92vdno7r2lxz9UwCdCJVfd14NLcpO2CadHS/XPJ9doXgz5vLv/1OBVS3gX0D9n6LiNIDfpilO9RsLgZ2W/wIy8W/Rh93jfoz4qmRV2xElv6p2lRXQdO6/Cv8f5nGn3u0wLXjhnvClabL1o+7yvIpvLfT/xsKG30y/sTvq30ia9Czxp9dr9v/e7Yn/O0QJXxxBOJmceP/DBFa1q1v6oudn/e6qc/37dUoNvnYL4plQ9OoneYOh/r8fOFm7yl7FETHY9dXd5K2n/qEc53dOEe1TTJcvCfp1dpTC334l0vyaFL6mttNEbFjzO+ZV2mLk0qc3BrxJ4d9gweMmjRorxb7vic0rSq6D4wzAyFWas1TqPE0sLI8XLAryC8tPChaN3ALEZSWmtB34SyZcxXYn/E4Tg0LeMIPhgPKD9zyHGMxxhxnDDih7eI86xECTM8zodUCdgffUmRh4rQ8zyA6ow/Aei+01a8OMfziQQ+GAEkhwN/cqUFYAVzA9ex4n6jgtsiMvXf5BtXxEU4hSphvx3v8+9au8eEekEEpkrkne/zB1M+HAPuXIz3paxKlfe8aDMfGWAX6Md6PuuAdKHFVH++Ed5LEji94Z5zeiJIxbmWeN7rr1/ZcaBl5/nimdHsHgIH/ssyLUXZ4fDQ46HnBb+hQqG8yNiKRrXL/b1IPYDUsu3dFKtRMcjqlRvONd4xBvOufx2cUHuk8pmG1D7PyOQmUmluisVFS9OWS8fPIe8LiCtjwJKnEC9hrS9uKmISI3Wa5+vdXUG9dtyfr7g/oJv2wbzeZU838G6mEvntUb3SVV/fBZ6H/sL+lElzeRrHy2Xbe7UWX1q5sgOQ81rv+2baej4fP4m5Mf/GkoxfDtT3++KP7do9Jn26aa6xAhCf5L9RZVfkWKCcjI1eYbm2plvTEqkDxKC402bGzXCYaGnuALHabBT1dFLuOSB7RorOPEhZah1NjZIgR/UFGfK3p1ElYnevOMBDLURdpIjrI+qZk4sffGbRFiXuEmdFjiAODlQCJvIaB1rW61Ljg3y4eS4LAcSgDxxZQs0DYa15wA032Z+lGUfpoyOrFo3mg1sRQtN/fHHCx3TrM8eTrldMbYisDLXbUDoXMLejSq0fUNuO1muX0gEa8vgyegkqiqqbC3W0S4cC9Kmt8MuS/hFO7Xei3f8rSvIjeveMM7kxjUixOrl6gJshe4JU7PhOHpfrRYvu7yoAZKa3Buyk2J+K5W+nNTz1nhJDhRUfDJLiUXxjxXCJeeaOe/r7HlBP/uURc/5efaZEPxr55Qj39rfTLkugUGyMrwo7HAglfEjDriehF1jXtwJkPoiYkYQ5aoXSA7qbCBGKq5hwtu2VkpI9xVDop/1xrC52eiIvCoPWx4lLl40jm9upvycVPfpaH9/o2D4xKXpeNjE2HPQRS+3RFaYTc4Txw7Dvq5X6JBRwzs9mvoB49BK6b+XgsZVJYiInTlSXZ+62FT18mkFVcPKCJsoF5ahb19WheZLUYsSwdrrVM3aQ2XE6SzU2xHDS6iWkodk5AF6F8WUNmmushi8aVpMPwiIfEiQWo3CApONDRjrhDiVnkaFsaP5rjIJkmsN6V26li5LNM3JxGSyKgomknTyyrhcnwv9Qcqaq5utAh44W30SWo8Q0XHKR0glPF4fWst1FUCnk2woFq3iy9fAbzcjJ8fvSjgKVOfn14RDqyQuIgaGJZuswTywdCFSa89SakMf6fe+9KaQMYQlKxiJBczuPSho4wmBjdA+ag6QUOr2GdpcbSl51Ay6khhBt5UXdrnxc7ZGMxCvz96A4oLocxh2+px+1zkyLacCGrxnPzTRSgrLKpStFpH5ppKWm7PgMKZtwgytKLOjbGCOQLTm+KOowqa1sdut9raj1CZFkZD0jbaKNLpJUarSH5Qknx1YiOxdA5L6d5sfI/unmkSF65Ic/AvtXt98Pnrdwl5vgppQ3dYzWFwknZsy6xh2llmLxpegF8ayLwniknlXRHiF4hzzrgB8jQ4wdIqcaHCEAxyJwCeGkXPBZYSrrGa4vMwZvNN9aK0F4JBOK9mQ8g8EjEbIQVwvfS2D8GuCYsdqwqSWbQrfWdTRUJMqmpnWPax4Z7E137I6brHbvjpPlfNZpF1d7PP7HB/MPHcHVKTMhLO4f3CZcaccZEOiS2DpKiQB5KXDJ+Ospcz4qTRCRxgrKEQIgUkKLTKKwskdx2DWo3bg3PEoB5h2nA24olwfKSR+QR6TAvEDi/0czhUT59RZmO1MGeKGeEfuOSPWfL+XKmhqpZmOVR9mJVNDPKOS49Lq+Um10YsBybzDMtemlPCOJEtE8zaXhsaqEs9bngSJGhlOTTMlCXly9Qv5cRN3PVLK7zoMptutf7ihutrQ/Xj7VqeCdUwleTTKklOI8Wep9h7fCY0kVtDtIWKnubWAvbNZtsRRqOYl802vebPEkZRSZc6wXOfPtpPtN5HI63EUFfsy7U/TLr8NkIzaY3vx4A28x765XZMzRZTpMk81YIMuwJ5+/zoCuZj1wGnaHObxa5rpKZj4WhT670maRw04w0e3cZW74Z0aZe2n05hjZaxm6urenz8Ef5O6Yu1J2aqYAlqsCXs5ZB5o1JJ5l3xkTVr8rJQ09NLsBqRRDT2IIjOPmcJa6xQ1R5yGP9jAsj23xYDTezdyqG8YWZ7vJBIWK56K+iDgcHimiQOTIasNSua1fOBxsKMMEKd15jxTl+3CyvGCR+UyRwuSI2XuwRIPoNNclPihfJhaq2mKkNijwYLY6feqohktukmI3KDvOpN7ItCqHHhNuKlxMfBAEO5LjW2RKh6lE5Hd1dtAOopac/Z4FdsNsjMhXz/ug8JGmbVJTA+VOBJXdrYyJcIn5+OEeoK8kWEWF+wdG8ZtZHKSquWDtDVyhFPkRVqguKFkLkKCz46hcU1SUY9oJ2Sk+dmq0kglqk4kqKT1CV9JDELPjK1WsWGkEXF87g9P98e5ff0mIupm/w6vc3kCeq04X5bgJQlcMFRjlFWmSk+kssXCAVikfeAlMuzpUvCSdXiG+dc6KrIiLxxhbEVuKf7vW7KmDQI95bZe3H9mN3/77F6fZ2Yx/F9yClllj8gXpLWLpd5+v90iOaFa9sd7Pvx0lNa1o1+bkiZ69wCiC2x9UIb6/boBCuNMB/HYR0RC6+FD9Oe5qrgQl6JbXtkaYn0wkdNhROLqyhv6cKvyMj1Fvs2o3OOKoMYTubGENLfY5F6H9d8wX1cnINsvz+wZFQu3zhWVlwJvwBEp69Dqu/ZnkBf3nIfbx4TK7zOVJH5sGJX+IMwkn1vVBn38GbpTg9bJnMcTOb5F6Ci5gOn9Fcy6Qzcu+FL6mYJJ+f2ZZJGda1VqruZ0JRXItp8X0aTjIcJgzdaXlha7q7kV4ebrMsunfsRyRa9qYuryBHA0hc1KVsKdE+oI0ljLmSAyMze8lWmc5/lQ18slyTVC/vADTc+SNM5++gztTBLz4m0aVUKcfgOEExuKVomJ7XQDZuziMDjG6JP9tgR7JXZTeo9RGetW/Xm9/TgPJpTgHACPOGvmy2mDm9fl09WeMm9sQUAXP3Su2uApeCwJVT5iWCXDgmcuTsFgU9Nm6/PusJzSbDQIMfl6INY/OAEvZRN54BSSXUClM51im6Wn9VhVamKJmzOaFJErgJcs0etFZ40LIF3EPkjFTjGmAhsd174NnOwJW8TdJ1Dja+E6Wa6FVS22Haj1DDA474EesoMP5nbspAPJLWJ8rYcP1DwCslhnn+gTFm+sS9wY+U6SogAa9tiwpoxuaFeqm2OK+uozR6SfiLCOPz36LiDlzXr6UWd7BpY6mlrNANkTOeme5EgnnAkQRTGo9T6iYxbUKfGJcI9B+ub2PcyUOgpwXbOf3bHFWtygD7FYbRhb+vkzi87dB0JeXl/vBpBUz93VtqZi7AL7C1VowTF+tGmyurw7DBcktc+UMY0E10Jw4URojf8NdaNpN6E1q4+Oz+4YePtMLy8FPRP\");\n\n  classTrie = new UnicodeTrie(data);\n\n  LineBreaker = (function() {\n    var Break, mapClass, mapFirst;\n\n    function LineBreaker(string) {\n      this.string = string;\n      this.pos = 0;\n      this.lastPos = 0;\n      this.curClass = null;\n      this.nextClass = null;\n    }\n\n    LineBreaker.prototype.nextCodePoint = function() {\n      var code, next;\n      code = this.string.charCodeAt(this.pos++);\n      next = this.string.charCodeAt(this.pos);\n      if ((0xd800 <= code && code <= 0xdbff) && (0xdc00 <= next && next <= 0xdfff)) {\n        this.pos++;\n        return ((code - 0xd800) * 0x400) + (next - 0xdc00) + 0x10000;\n      }\n      return code;\n    };\n\n    mapClass = function(c) {\n      switch (c) {\n        case AI:\n          return AL;\n        case SA:\n        case SG:\n        case XX:\n          return AL;\n        case CJ:\n          return NS;\n        default:\n          return c;\n      }\n    };\n\n    mapFirst = function(c) {\n      switch (c) {\n        case LF:\n        case NL:\n          return BK;\n        case CB:\n          return BA;\n        case SP:\n          return WJ;\n        default:\n          return c;\n      }\n    };\n\n    LineBreaker.prototype.nextCharClass = function(first) {\n      if (first == null) {\n        first = false;\n      }\n      return mapClass(classTrie.get(this.nextCodePoint()));\n    };\n\n    Break = (function() {\n      function Break(position, required) {\n        this.position = position;\n        this.required = required != null ? required : false;\n      }\n\n      return Break;\n\n    })();\n\n    LineBreaker.prototype.nextBreak = function() {\n      var cur, lastClass, shouldBreak;\n      if (this.curClass == null) {\n        this.curClass = mapFirst(this.nextCharClass());\n      }\n      while (this.pos < this.string.length) {\n        this.lastPos = this.pos;\n        lastClass = this.nextClass;\n        this.nextClass = this.nextCharClass();\n        if (this.curClass === BK || (this.curClass === CR && this.nextClass !== LF)) {\n          this.curClass = mapFirst(mapClass(this.nextClass));\n          return new Break(this.lastPos, true);\n        }\n        cur = (function() {\n          switch (this.nextClass) {\n            case SP:\n              return this.curClass;\n            case BK:\n            case LF:\n            case NL:\n              return BK;\n            case CR:\n              return CR;\n            case CB:\n              return BA;\n          }\n        }).call(this);\n        if (cur != null) {\n          this.curClass = cur;\n          if (this.nextClass === CB) {\n            return new Break(this.lastPos);\n          }\n          continue;\n        }\n        shouldBreak = false;\n        switch (pairTable[this.curClass][this.nextClass]) {\n          case DI_BRK:\n            shouldBreak = true;\n            break;\n          case IN_BRK:\n            shouldBreak = lastClass === SP;\n            break;\n          case CI_BRK:\n            shouldBreak = lastClass === SP;\n            if (!shouldBreak) {\n              continue;\n            }\n            break;\n          case CP_BRK:\n            if (lastClass !== SP) {\n              continue;\n            }\n        }\n        this.curClass = this.nextClass;\n        if (shouldBreak) {\n          return new Break(this.lastPos);\n        }\n      }\n      if (this.pos >= this.string.length) {\n        if (this.lastPos < this.string.length) {\n          this.lastPos = this.string.length;\n          return new Break(this.string.length);\n        } else {\n          return null;\n        }\n      }\n    };\n\n    return LineBreaker;\n\n  })();\n\n  module.exports = LineBreaker;\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/linebreak/src/linebreaker.js\n// module id = 26\n// module chunks = 0 1","var TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, btype, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tiny-inflate/index.js\n// module id = 27\n// module chunks = 0 1","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/lib/b64.js\n// module id = 28\n// module chunks = 0 1","// Generated by CoffeeScript 1.7.1\n(function() {\n  var AI, AL, B2, BA, BB, BK, CB, CJ, CL, CM, CP, CR, EX, GL, H2, H3, HL, HY, ID, IN, IS, JL, JT, JV, LF, NL, NS, NU, OP, PO, PR, QU, RI, SA, SG, SP, SY, WJ, XX, ZW;\n\n  exports.OP = OP = 0;\n\n  exports.CL = CL = 1;\n\n  exports.CP = CP = 2;\n\n  exports.QU = QU = 3;\n\n  exports.GL = GL = 4;\n\n  exports.NS = NS = 5;\n\n  exports.EX = EX = 6;\n\n  exports.SY = SY = 7;\n\n  exports.IS = IS = 8;\n\n  exports.PR = PR = 9;\n\n  exports.PO = PO = 10;\n\n  exports.NU = NU = 11;\n\n  exports.AL = AL = 12;\n\n  exports.HL = HL = 13;\n\n  exports.ID = ID = 14;\n\n  exports.IN = IN = 15;\n\n  exports.HY = HY = 16;\n\n  exports.BA = BA = 17;\n\n  exports.BB = BB = 18;\n\n  exports.B2 = B2 = 19;\n\n  exports.ZW = ZW = 20;\n\n  exports.CM = CM = 21;\n\n  exports.WJ = WJ = 22;\n\n  exports.H2 = H2 = 23;\n\n  exports.H3 = H3 = 24;\n\n  exports.JL = JL = 25;\n\n  exports.JV = JV = 26;\n\n  exports.JT = JT = 27;\n\n  exports.RI = RI = 28;\n\n  exports.AI = AI = 29;\n\n  exports.BK = BK = 30;\n\n  exports.CB = CB = 31;\n\n  exports.CJ = CJ = 32;\n\n  exports.CR = CR = 33;\n\n  exports.LF = LF = 34;\n\n  exports.NL = NL = 35;\n\n  exports.SA = SA = 36;\n\n  exports.SG = SG = 37;\n\n  exports.SP = SP = 38;\n\n  exports.XX = XX = 39;\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/linebreak/src/classes.js\n// module id = 29\n// module chunks = 0 1","// Generated by CoffeeScript 1.7.1\n(function() {\n  var CI_BRK, CP_BRK, DI_BRK, IN_BRK, PR_BRK;\n\n  exports.DI_BRK = DI_BRK = 0;\n\n  exports.IN_BRK = IN_BRK = 1;\n\n  exports.CI_BRK = CI_BRK = 2;\n\n  exports.CP_BRK = CP_BRK = 3;\n\n  exports.PR_BRK = PR_BRK = 4;\n\n  exports.pairTable = [[PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, CP_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, DI_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, DI_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, PR_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK], [IN_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, IN_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, DI_BRK], [DI_BRK, PR_BRK, PR_BRK, IN_BRK, IN_BRK, IN_BRK, PR_BRK, PR_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK, IN_BRK, DI_BRK, DI_BRK, PR_BRK, CI_BRK, PR_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, DI_BRK, IN_BRK]];\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/linebreak/src/pairs.js\n// module id = 30\n// module chunks = 0 1","// Generated by CoffeeScript 1.8.0\n(function() {\n  var CR, Control, Extend, L, LF, LV, LVT, Regional_Indicator, SpacingMark, T, UnicodeTrie, V, classTrie, codePointAt, fs, shouldBreak, _ref;\n\n  _ref = require('./classes.json'), CR = _ref.CR, LF = _ref.LF, Control = _ref.Control, Extend = _ref.Extend, Regional_Indicator = _ref.Regional_Indicator, SpacingMark = _ref.SpacingMark, L = _ref.L, V = _ref.V, T = _ref.T, LV = _ref.LV, LVT = _ref.LVT;\n\n  UnicodeTrie = require('unicode-trie');\n\n  \n\n  classTrie = new UnicodeTrie(Buffer(\"AA4QAAAAAAAAAHbgAQgG9/ntmkuIXjUUxzN+r3k4bUWQVotSHVCsoov6qIoiToWKFYvMuLHVtlaoLqQilLrwtakuxFYoLmQQYWalRYpUKYJV0am4mMUooojgSEG7EC2CdiHq/3rzMcc0yT333jyu0xz4kdwkN+ckOXncfN9QS4jzwCqwBqwHt5O0uuFGsBlsAhOM8lvATkv+LrAb7AXPgRfBAfAqeJ2UmwZvgcPgKDgGjoNZMAe+AN+C5W0hLgAXtvN3KZci7UpwFVgHbgHjYAPYJJ8nwCTYCnaQ58dI+cfBHvn8DFgL9kl9LyP8LLOflJ8CM+Q5K39IPo/28vfeyd6X8fcR/5jYP4v4nHyeR/iNjC8gPAl+BU+T8qcRFx0hBsGKzn/74LreIrdKxsGkRO0zE48wy7lmZSfnYkmWdhnCtTK+oHnnWqUPbuyY679N5t2J8B4ZnyTltyK+Dezq5P62G+Femf+sDPdp6n8JaQcterN5NWXJ5/Ij+FnGR0n6BvCbZk4kwjGjjO8rGh9woedNoudtBz6VSCQSiUQikUgkEomET97t5Hdp/ecvGfcXH+CdWfLNu6onxGowh7SvZPp3CE+A63v5feBJxMcQPyXz/0D4N2h18+cRhEcQnt+1674I+Q+inofANrAd7AAPg529lJfyUl7KS3mu8+4G94H7e/H3rPWRid3+RGIpc0nBGbAuE63F39VV1mjS6Pn4VCv++jN9bs4JMM5gbFSIdaNnpj+ppE3j+QQYWybEA8vytP0IPwF/gpXLsQ+AhWH0xYgQPwwJMTjA46YRXrnVw4vxzYjvke8dzvQx60gkEonE0uQA9oU3wB04J7yH/fDDVv4/j+x/QqfJXv0RuEueJe7t5vkTCLeQ88V2zVkjq+tRpD/Rzf+39hTC55lnkhdQbr+l7EHkTZH8GcTnSf4hkpf9/+uI57NQFT6HTSsC6hMYg3no/FrTF983sH84FJ3xNlroteOfQWNTp+8vL/CZeeX5mgb62A2w6WaDXa/9D/6DeFTafqwBfXtFT4irwacObMnm50/dPPwF4e/grwa0kUsTxiMEnQbcY9ZlsDXwL4iyOIfEB5jvcEgST1L/u/PjkP7vctzaZzkuJZSepknsMaw67jQ0xZe61F2XyvZ5k/ecJq4voXzQ1oZWQRm1Dl1ZH0LtiiVN8pUmy9nQD77bppuTLqWl1O9Ch+9vv9Dfm12COrZqOrXRJv13TX6i00XHyISLNamp3/e6eWWab9xyoYSr1+XeUoWug7ZWFTonhLDPO9M8pOX7cVHwbhn7Yu1VantC61ZtMPWhaiMtX0YXp1wsf7X5p65sW/OslnXpV3XrN803WneXlC0zvj5EZ5sP/6yyXsQQ01rRVdJV/+XWXUZ/rPmp7gf9dNuZoKjOmOOZibqv6fY43fi6bp9pfoXyL1tZ0x5Fy6u+UcVOrm1FZxdOPS7OLi7sFaKaXt+2c/X71qELqbhcD4v8wgRnb6+rr459rqgr3H5T21tmza0r3LOnj/6oWkcmnP6pa7OPvve9dvmqm+PD1HdteyP3e7xsX/mcK7Y26tJV0bXfVI/vOa9bZ3wIbS9nraehKHiH248cn/KxtpX1bV3bQoptnGx+S9ND2xujn6jo+ku3Jvic16oO3djo7CsrnHWdM1dd9UPR/OFQ9rtKl2ZaQ4vaWWe9KGOzSV8dcenPZdvhUny1QZdW1ce4fuhSdGuYb/F1h8IV3/PPlR0+pOya6dofdPuDbt8oug9uis+YvguqjiHnnVDz1KbfR30637f1Y5U+1o2VrVxZMX37qvfcof1XJzFtCKG76plJCJ7fhTq/FJ0hqI/FFtMaGWOv69vjUsrePZTZQ331h8lm07dj1fpCn2Fi3EX09atn2L6Ynsv4AFfUernj4HucbGc8dU0w+aDL+4M6YmtLX0z3I7Ha4Fpn1bufKucck2/YfIhrP3dfci0h5puv9TfUPs21g8bbmvzQZ4tQfhNSiuZ4HVzp4rShTHt9icl2l31YVTqB6Eus81pd/U2xuwyxpYrNPsik1wCoDEZmyDMjCmXFZVtV8d12DqoMizP7zCeh9anyDw==\",\"base64\"));\n\n  codePointAt = function(str, idx) {\n    var code, hi, low;\n    idx = idx || 0;\n    code = str.charCodeAt(idx);\n    if ((0xD800 <= code && code <= 0xDBFF)) {\n      hi = code;\n      low = str.charCodeAt(idx + 1);\n      if ((0xDC00 <= low && low <= 0xDFFF)) {\n        return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n      }\n      return hi;\n    }\n    if ((0xDC00 <= code && code <= 0xDFFF)) {\n      hi = str.charCodeAt(idx - 1);\n      low = code;\n      if ((0xD800 <= hi && hi <= 0xDBFF)) {\n        return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\n      }\n      return low;\n    }\n    return code;\n  };\n\n  shouldBreak = function(previous, current) {\n    if (previous === CR && current === LF) {\n      return false;\n    } else if (previous === Control || previous === CR || previous === LF) {\n      return true;\n    } else if (current === Control || current === CR || current === LF) {\n      return true;\n    } else if (previous === L && (current === L || current === V || current === LV || current === LVT)) {\n      return false;\n    } else if ((previous === LV || previous === V) && (current === V || current === T)) {\n      return false;\n    } else if ((previous === LVT || previous === T) && current === T) {\n      return false;\n    } else if (previous === Regional_Indicator && current === Regional_Indicator) {\n      return false;\n    } else if (current === Extend) {\n      return false;\n    } else if (current === SpacingMark) {\n      return false;\n    }\n    return true;\n  };\n\n  exports.nextBreak = function(string, index) {\n    var i, next, prev, _i, _ref1, _ref2, _ref3, _ref4;\n    if (index == null) {\n      index = 0;\n    }\n    if (index < 0) {\n      return 0;\n    }\n    if (index >= string.length - 1) {\n      return string.length;\n    }\n    prev = classTrie.get(codePointAt(string, index));\n    for (i = _i = _ref1 = index + 1, _ref2 = string.length; _i < _ref2; i = _i += 1) {\n      if ((0xd800 <= (_ref3 = string.charCodeAt(i - 1)) && _ref3 <= 0xdbff) && (0xdc00 <= (_ref4 = string.charCodeAt(i)) && _ref4 <= 0xdfff)) {\n        continue;\n      }\n      next = classTrie.get(codePointAt(string, i));\n      if (shouldBreak(prev, next)) {\n        return i;\n      }\n      prev = next;\n    }\n    return string.length;\n  };\n\n  exports.previousBreak = function(string, index) {\n    var i, next, prev, _i, _ref1, _ref2, _ref3;\n    if (index == null) {\n      index = string.length;\n    }\n    if (index > string.length) {\n      return string.length;\n    }\n    if (index <= 1) {\n      return 0;\n    }\n    index--;\n    next = classTrie.get(codePointAt(string, index));\n    for (i = _i = _ref1 = index - 1; _i >= 0; i = _i += -1) {\n      if ((0xd800 <= (_ref2 = string.charCodeAt(i)) && _ref2 <= 0xdbff) && (0xdc00 <= (_ref3 = string.charCodeAt(i + 1)) && _ref3 <= 0xdfff)) {\n        continue;\n      }\n      prev = classTrie.get(codePointAt(string, i));\n      if (shouldBreak(prev, next)) {\n        return i + 1;\n      }\n      next = prev;\n    }\n    return 0;\n  };\n\n  exports[\"break\"] = function(str) {\n    var brk, index, res;\n    res = [];\n    index = 0;\n    while ((brk = exports.nextBreak(str, index)) < str.length) {\n      res.push(str.slice(index, brk));\n      index = brk;\n    }\n    if (index < str.length) {\n      res.push(str.slice(index));\n    }\n    return res;\n  };\n\n  exports.countBreaks = function(str) {\n    var brk, count, index;\n    count = 0;\n    index = 0;\n    while ((brk = exports.nextBreak(str, index)) < str.length) {\n      index = brk;\n      count++;\n    }\n    if (index < str.length) {\n      count++;\n    }\n    return count;\n  };\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grapheme-breaker/src/GraphemeBreaker.js\n// module id = 31\n// module chunks = 0 1","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = 32\n// module chunks = 0 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 33\n// module chunks = 0 1","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/node_modules/base64-js/index.js\n// module id = 34\n// module chunks = 0 1","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 35\n// module chunks = 0 1","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = 36\n// module chunks = 0 1","module.exports = {\"Other\":0,\"CR\":1,\"LF\":2,\"Control\":3,\"Extend\":4,\"Regional_Indicator\":5,\"SpacingMark\":6,\"L\":7,\"V\":8,\"T\":9,\"LV\":10,\"LVT\":11}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/grapheme-breaker/src/classes.json\n// module id = 37\n// module chunks = 0 1","\n\nvar escape = module.exports = function escape(string, ignore) {\n  var pattern;\n\n  if (string === null || string === undefined) return;\n\n  ignore = (ignore || '').replace(/[^&\"<>\\']/g, '');\n  pattern = '([&\"<>\\'])'.replace(new RegExp('[' + ignore + ']', 'g'), '');\n\n  return string.replace(new RegExp(pattern, 'g'), function(str, item) {\n            return escape.map[item];\n          })\n}\n\nvar map = escape.map = {\n    '>': '&gt;'\n  , '<': '&lt;'\n  , \"'\": '&apos;'\n  , '\"': '&quot;'\n  , '&': '&amp;'\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xml-escape/index.js\n// module id = 38\n// module chunks = 0 1"],"mappingsaA;AA7BA;AA8BA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;AA6BA;;;;;;AAMA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;;;AAlFA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;;;;AAxEA;AACA;AAoIA;;;;;;AAIA;AACA;;;;AAIA;AALA;AACA;AAOA;;;;;;;;;ACpKA;AACA;AACA;;;;AAIA;AACA;;;;AAIA;AACA;AACA;;;;;AAKA;AACA;AACA;;;AAGA;AACA;;;;;;;AAOA;AARA;AAjBA;;;;;;;;;;;;;ACNA;;;;;;AAMA;;;;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;AClFA;AACA;AAEA;AACA;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;AASA;;;;;;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AA1CA;AACA;AAgDA;;;;AAIA;AACA;AACA;;;;;AAKA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AAdA;AACA;AAgBA;;;;;;ACprIA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;;;;;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;ACrxkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC1FA;AACA;AACA;;;;AAIA;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;;;;;;AAMA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;AAKA;AACA;AACA;;;;;AAKA;AACA;AAEA;;;;;;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAgBA;AAAA;AACA;AAEA;AAHA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;AA+CA;AACA;AACA;;;;;;;;;AAOA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AACA;AADA;AAYA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAWA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AATA;AAWA;AACA;AACA;;;;;;;;AAQA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AAFA;AAWA;AACA;AACA;AAFA;AAZA;AAwBA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAYA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AACA;AACA;AAFA;AAAA;AAAA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA/oCA;AACA;AACA;;;;AAhGA;AACA;AA+uCA;AACA;AACA;AADA;AACA;AACA;;;;;;;AC9ydxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;;;AACA;;;;;;AAMA;AAAA;AACA;AAEA;AAHA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAgBA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAcA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAkBA;;;;;AAKA;AACA;AACA;;;AAlFA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;;;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAhHA;AACA;AA2HA;;;;;;;;;;;;;ACjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;;;;AAMA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AAXA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAqCA;;;AAGA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AA1ZA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;;;AAgYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;ACrhBA;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;;;;;;;AAOA;AACA;AACA;AAFA;AACA;AAKA;;;AACA;;;;;;;AAOA;AAAA;AACA;AAEA;;;;AAHA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA4BA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAcA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAvJA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;;;;AA5DA;AACA;AA4MA;;;;;;;;;;;;;;;;;;;ACvOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;;;;;;;AAOA;AAAA;AACA;AAEA;AAHA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAmBA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAOA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;;;AAvFA;AACA;AACA;;;;AA7CA;AACA;AAoIA;;;;;;;;;;;;;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AACA;AAIA;AAcA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAgBA;AACA;AACA;AAIA;AACA;AAIA;AACA;AACA;AAMA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAKA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;AChLA;AACA;AACA;;;;;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;;;;;AAKA;AACA;;;;;;AAGA;;;;;AAGA;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;AAJA;AACA;AAKA;;;;;;;;;;;;;ACvGA;AACA;AACA;AACA;;;;;;;;;;AAUA;;;;;;;;;AAQA;AACA;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChtpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChzvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnFA;AACA;AACA;AACA;AACA;;;;;;;ACJA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}